#-----------------------------------------------------------
# Vivado v2016.4 (64-bit)
# SW Build 1756540 on Mon Jan 23 19:11:23 MST 2017
# IP Build 1755317 on Mon Jan 23 20:30:07 MST 2017
# Start of session at: Thu Sep 17 23:54:41 2020
# Process ID: 2964
# Current directory: D:/SDUP_2020_projekt_H/Huffman/Huffman.runs/synth_5
# Command line: vivado.exe -log huffman_decoder.vds -product Vivado -mode batch -messageDb vivado.pb -notrace -source huffman_decoder.tcl
# Log file: D:/SDUP_2020_projekt_H/Huffman/Huffman.runs/synth_5/huffman_decoder.vds
# Journal file: D:/SDUP_2020_projekt_H/Huffman/Huffman.runs/synth_5\vivado.jou
#-----------------------------------------------------------
source huffman_decoder.tcl -notrace
Command: synth_design -top huffman_decoder -part xc7z020clg484-1 -directive AlternateRoutability -keep_equivalent_registers -no_lc -no_srlextract -shreg_min_size 10
Starting synth_design
Attempting to get a license for feature 'Synthesis' and/or device 'xc7z020'
INFO: [Common 17-349] Got license for feature 'Synthesis' and/or device 'xc7z020'
INFO: Launching helper process for spawning children vivado processes
INFO: Helper process launched with PID 12372 
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:62]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:63]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:64]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:65]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:66]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:67]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:68]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:69]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:70]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:71]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:72]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:73]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:74]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:75]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:76]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:77]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:78]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:79]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:80]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:81]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:83]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:84]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:85]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:86]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:87]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:88]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:89]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:90]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:91]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:92]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:93]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:94]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:95]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:96]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:97]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:98]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:99]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:100]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:101]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:102]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:104]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:105]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:106]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:107]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:108]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:109]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:110]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:111]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:112]
WARNING: [Synth 8-1849] concatenation with unsized literal; will interpret as 32 bits [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:113]
---------------------------------------------------------------------------------
Starting RTL Elaboration : Time (s): cpu = 00:00:08 ; elapsed = 00:00:09 . Memory (MB): peak = 333.668 ; gain = 124.242
---------------------------------------------------------------------------------
INFO: [Synth 8-638] synthesizing module 'huffman_decoder' [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:47]
	Parameter symbols_amount bound to: 25 - type: integer 
	Parameter max_data_count bound to: 1024 - type: integer 
	Parameter max_bits bound to: 1024 - type: integer 
INFO: [Synth 8-638] synthesizing module 'create_tree' [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/create_tree.v:67]
	Parameter max_amount_of_symbols bound to: 25 - type: integer 
	Parameter max_length_of_tree bound to: 99 - type: integer 
INFO: [Synth 8-155] case statement is not full and has no default [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/create_tree.v:147]
INFO: [Synth 8-256] done synthesizing module 'create_tree' (1#1) [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/create_tree.v:67]
INFO: [Synth 8-638] synthesizing module 'raw_decoder' [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/raw_decoder.v:47]
INFO: [Synth 8-155] case statement is not full and has no default [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/raw_decoder.v:161]
INFO: [Synth 8-155] case statement is not full and has no default [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/raw_decoder.v:90]
INFO: [Synth 8-256] done synthesizing module 'raw_decoder' (2#1) [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/raw_decoder.v:47]
INFO: [Synth 8-155] case statement is not full and has no default [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:189]
INFO: [Synth 8-256] done synthesizing module 'huffman_decoder' (3#1) [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/huffman_decoder.v:47]
---------------------------------------------------------------------------------
Finished RTL Elaboration : Time (s): cpu = 00:00:09 ; elapsed = 00:00:10 . Memory (MB): peak = 364.375 ; gain = 154.949
---------------------------------------------------------------------------------

Report Check Netlist: 
+------+------------------+-------+---------+-------+------------------+
|      |Item              |Errors |Warnings |Status |Description       |
+------+------------------+-------+---------+-------+------------------+
|1     |multi_driven_nets |      0|        0|Passed |Multi driven nets |
+------+------------------+-------+---------+-------+------------------+
---------------------------------------------------------------------------------
Finished RTL Optimization Phase 1 : Time (s): cpu = 00:00:09 ; elapsed = 00:00:11 . Memory (MB): peak = 364.375 ; gain = 154.949
---------------------------------------------------------------------------------
INFO: [Device 21-403] Loading part xc7z020clg484-1
INFO: [Project 1-570] Preparing netlist for logic optimization

Processing XDC Constraints
Initializing timing engine
Parsing XDC File [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/constrs_2/new/huffman_decoder.xdc]
Finished Parsing XDC File [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/constrs_2/new/huffman_decoder.xdc]
Completed Processing XDC Constraints

INFO: [Project 1-111] Unisim Transformation Summary:
No Unisim elements were transformed.

Constraint Validation Runtime : Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.018 . Memory (MB): peak = 694.262 ; gain = 0.125
---------------------------------------------------------------------------------
Finished Constraint Validation : Time (s): cpu = 00:00:20 ; elapsed = 00:00:23 . Memory (MB): peak = 694.262 ; gain = 484.836
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Loading Part and Timing Information
---------------------------------------------------------------------------------
Loading part: xc7z020clg484-1
---------------------------------------------------------------------------------
Finished Loading Part and Timing Information : Time (s): cpu = 00:00:20 ; elapsed = 00:00:23 . Memory (MB): peak = 694.262 ; gain = 484.836
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Applying 'set_property' XDC Constraints
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished applying 'set_property' XDC Constraints : Time (s): cpu = 00:00:20 ; elapsed = 00:00:23 . Memory (MB): peak = 694.262 ; gain = 484.836
---------------------------------------------------------------------------------
INFO: [Synth 8-5818] HDL ADVISOR - The operator resource <adder> is shared. To prevent sharing consider applying a KEEP on the output of the operator [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/create_tree.v:215]
INFO: [Synth 8-5544] ROM "ascii_symbols_tab" won't be mapped to Block RAM because address size (4) smaller than threshold (5)
INFO: [Synth 8-5544] ROM "state" won't be mapped to Block RAM because address size (1) smaller than threshold (5)
INFO: [Synth 8-5544] ROM "state" won't be mapped to Block RAM because address size (1) smaller than threshold (5)
INFO: [Synth 8-5544] ROM "group_state" won't be mapped to Block RAM because address size (1) smaller than threshold (5)
INFO: [Synth 8-5545] ROM "grow_tree_state" won't be mapped to RAM because address size (32) is larger than maximum supported(25)
INFO: [Synth 8-5544] ROM "current_symbol" won't be mapped to Block RAM because address size (3) smaller than threshold (5)
INFO: [Synth 8-802] inferred FSM for state register 'state_reg' in module 'create_tree'
INFO: [Synth 8-802] inferred FSM for state register 'group_state_reg' in module 'create_tree'
INFO: [Synth 8-802] inferred FSM for state register 'tree_state_reg' in module 'create_tree'
INFO: [Synth 8-5818] HDL ADVISOR - The operator resource <adder> is shared. To prevent sharing consider applying a KEEP on the output of the operator [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/raw_decoder.v:178]
---------------------------------------------------------------------------------------------------
                   State |                     New Encoding |                Previous Encoding 
---------------------------------------------------------------------------------------------------
                  iSTATE |                              000 |                              000
                 iSTATE0 |                              001 |                              111
                 iSTATE1 |                              010 |                              001
                 iSTATE2 |                              011 |                              010
                 iSTATE3 |                              100 |                              011
                 iSTATE5 |                              101 |                              101
                 iSTATE6 |                              110 |                              110
                 iSTATE4 |                              111 |                              100
---------------------------------------------------------------------------------------------------
INFO: [Synth 8-3354] encoded FSM with state register 'group_state_reg' using encoding 'sequential' in module 'create_tree'
---------------------------------------------------------------------------------------------------
                   State |                     New Encoding |                Previous Encoding 
---------------------------------------------------------------------------------------------------
                  iSTATE |                              000 |                              000
                 iSTATE0 |                              001 |                              001
                 iSTATE1 |                              010 |                              101
                 iSTATE2 |                              011 |                              100
                 iSTATE3 |                              100 |                              110
                 iSTATE4 |                              101 |                              111
                 iSTATE5 |                              110 |                              010
                 iSTATE6 |                              111 |                              011
---------------------------------------------------------------------------------------------------
INFO: [Synth 8-3354] encoded FSM with state register 'tree_state_reg' using encoding 'sequential' in module 'create_tree'
---------------------------------------------------------------------------------------------------
                   State |                     New Encoding |                Previous Encoding 
---------------------------------------------------------------------------------------------------
                  iSTATE |                             0000 |                             0000
                 iSTATE0 |                             0001 |                             1100
                 iSTATE1 |                             0010 |                             0001
                 iSTATE4 |                             0011 |                             0100
                 iSTATE2 |                             0100 |                             0010
                 iSTATE5 |                             0101 |                             0011
                 iSTATE3 |                             0110 |                             0101
                 iSTATE6 |                             0111 |                             0110
                 iSTATE7 |                             1000 |                             0111
                 iSTATE8 |                             1001 |                             1000
                 iSTATE9 |                             1010 |                             1001
                iSTATE10 |                             1011 |                             1010
                iSTATE11 |                             1100 |                             1011
---------------------------------------------------------------------------------------------------
INFO: [Synth 8-3354] encoded FSM with state register 'state_reg' using encoding 'sequential' in module 'create_tree'
---------------------------------------------------------------------------------
Finished RTL Optimization Phase 2 : Time (s): cpu = 00:00:21 ; elapsed = 00:00:24 . Memory (MB): peak = 694.262 ; gain = 484.836
---------------------------------------------------------------------------------

Report RTL Partitions: 
+-+--------------+------------+----------+
| |RTL Partition |Replication |Instances |
+-+--------------+------------+----------+
+-+--------------+------------+----------+
---------------------------------------------------------------------------------
Start RTL Component Statistics 
---------------------------------------------------------------------------------
Detailed RTL Component Info : 
+---Adders : 
	   3 Input     32 Bit       Adders := 2     
	   2 Input     32 Bit       Adders := 19    
	   2 Input     16 Bit       Adders := 3     
	   2 Input      9 Bit       Adders := 1     
	   2 Input      8 Bit       Adders := 4     
	   2 Input      7 Bit       Adders := 1     
+---Registers : 
	               32 Bit    Registers := 20    
	               16 Bit    Registers := 5     
	               11 Bit    Registers := 1     
	                9 Bit    Registers := 1     
	                8 Bit    Registers := 15    
	                7 Bit    Registers := 5     
	                6 Bit    Registers := 3     
	                5 Bit    Registers := 5     
	                4 Bit    Registers := 2     
	                3 Bit    Registers := 3     
	                1 Bit    Registers := 6     
+---Multipliers : 
	                 1x32  Multipliers := 1     
+---RAMs : 
	               8K Bit         RAMs := 1     
	               3K Bit         RAMs := 3     
	             1024 Bit         RAMs := 2     
	               1K Bit         RAMs := 1     
	              832 Bit         RAMs := 2     
	              800 Bit         RAMs := 1     
	              400 Bit         RAMs := 2     
	              208 Bit         RAMs := 2     
	              200 Bit         RAMs := 2     
+---Muxes : 
	   8 Input     32 Bit        Muxes := 15    
	   5 Input     32 Bit        Muxes := 1     
	   2 Input     32 Bit        Muxes := 9     
	  13 Input     32 Bit        Muxes := 6     
	  14 Input     32 Bit        Muxes := 3     
	  10 Input     32 Bit        Muxes := 1     
	  23 Input     32 Bit        Muxes := 1     
	  10 Input     16 Bit        Muxes := 1     
	   2 Input      8 Bit        Muxes := 1     
	  13 Input      8 Bit        Muxes := 1     
	  14 Input      8 Bit        Muxes := 1     
	  10 Input      8 Bit        Muxes := 3     
	   8 Input      7 Bit        Muxes := 4     
	  13 Input      7 Bit        Muxes := 2     
	  13 Input      5 Bit        Muxes := 1     
	   3 Input      5 Bit        Muxes := 1     
	  13 Input      4 Bit        Muxes := 1     
	  16 Input      4 Bit        Muxes := 1     
	   2 Input      4 Bit        Muxes := 7     
	  10 Input      4 Bit        Muxes := 1     
	  14 Input      4 Bit        Muxes := 1     
	  15 Input      4 Bit        Muxes := 1     
	   8 Input      3 Bit        Muxes := 4     
	   2 Input      3 Bit        Muxes := 5     
	  14 Input      3 Bit        Muxes := 2     
	   3 Input      3 Bit        Muxes := 1     
	  10 Input      3 Bit        Muxes := 1     
	  23 Input      3 Bit        Muxes := 1     
	   2 Input      2 Bit        Muxes := 4     
	  21 Input      1 Bit        Muxes := 6     
	  28 Input      1 Bit        Muxes := 1     
	   8 Input      1 Bit        Muxes := 14    
	  15 Input      1 Bit        Muxes := 5     
	  11 Input      1 Bit        Muxes := 1     
	  13 Input      1 Bit        Muxes := 22    
	  14 Input      1 Bit        Muxes := 16    
	  10 Input      1 Bit        Muxes := 7     
	  23 Input      1 Bit        Muxes := 23    
	   5 Input      1 Bit        Muxes := 1     
	   2 Input      1 Bit        Muxes := 8     
	   6 Input      1 Bit        Muxes := 1     
---------------------------------------------------------------------------------
Finished RTL Component Statistics 
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start RTL Hierarchical Component Statistics 
---------------------------------------------------------------------------------
Hierarchical RTL Component report 
Module huffman_decoder 
Detailed RTL Component Info : 
+---Adders : 
	   2 Input     32 Bit       Adders := 2     
+---Registers : 
	               32 Bit    Registers := 2     
	               16 Bit    Registers := 1     
	                8 Bit    Registers := 7     
	                5 Bit    Registers := 1     
	                1 Bit    Registers := 4     
+---RAMs : 
	               8K Bit         RAMs := 1     
	             1024 Bit         RAMs := 1     
	              200 Bit         RAMs := 2     
+---Muxes : 
	   2 Input     32 Bit        Muxes := 2     
	  23 Input     32 Bit        Muxes := 1     
	   3 Input      5 Bit        Muxes := 1     
	   2 Input      4 Bit        Muxes := 6     
	  23 Input      3 Bit        Muxes := 1     
	   2 Input      2 Bit        Muxes := 2     
	  23 Input      1 Bit        Muxes := 20    
	   2 Input      1 Bit        Muxes := 8     
	   6 Input      1 Bit        Muxes := 1     
Module create_tree 
Detailed RTL Component Info : 
+---Adders : 
	   3 Input     32 Bit       Adders := 2     
	   2 Input     32 Bit       Adders := 10    
	   2 Input      8 Bit       Adders := 1     
	   2 Input      7 Bit       Adders := 1     
+---Registers : 
	               32 Bit    Registers := 14    
	               11 Bit    Registers := 1     
	                9 Bit    Registers := 1     
	                8 Bit    Registers := 2     
	                7 Bit    Registers := 5     
	                5 Bit    Registers := 4     
	                3 Bit    Registers := 3     
	                1 Bit    Registers := 1     
+---RAMs : 
	               3K Bit         RAMs := 3     
	              832 Bit         RAMs := 2     
	              208 Bit         RAMs := 2     
+---Muxes : 
	   8 Input     32 Bit        Muxes := 15    
	   5 Input     32 Bit        Muxes := 1     
	   2 Input     32 Bit        Muxes := 5     
	  13 Input     32 Bit        Muxes := 6     
	   2 Input      8 Bit        Muxes := 1     
	  13 Input      8 Bit        Muxes := 1     
	   8 Input      7 Bit        Muxes := 4     
	  13 Input      7 Bit        Muxes := 2     
	  13 Input      5 Bit        Muxes := 1     
	  13 Input      4 Bit        Muxes := 1     
	  16 Input      4 Bit        Muxes := 1     
	   8 Input      3 Bit        Muxes := 4     
	   2 Input      3 Bit        Muxes := 1     
	  14 Input      3 Bit        Muxes := 1     
	   3 Input      3 Bit        Muxes := 1     
	  10 Input      3 Bit        Muxes := 1     
	   2 Input      2 Bit        Muxes := 2     
	  21 Input      1 Bit        Muxes := 6     
	  28 Input      1 Bit        Muxes := 1     
	   8 Input      1 Bit        Muxes := 14    
	  15 Input      1 Bit        Muxes := 5     
	  11 Input      1 Bit        Muxes := 1     
	  13 Input      1 Bit        Muxes := 22    
Module raw_decoder 
Detailed RTL Component Info : 
+---Adders : 
	   2 Input     32 Bit       Adders := 7     
	   2 Input     16 Bit       Adders := 3     
	   2 Input      9 Bit       Adders := 1     
	   2 Input      8 Bit       Adders := 3     
+---Registers : 
	               32 Bit    Registers := 4     
	               16 Bit    Registers := 4     
	                8 Bit    Registers := 6     
	                6 Bit    Registers := 3     
	                4 Bit    Registers := 2     
	                1 Bit    Registers := 1     
+---Multipliers : 
	                 1x32  Multipliers := 1     
+---RAMs : 
	             1024 Bit         RAMs := 1     
	               1K Bit         RAMs := 1     
	              800 Bit         RAMs := 1     
	              400 Bit         RAMs := 2     
+---Muxes : 
	  14 Input     32 Bit        Muxes := 3     
	   2 Input     32 Bit        Muxes := 2     
	  10 Input     32 Bit        Muxes := 1     
	  10 Input     16 Bit        Muxes := 1     
	  14 Input      8 Bit        Muxes := 1     
	  10 Input      8 Bit        Muxes := 3     
	   2 Input      4 Bit        Muxes := 1     
	  10 Input      4 Bit        Muxes := 1     
	  14 Input      4 Bit        Muxes := 1     
	  15 Input      4 Bit        Muxes := 1     
	   2 Input      3 Bit        Muxes := 4     
	  14 Input      3 Bit        Muxes := 1     
	  14 Input      1 Bit        Muxes := 16    
	  10 Input      1 Bit        Muxes := 7     
	  23 Input      1 Bit        Muxes := 3     
	   5 Input      1 Bit        Muxes := 1     
---------------------------------------------------------------------------------
Finished RTL Hierarchical Component Statistics
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Part Resource Summary
---------------------------------------------------------------------------------
Part Resources:
DSPs: 220 (col length:60)
BRAMs: 280 (col length: RAMB18 60 RAMB36 30)
---------------------------------------------------------------------------------
Finished Part Resource Summary
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Cross Boundary and Area Optimization
---------------------------------------------------------------------------------
INFO: [Synth 8-5845] Not enough pipeline registers after wide multiplier. Recommended levels of pipeline registers is 2 [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/raw_decoder.v:182]
WARNING: [Synth 8-3936] Found unconnected internal register 'tree/code_reg' and it is trimmed from '32' to '8' bits. [D:/SDUP_2020_projekt_H/Huffman/Huffman.srcs/sources_1/new/create_tree.v:417]
INFO: [Synth 8-5784] Optimized 24 bits of RAM "decoder/code_list_reg" due to constant propagation. Old ram width 32 bits, new ram width 8 bits.
INFO: [Synth 8-5583] The signal decoder/code_list_reg is implemented as block RAM but is better mapped onto distributed LUT RAM for the following reason(s): The depth (6 address bits) is shallow. Please use attribute (* ram_style = "distributed" *) to instruct Vivado to infer distributed LUT RAM.
INFO: [Synth 8-4652] Swapped enable and write-enable on 1 RAM instances of RAM decoder/decoded_characters_array_reg to conserve power
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\ascii_symbol_in_reg[7] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[16] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[17] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[18] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[19] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[20] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[21] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[22] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[23] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[24] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[25] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[26] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[27] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[28] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[29] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[30] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[31] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[11] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[12] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[13] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[14] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbol_prob_in_reg[15] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift_reg[0] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift2_reg[0] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift_reg[1] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift_reg[2] )
INFO: [Synth 8-3333] propagating constant 1 across sequential element (\decoder_ascii_symbols_length_reg[0] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder_ascii_symbols_length_reg[1] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder_ascii_symbols_length_reg[2] )
INFO: [Synth 8-3333] propagating constant 1 across sequential element (\decoder_ascii_symbols_length_reg[3] )
INFO: [Synth 8-3333] propagating constant 1 across sequential element (\decoder_ascii_symbols_length_reg[4] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder_ascii_symbols_length_reg[5] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder_ascii_symbols_length_reg[6] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder_ascii_symbols_length_reg[7] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder_ascii_symbol_reg[7] )
INFO: [Synth 8-3333] propagating constant 1 across sequential element (\symbols_number_reg[0] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbols_number_reg[1] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbols_number_reg[2] )
INFO: [Synth 8-3333] propagating constant 1 across sequential element (\symbols_number_reg[3] )
INFO: [Synth 8-3333] propagating constant 1 across sequential element (\symbols_number_reg[4] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbols_number_reg[5] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbols_number_reg[6] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\symbols_number_reg[7] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift2_reg[2] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift2_reg[3] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift_reg[4] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift_reg[5] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift2_reg[6] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift2_reg[7] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift2_reg[8] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift_reg[8] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift_reg[9] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\tree/shift_reg[10] )
INFO: [Synth 8-3333] propagating constant 1 across sequential element (\decoder/symbol_amount_var_reg[0] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder/symbol_amount_var_reg[1] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder/symbol_amount_var_reg[2] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder/symbol_amount_var_reg[5] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder/symbol_amount_var_reg[6] )
INFO: [Synth 8-3333] propagating constant 0 across sequential element (\decoder/symbol_amount_var_reg[7] )
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[31]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[30]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[29]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[28]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[27]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[26]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[25]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[24]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[23]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[22]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[21]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[20]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[19]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[18]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[17]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[16]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[15]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[14]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[13]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[12]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[11]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[10]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[9]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[8]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/length_of_tree_tab_reg[7]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[31]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[30]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[29]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[28]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[27]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[26]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[25]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[24]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[23]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[22]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[21]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[20]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[19]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[18]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[17]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[16]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[15]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[14]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[13]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[12]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[11]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[10]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[9]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[8]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/position_reg[7]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[31]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[30]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[29]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[28]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[27]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[26]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[25]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[24]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[23]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[22]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[21]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[20]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[19]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[18]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[17]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[16]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[15]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[14]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[13]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[12]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[11]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[10]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[9]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[8]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/counter_reg[7]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift_reg[10]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift_reg[9]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift_reg[8]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift_reg[5]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift_reg[4]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift_reg[2]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift_reg[1]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift_reg[0]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift2_reg[8]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift2_reg[7]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift2_reg[6]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift2_reg[3]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift2_reg[2]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/shift2_reg[0]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[5]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[6]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[7]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[8]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[9]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[10]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[11]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[12]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[13]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[14]) is unused and will be removed from module huffman_decoder.
WARNING: [Synth 8-3332] Sequential element (tree/ascii_symbol_it_reg[15]) is unused and will be removed from module huffman_decoder.
INFO: [Common 17-14] Message 'Synth 8-3332' appears 100 times and further instances of the messages will be disabled. Use the Tcl command set_msg_config to change the current settings.
---------------------------------------------------------------------------------
Finished Cross Boundary and Area Optimization : Time (s): cpu = 00:00:29 ; elapsed = 00:00:33 . Memory (MB): peak = 694.262 ; gain = 484.836
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start ROM, RAM, DSP and Shift Register Reporting
---------------------------------------------------------------------------------

ROM:
+----------------+---------------+---------------+----------------+
|Module Name     | RTL Object    | Depth x Width | Implemented As | 
+----------------+---------------+---------------+----------------+
|huffman_decoder | ascii_symbols | 32x7          | LUT            | 
|huffman_decoder | probs         | 32x11         | LUT            | 
|huffman_decoder | ascii_symbols | 32x7          | LUT            | 
|huffman_decoder | probs         | 32x11         | LUT            | 
+----------------+---------------+---------------+----------------+


Block RAM: Preliminary Mapping  Report (see note below)
+----------------+------------------------------+------------------------+---+---+------------------------+---+---+------------------+--------+--------+
|Module Name     | RTL Object                   | PORT A (Depth x Width) | W | R | PORT B (Depth x Width) | W | R | Ports driving FF | RAMB18 | RAMB36 | 
+----------------+------------------------------+------------------------+---+---+------------------------+---+---+------------------+--------+--------+
|create_tree     | prob_tab_reg                 | 32 x 32(WRITE_FIRST)   |   | R | 32 x 32(READ_FIRST)    | W |   | Port A and B     | 1      | 0      | 
|raw_decoder     | code_list_reg                | 64 x 32(READ_FIRST)    | W |   | 64 x 32(WRITE_FIRST)   |   | R | Port A and B     | 1      | 0      | 
|raw_decoder     | decoded_characters_array_reg | 128 x 8(READ_FIRST)    | W |   | 128 x 8(WRITE_FIRST)   |   | R | Port A and B     | 1      | 0      | 
|huffman_decoder | final_output_reg             | 1 K x 8(READ_FIRST)    | W |   | 1 K x 8(WRITE_FIRST)   |   | R | Port A and B     | 1      | 0      | 
|huffman_decoder | raw_decoder_input_reg        | 1 K x 1(READ_FIRST)    | W |   | 1 K x 1(WRITE_FIRST)   |   | R | Port A and B     | 1      | 0      | 
+----------------+------------------------------+------------------------+---+---+------------------------+---+---+------------------+--------+--------+

Note: The table above is a preliminary report that shows the Block RAMs at the current stage of the synthesis flow. Some Block RAMs may be reimplemented as non Block RAM primitives later in the synthesis flow. Multiple instantiated Block RAMs are reported only once. 

Distributed RAM: Preliminary Mapping  Report (see note below)
+----------------+-----------------------------+-----------+----------------------+-------------------------------+
|Module Name     | RTL Object                  | Inference | Size (Depth x Width) | Primitives                    | 
+----------------+-----------------------------+-----------+----------------------+-------------------------------+
|huffman_decoder | tree/ID_reg                 | Implied   | 128 x 32             | RAM64X1D x 24  RAM64M x 120   | 
|huffman_decoder | tree/ascii_symbols_tab_reg  | Implied   | 32 x 8               | RAM32M x 4                    | 
|huffman_decoder | tree/Link_reg               | Implied   | 128 x 32             | RAM64X1D x 12  RAM64M x 60    | 
|huffman_decoder | tree/P_reg                  | Implied   | 128 x 32             | RAM64X1D x 28  RAM64M x 140   | 
|huffman_decoder | tree/length_of_code_tab_reg | Implied   | 32 x 8               | RAM32M x 6                    | 
|huffman_decoder | tree/code_tab_reg           | Implied   | 32 x 32              | RAM16X1D x 64                 | 
|huffman_decoder | decoder/codes_lengths_reg   | Implied   | 64 x 8               | RAM64M x 3                    | 
|huffman_decoder | decoder/input_data_reg      | Implied   | 1 K x 1              | RAM128X1D x 8                 | 
|huffman_decoder | decoder/symbols_reg         | Implied   | 64 x 8               | RAM64M x 3                    | 
|huffman_decoder | codes_tab_reg               | Implied   | 32 x 8               | RAM16X1S x 16                 | 
|huffman_decoder | codes_tab_length_reg        | Implied   | 32 x 8               | RAM16X1S x 16                 | 
+----------------+-----------------------------+-----------+----------------------+-------------------------------+

Note: The table above is a preliminary report that shows the Distributed RAMs at the current stage of the synthesis flow. Some Distributed RAMs may be reimplemented as non Distributed RAM primitives later in the synthesis flow. Multiple instantiated RAMs are reported only once.
---------------------------------------------------------------------------------
Finished ROM, RAM, DSP and Shift Register Reporting
---------------------------------------------------------------------------------

Report RTL Partitions: 
+-+--------------+------------+----------+
| |RTL Partition |Replication |Instances |
+-+--------------+------------+----------+
+-+--------------+------------+----------+
---------------------------------------------------------------------------------
Start Timing Optimization
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Applying XDC Timing Constraints
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Applying XDC Timing Constraints : Time (s): cpu = 00:00:41 ; elapsed = 00:00:45 . Memory (MB): peak = 694.262 ; gain = 484.836
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Timing Optimization : Time (s): cpu = 00:00:44 ; elapsed = 00:00:48 . Memory (MB): peak = 730.195 ; gain = 520.770
---------------------------------------------------------------------------------

Report RTL Partitions: 
+-+--------------+------------+----------+
| |RTL Partition |Replication |Instances |
+-+--------------+------------+----------+
+-+--------------+------------+----------+
---------------------------------------------------------------------------------
Start Technology Mapping
---------------------------------------------------------------------------------
INFO: [Synth 8-4480] The timing for the instance tree/prob_tab_reg (implemented as a block RAM) might be sub-optimal as no optional output register could be merged into the block ram. Providing additional output register may help in improving timing.
INFO: [Synth 8-4480] The timing for the instance decoder/code_list_reg (implemented as a block RAM) might be sub-optimal as no optional output register could be merged into the block ram. Providing additional output register may help in improving timing.
INFO: [Synth 8-4480] The timing for the instance decoder/decoded_characters_array_reg (implemented as a block RAM) might be sub-optimal as no optional output register could be merged into the block ram. Providing additional output register may help in improving timing.
INFO: [Synth 8-4480] The timing for the instance final_output_reg (implemented as a block RAM) might be sub-optimal as no optional output register could be merged into the block ram. Providing additional output register may help in improving timing.
INFO: [Synth 8-4480] The timing for the instance raw_decoder_input_reg (implemented as a block RAM) might be sub-optimal as no optional output register could be merged into the block ram. Providing additional output register may help in improving timing.
---------------------------------------------------------------------------------
Finished Technology Mapping : Time (s): cpu = 00:00:47 ; elapsed = 00:00:51 . Memory (MB): peak = 745.676 ; gain = 536.250
---------------------------------------------------------------------------------

Report RTL Partitions: 
+-+--------------+------------+----------+
| |RTL Partition |Replication |Instances |
+-+--------------+------------+----------+
+-+--------------+------------+----------+
---------------------------------------------------------------------------------
Start IO Insertion
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Flattening Before IO Insertion
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Flattening Before IO Insertion
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Final Netlist Cleanup
---------------------------------------------------------------------------------
INFO: [Synth 8-5365] Flop tree/length_of_tree_tab_reg[6] is being inverted and renamed to tree/length_of_tree_tab_reg[6]_inv.
---------------------------------------------------------------------------------
Finished Final Netlist Cleanup
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished IO Insertion : Time (s): cpu = 00:00:48 ; elapsed = 00:00:52 . Memory (MB): peak = 745.676 ; gain = 536.250
---------------------------------------------------------------------------------

Report Check Netlist: 
+------+------------------+-------+---------+-------+------------------+
|      |Item              |Errors |Warnings |Status |Description       |
+------+------------------+-------+---------+-------+------------------+
|1     |multi_driven_nets |      0|        0|Passed |Multi driven nets |
+------+------------------+-------+---------+-------+------------------+
---------------------------------------------------------------------------------
Start Renaming Generated Instances
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Renaming Generated Instances : Time (s): cpu = 00:00:48 ; elapsed = 00:00:52 . Memory (MB): peak = 745.676 ; gain = 536.250
---------------------------------------------------------------------------------

Report RTL Partitions: 
+-+--------------+------------+----------+
| |RTL Partition |Replication |Instances |
+-+--------------+------------+----------+
+-+--------------+------------+----------+
---------------------------------------------------------------------------------
Start Rebuilding User Hierarchy
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Rebuilding User Hierarchy : Time (s): cpu = 00:00:48 ; elapsed = 00:00:52 . Memory (MB): peak = 745.676 ; gain = 536.250
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Renaming Generated Ports
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Renaming Generated Ports : Time (s): cpu = 00:00:48 ; elapsed = 00:00:52 . Memory (MB): peak = 745.676 ; gain = 536.250
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Handling Custom Attributes
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Handling Custom Attributes : Time (s): cpu = 00:00:48 ; elapsed = 00:00:52 . Memory (MB): peak = 745.676 ; gain = 536.250
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Renaming Generated Nets
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Finished Renaming Generated Nets : Time (s): cpu = 00:00:48 ; elapsed = 00:00:52 . Memory (MB): peak = 745.676 ; gain = 536.250
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------
Start Writing Synthesis Report
---------------------------------------------------------------------------------

Report BlackBoxes: 
+-+--------------+----------+
| |BlackBox name |Instances |
+-+--------------+----------+
+-+--------------+----------+

Report Cell Usage: 
+------+-----------+------+
|      |Cell       |Count |
+------+-----------+------+
|1     |BUFG       |     1|
|2     |CARRY4     |   192|
|3     |LUT1       |   391|
|4     |LUT2       |   217|
|5     |LUT3       |   409|
|6     |LUT4       |   396|
|7     |LUT5       |   299|
|8     |LUT6       |   556|
|9     |RAM128X1D  |     2|
|10    |RAM16X1D   |    16|
|11    |RAM16X1S   |    32|
|12    |RAM32M     |    10|
|13    |RAM64M     |   326|
|14    |RAM64X1D   |    64|
|15    |RAMB18E1   |     2|
|16    |RAMB18E1_1 |     3|
|17    |XORCY      |     1|
|18    |FDRE       |  1031|
|19    |IBUF       |    20|
|20    |OBUF       |     9|
+------+-----------+------+

Report Instance Areas: 
+------+----------+------------+------+
|      |Instance  |Module      |Cells |
+------+----------+------------+------+
|1     |top       |            |  3977|
|2     |  decoder |raw_decoder |   845|
|3     |  tree    |create_tree |  2463|
+------+----------+------------+------+
---------------------------------------------------------------------------------
Finished Writing Synthesis Report : Time (s): cpu = 00:00:48 ; elapsed = 00:00:52 . Memory (MB): peak = 745.676 ; gain = 536.250
---------------------------------------------------------------------------------
Synthesis finished with 0 errors, 0 critical warnings and 162 warnings.
Synthesis Optimization Runtime : Time (s): cpu = 00:00:32 ; elapsed = 00:00:38 . Memory (MB): peak = 745.676 ; gain = 168.332
Synthesis Optimization Complete : Time (s): cpu = 00:00:48 ; elapsed = 00:00:52 . Memory (MB): peak = 745.676 ; gain = 536.250
INFO: [Project 1-571] Translating synthesized netlist
INFO: [Netlist 29-17] Analyzing 668 Unisim elements for replacement
INFO: [Netlist 29-28] Unisim Transformation completed in 1 CPU seconds
INFO: [Project 1-570] Preparing netlist for logic optimization
INFO: [Opt 31-138] Pushed 0 inverter(s) to 0 load pin(s).
INFO: [Project 1-111] Unisim Transformation Summary:
  A total of 451 instances were transformed.
  (MUXCY,XORCY) => CARRY4: 1 instances
  RAM128X1D => RAM128X1D (RAMD64E, RAMD64E, MUXF7, MUXF7, RAMD64E, RAMD64E): 2 instances
  RAM16X1D => RAM32X1D (RAMD32, RAMD32): 16 instances
  RAM16X1S => RAM32X1S (RAMS32): 32 instances
  RAM32M => RAM32M (RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMD32, RAMS32, RAMS32): 10 instances
  RAM64M => RAM64M (RAMD64E, RAMD64E, RAMD64E, RAMD64E): 326 instances
  RAM64X1D => RAM64X1D (RAMD64E, RAMD64E): 64 instances

INFO: [Common 17-83] Releasing license: Synthesis
108 Infos, 151 Warnings, 0 Critical Warnings and 0 Errors encountered.
synth_design completed successfully
synth_design: Time (s): cpu = 00:00:47 ; elapsed = 00:00:50 . Memory (MB): peak = 745.676 ; gain = 507.133
INFO: [Common 17-1381] The checkpoint 'D:/SDUP_2020_projekt_H/Huffman/Huffman.runs/synth_5/huffman_decoder.dcp' has been generated.
report_utilization: Time (s): cpu = 00:00:00 ; elapsed = 00:00:00.063 . Memory (MB): peak = 745.676 ; gain = 0.000
INFO: [Common 17-206] Exiting Vivado at Thu Sep 17 23:55:38 2020...
