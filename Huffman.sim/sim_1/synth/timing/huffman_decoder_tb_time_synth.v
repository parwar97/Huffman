// Copyright 1986-2016 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2016.4 (win64) Build 1756540 Mon Jan 23 19:11:23 MST 2017
// Date        : Sat Sep 05 11:39:14 2020
// Host        : DESKTOP-SERB9R5 running 64-bit major release  (build 9200)
// Command     : write_verilog -mode timesim -nolib -sdf_anno true -force -file
//               D:/SDUP_2020_projekt_H/Huffman/Huffman.sim/sim_1/synth/timing/huffman_decoder_tb_time_synth.v
// Design      : huffman_decoder
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xc7z020clg484-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

module RAM128X1D_UNIQ_BASE_
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD1703
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM32X1D_UNIQ_BASE_
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2287
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2288
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2289
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2290
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2291
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2292
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2293
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2294
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2295
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2296
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2297
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2298
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2299
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2300
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2301
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2302
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2303
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2304
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2305
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2306
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2307
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2308
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD2309
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1S_UNIQ_BASE_
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1654
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1655
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1656
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1657
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1658
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1659
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1660
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1661
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1662
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1663
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1664
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1665
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1666
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1667
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1668
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1669
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1670
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1671
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1672
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1673
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1674
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1675
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1676
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1677
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1678
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1679
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1680
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1681
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1682
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1683
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1684
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1685
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1686
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1687
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1688
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1689
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1690
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1691
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1692
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1693
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1694
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1695
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1696
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1697
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1698
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1699
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD1700
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM64M_UNIQ_BASE_
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1701
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1702
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1704
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1705
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1706
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1707
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1708
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1709
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1710
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1711
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1713
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1714
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1715
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1716
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1718
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1719
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1720
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1721
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1723
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1724
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1725
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1726
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1727
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1728
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1729
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1730
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1731
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1732
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1733
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1734
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1735
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1736
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1737
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1738
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1740
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1741
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1742
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1743
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1745
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1746
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1747
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1748
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1750
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1751
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1752
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1753
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1755
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1756
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1757
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1758
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1760
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1761
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1762
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1763
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1765
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1766
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1767
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1768
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1770
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1771
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1772
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1773
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1775
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1776
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1777
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1778
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1779
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1780
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1781
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1782
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1783
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1784
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1785
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1786
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1787
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1788
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1789
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1790
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1791
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1792
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1793
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1794
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1795
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1796
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1797
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1798
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1799
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1800
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1801
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1802
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1803
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1804
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1805
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1806
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1807
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1810
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1811
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1812
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1813
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1814
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1815
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1816
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1817
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1818
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1819
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1822
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1823
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1824
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1825
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1826
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1827
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1828
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1829
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1830
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1831
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1834
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1835
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1836
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1837
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1838
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1839
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1840
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1841
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1842
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1843
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1846
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1847
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1848
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1849
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1850
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1851
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1852
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1853
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1854
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1855
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1858
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1859
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1860
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1861
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1862
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1863
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1864
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1865
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1866
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1867
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1870
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1871
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1872
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1873
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1874
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1875
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1876
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1877
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1878
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1879
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1882
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1883
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1884
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1885
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1886
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1887
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1888
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1889
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1890
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1891
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1894
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1895
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1896
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1897
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1898
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1899
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1900
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1901
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1902
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1903
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1906
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1907
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1908
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1909
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1910
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1911
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1912
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1913
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1914
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1915
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1918
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1919
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1920
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1921
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1922
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1923
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1924
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1925
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1926
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1927
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1930
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1931
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1932
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1933
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1934
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1935
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1936
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1937
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1938
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1939
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1942
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1943
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1944
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1945
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1946
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1947
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1948
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1949
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1950
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1951
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1954
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1955
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1956
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1957
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1958
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1959
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1960
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1961
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1962
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1963
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1966
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1967
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1968
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1969
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1970
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1971
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1972
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1973
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1974
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1975
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1978
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1979
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1980
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1981
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1982
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1983
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1984
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1985
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1986
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1987
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1990
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1991
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1992
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1993
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1994
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1995
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1996
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1997
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1998
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD1999
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2002
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2003
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2004
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2005
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2006
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2007
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2008
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2009
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2010
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2011
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2014
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2015
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2016
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2017
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2018
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2019
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2020
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2021
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2022
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2023
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2026
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2027
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2028
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2029
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2030
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2031
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2032
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2033
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2034
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2035
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2038
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2039
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2040
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2041
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2042
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2043
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2044
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2045
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2046
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2047
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2050
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2051
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2052
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2053
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2054
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2055
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2056
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2057
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2058
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2059
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2062
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2063
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2064
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2065
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2066
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2067
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2068
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2069
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2070
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2071
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2074
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2075
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2076
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2077
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2078
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2079
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2080
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2081
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2082
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2083
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2086
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2087
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2088
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2089
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2090
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2091
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2092
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2093
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2094
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2095
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2098
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2099
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2100
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2101
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2102
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2103
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2104
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2105
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2106
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2107
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2110
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2111
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2112
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2113
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2114
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2115
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2116
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2117
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2118
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2119
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2122
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2123
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2124
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2125
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2126
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2127
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2128
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2129
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2130
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2131
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2134
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2135
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2136
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2137
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2138
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2139
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2140
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2141
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2142
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2143
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2146
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2147
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2148
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2149
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2150
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2151
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2152
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2153
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2154
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2155
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2158
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2159
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2160
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2161
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2162
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2163
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2164
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2165
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2166
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2167
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2170
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2171
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2172
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2173
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2174
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2175
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2176
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2177
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2178
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2179
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2182
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2183
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2184
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2185
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2186
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2187
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2188
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2189
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2190
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2191
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2194
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2195
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2196
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2197
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2198
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2199
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2200
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2201
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2202
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2203
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2206
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2207
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2208
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2209
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2210
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2211
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2212
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2213
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2214
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2215
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2218
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2219
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2220
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2221
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2222
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2223
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2224
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2225
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2226
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2227
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2230
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2231
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2232
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2233
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2234
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2235
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2236
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2237
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2238
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2239
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2242
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2243
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2244
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2245
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2246
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2247
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2248
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2249
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2250
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2251
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2254
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2255
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2256
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2257
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2258
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2259
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2260
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2261
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2262
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2263
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2266
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2267
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2268
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2269
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2270
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2271
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2272
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2273
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2274
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2275
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2278
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2279
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2280
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2281
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2282
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2283
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2284
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2285
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2286
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2310
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2311
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2312
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64M_HD2313
   (DOA,
    DOB,
    DOC,
    DOD,
    ADDRA,
    ADDRB,
    ADDRC,
    ADDRD,
    DIA,
    DIB,
    DIC,
    DID,
    WCLK,
    WE);
  output DOA;
  output DOB;
  output DOC;
  output DOD;
  input [5:0]ADDRA;
  input [5:0]ADDRB;
  input [5:0]ADDRC;
  input [5:0]ADDRD;
  input DIA;
  input DIB;
  input DIC;
  input DID;
  input WCLK;
  input WE;

  wire ADDRA0;
  wire ADDRA1;
  wire ADDRA2;
  wire ADDRA3;
  wire ADDRA4;
  wire ADDRA5;
  wire ADDRB0;
  wire ADDRB1;
  wire ADDRB2;
  wire ADDRB3;
  wire ADDRB4;
  wire ADDRB5;
  wire ADDRC0;
  wire ADDRC1;
  wire ADDRC2;
  wire ADDRC3;
  wire ADDRC4;
  wire ADDRC5;
  wire ADDRD0;
  wire ADDRD1;
  wire ADDRD2;
  wire ADDRD3;
  wire ADDRD4;
  wire ADDRD5;
  wire DIA;
  wire DIB;
  wire DIC;
  wire DID;
  wire DOA;
  wire DOB;
  wire DOC;
  wire DOD;
  wire WCLK;
  wire WE;
  wire NLW_RAMA_WADR6_UNCONNECTED;
  wire NLW_RAMA_WADR7_UNCONNECTED;
  wire NLW_RAMB_WADR6_UNCONNECTED;
  wire NLW_RAMB_WADR7_UNCONNECTED;
  wire NLW_RAMC_WADR6_UNCONNECTED;
  wire NLW_RAMC_WADR7_UNCONNECTED;
  wire NLW_RAMD_WADR6_UNCONNECTED;
  wire NLW_RAMD_WADR7_UNCONNECTED;

  assign ADDRA0 = ADDRA[0];
  assign ADDRA1 = ADDRA[1];
  assign ADDRA2 = ADDRA[2];
  assign ADDRA3 = ADDRA[3];
  assign ADDRA4 = ADDRA[4];
  assign ADDRA5 = ADDRA[5];
  assign ADDRB0 = ADDRB[0];
  assign ADDRB1 = ADDRB[1];
  assign ADDRB2 = ADDRB[2];
  assign ADDRB3 = ADDRB[3];
  assign ADDRB4 = ADDRB[4];
  assign ADDRB5 = ADDRB[5];
  assign ADDRC0 = ADDRC[0];
  assign ADDRC1 = ADDRC[1];
  assign ADDRC2 = ADDRC[2];
  assign ADDRC3 = ADDRC[3];
  assign ADDRC4 = ADDRC[4];
  assign ADDRC5 = ADDRC[5];
  assign ADDRD0 = ADDRD[0];
  assign ADDRD1 = ADDRD[1];
  assign ADDRD2 = ADDRD[2];
  assign ADDRD3 = ADDRD[3];
  assign ADDRD4 = ADDRD[4];
  assign ADDRD5 = ADDRD[5];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMA
       (.CLK(WCLK),
        .I(DIA),
        .O(DOA),
        .RADR0(ADDRA0),
        .RADR1(ADDRA1),
        .RADR2(ADDRA2),
        .RADR3(ADDRA3),
        .RADR4(ADDRA4),
        .RADR5(ADDRA5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMA_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMA_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMB
       (.CLK(WCLK),
        .I(DIB),
        .O(DOB),
        .RADR0(ADDRB0),
        .RADR1(ADDRB1),
        .RADR2(ADDRB2),
        .RADR3(ADDRB3),
        .RADR4(ADDRB4),
        .RADR5(ADDRB5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMB_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMB_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMC
       (.CLK(WCLK),
        .I(DIC),
        .O(DOC),
        .RADR0(ADDRC0),
        .RADR1(ADDRC1),
        .RADR2(ADDRC2),
        .RADR3(ADDRC3),
        .RADR4(ADDRC4),
        .RADR5(ADDRC5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMC_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMC_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    RAMD
       (.CLK(WCLK),
        .I(DID),
        .O(DOD),
        .RADR0(ADDRD0),
        .RADR1(ADDRD1),
        .RADR2(ADDRD2),
        .RADR3(ADDRD3),
        .RADR4(ADDRD4),
        .RADR5(ADDRD5),
        .WADR0(ADDRD0),
        .WADR1(ADDRD1),
        .WADR2(ADDRD2),
        .WADR3(ADDRD3),
        .WADR4(ADDRD4),
        .WADR5(ADDRD5),
        .WADR6(NLW_RAMD_WADR6_UNCONNECTED),
        .WADR7(NLW_RAMD_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_UNIQ_BASE_
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1712
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1717
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1722
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1739
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1744
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1749
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1754
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1759
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1764
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1769
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1774
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1808
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1809
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1820
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1821
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1832
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1833
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1844
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1845
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1856
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1857
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1868
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1869
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1880
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1881
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1892
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1893
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1904
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1905
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1916
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1917
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1928
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1929
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1940
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1941
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1952
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1953
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1964
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1965
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1976
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1977
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1988
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD1989
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2000
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2001
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2012
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2013
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2024
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2025
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2036
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2037
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2048
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2049
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2060
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2061
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2072
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2073
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2084
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2085
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2096
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2097
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2108
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2109
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2120
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2121
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2132
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2133
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2144
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2145
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2156
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2157
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2168
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2169
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2180
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2181
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2192
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2193
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2204
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2205
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2216
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2217
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2228
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2229
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2240
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2241
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2252
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2253
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2264
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2265
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2276
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module RAM64X1D_HD2277
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    A5,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    DPRA5,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input A5;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input DPRA5;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire SPO;
  wire WCLK;
  wire WE;
  wire NLW_DP_WADR6_UNCONNECTED;
  wire NLW_DP_WADR7_UNCONNECTED;
  wire NLW_SP_WADR6_UNCONNECTED;
  wire NLW_SP_WADR7_UNCONNECTED;

  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_DP_WADR6_UNCONNECTED),
        .WADR7(NLW_DP_WADR7_UNCONNECTED),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b11),
    .RAM_ADDRESS_SPACE(2'b11)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(NLW_SP_WADR6_UNCONNECTED),
        .WADR7(NLW_SP_WADR7_UNCONNECTED),
        .WE(WE));
endmodule

module create_tree
   (i2_in,
    \i_reg_rep[0]__1_0 ,
    E,
    \i_reg_rep[0]_0 ,
    \i_reg[31]_0 ,
    code_out_length,
    code_out0_out,
    clock_IBUF_BUFG,
    DIADI,
    probabilities_tab_reg_i_7,
    probabilities_tab_reg_i_8,
    probabilities_tab_reg_i_9,
    probabilities_tab_reg_i_10,
    probabilities_tab_reg_i_11,
    probabilities_tab_reg_i_12,
    Q,
    \bit_counter_reg[30] ,
    \i_reg[31]_1 ,
    \state_reg[0] ,
    CO,
    \i_reg[30]_0 ,
    tree_data_enable,
    symbol_in);
  output [5:0]i2_in;
  output \i_reg_rep[0]__1_0 ;
  output [0:0]E;
  output \i_reg_rep[0]_0 ;
  output \i_reg[31]_0 ;
  output [7:0]code_out_length;
  output [7:0]code_out0_out;
  input clock_IBUF_BUFG;
  input [5:0]DIADI;
  input probabilities_tab_reg_i_7;
  input probabilities_tab_reg_i_8;
  input probabilities_tab_reg_i_9;
  input probabilities_tab_reg_i_10;
  input probabilities_tab_reg_i_11;
  input probabilities_tab_reg_i_12;
  input [4:0]Q;
  input \bit_counter_reg[30] ;
  input [0:0]\i_reg[31]_1 ;
  input \state_reg[0] ;
  input [0:0]CO;
  input [0:0]\i_reg[30]_0 ;
  input tree_data_enable;
  input [0:0]symbol_in;

  wire [0:0]CO;
  wire [5:0]DIADI;
  wire [0:0]E;
  wire \FSM_onehot_building_tree_state[7]_i_11_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_12_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_13_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_14_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_15_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_17_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_18_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_19_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_20_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_21_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_22_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_23_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_24_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_25_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_26_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_3_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_5_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_6_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_7_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_8_n_0 ;
  wire \FSM_onehot_building_tree_state[7]_i_9_n_0 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_10_n_0 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_10_n_1 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_10_n_2 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_10_n_3 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_16_n_0 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_16_n_1 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_16_n_2 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_16_n_3 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_2_n_0 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_2_n_1 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_2_n_2 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_2_n_3 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_4_n_0 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_4_n_1 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_4_n_2 ;
  wire \FSM_onehot_building_tree_state_reg[7]_i_4_n_3 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_building_tree_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_building_tree_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_building_tree_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_building_tree_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_building_tree_state_reg_n_0_[4] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_building_tree_state_reg_n_0_[5] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_building_tree_state_reg_n_0_[6] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_building_tree_state_reg_n_0_[7] ;
  wire \FSM_onehot_state[10]_i_1_n_0 ;
  wire \FSM_onehot_state[11]_i_1_n_0 ;
  wire \FSM_onehot_state[11]_i_2_n_0 ;
  wire \FSM_onehot_state[12]_i_11_n_0 ;
  wire \FSM_onehot_state[12]_i_12_n_0 ;
  wire \FSM_onehot_state[12]_i_13_n_0 ;
  wire \FSM_onehot_state[12]_i_14_n_0 ;
  wire \FSM_onehot_state[12]_i_15_n_0 ;
  wire \FSM_onehot_state[12]_i_16_n_0 ;
  wire \FSM_onehot_state[12]_i_17_n_0 ;
  wire \FSM_onehot_state[12]_i_18_n_0 ;
  wire \FSM_onehot_state[12]_i_2_n_0 ;
  wire \FSM_onehot_state[12]_i_3_n_0 ;
  wire \FSM_onehot_state[12]_i_5_n_0 ;
  wire \FSM_onehot_state[12]_i_7_n_0 ;
  wire \FSM_onehot_state[12]_i_8_n_0 ;
  wire \FSM_onehot_state[12]_i_9_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  wire \FSM_onehot_state[4]_i_1_n_0 ;
  wire \FSM_onehot_state[5]_i_1_n_0 ;
  wire \FSM_onehot_state[6]_i_1_n_0 ;
  wire \FSM_onehot_state[7]_i_1_n_0 ;
  wire \FSM_onehot_state[7]_i_2_n_0 ;
  wire \FSM_onehot_state[8]_i_1_n_0 ;
  wire \FSM_onehot_state[9]_i_1_n_0 ;
  wire \FSM_onehot_state_reg[12]_i_10_n_0 ;
  wire \FSM_onehot_state_reg[12]_i_10_n_1 ;
  wire \FSM_onehot_state_reg[12]_i_10_n_2 ;
  wire \FSM_onehot_state_reg[12]_i_10_n_3 ;
  wire \FSM_onehot_state_reg[12]_i_4_n_2 ;
  wire \FSM_onehot_state_reg[12]_i_4_n_3 ;
  wire \FSM_onehot_state_reg[12]_i_6_n_0 ;
  wire \FSM_onehot_state_reg[12]_i_6_n_1 ;
  wire \FSM_onehot_state_reg[12]_i_6_n_2 ;
  wire \FSM_onehot_state_reg[12]_i_6_n_3 ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[0] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[10] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[11] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[12] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[1] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[2] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[3] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[4] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[5] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[6] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[7] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[8] ;
  (* RTL_KEEP = "yes" *) wire \FSM_onehot_state_reg_n_0_[9] ;
  wire [7:0]ID;
  wire ID_reg_r1_0_63_0_2_i_11_n_0;
  wire ID_reg_r1_0_63_0_2_i_12_n_0;
  wire ID_reg_r1_0_63_0_2_i_13_n_0;
  wire ID_reg_r1_0_63_0_2_i_13_n_1;
  wire ID_reg_r1_0_63_0_2_i_13_n_2;
  wire ID_reg_r1_0_63_0_2_i_13_n_3;
  wire ID_reg_r1_0_63_0_2_i_13_n_4;
  wire ID_reg_r1_0_63_0_2_i_13_n_5;
  wire ID_reg_r1_0_63_0_2_i_13_n_6;
  wire ID_reg_r1_0_63_0_2_i_13_n_7;
  wire ID_reg_r1_0_63_0_2_i_14_n_0;
  wire ID_reg_r1_0_63_0_2_i_15_n_0;
  wire ID_reg_r1_0_63_0_2_i_16_n_0;
  wire ID_reg_r1_0_63_0_2_i_17_n_0;
  wire ID_reg_r1_0_63_0_2_i_19_n_0;
  wire ID_reg_r1_0_63_0_2_i_19_n_1;
  wire ID_reg_r1_0_63_0_2_i_19_n_2;
  wire ID_reg_r1_0_63_0_2_i_19_n_3;
  wire ID_reg_r1_0_63_0_2_i_20_n_0;
  wire ID_reg_r1_0_63_0_2_i_21_n_0;
  wire ID_reg_r1_0_63_0_2_i_24_n_0;
  wire ID_reg_r1_0_63_0_2_i_25_n_0;
  wire ID_reg_r1_0_63_0_2_i_26_n_0;
  wire ID_reg_r1_0_63_0_2_i_27_n_0;
  wire ID_reg_r1_0_63_0_2_i_28_n_0;
  wire ID_reg_r1_0_63_0_2_i_29_n_0;
  wire ID_reg_r1_0_63_0_2_i_30_n_0;
  wire ID_reg_r1_0_63_0_2_i_31_n_0;
  wire ID_reg_r1_0_63_0_2_i_32_n_0;
  wire ID_reg_r1_0_63_0_2_i_33_n_0;
  wire ID_reg_r1_0_63_0_2_i_34_n_0;
  wire ID_reg_r1_0_63_0_2_i_37_n_0;
  wire ID_reg_r1_0_63_0_2_i_38_n_0;
  wire ID_reg_r1_0_63_0_2_i_39_n_0;
  wire ID_reg_r1_0_63_0_2_i_40_n_0;
  wire ID_reg_r1_0_63_0_2_i_43_n_0;
  wire ID_reg_r1_0_63_0_2_i_43_n_1;
  wire ID_reg_r1_0_63_0_2_i_43_n_2;
  wire ID_reg_r1_0_63_0_2_i_43_n_3;
  wire ID_reg_r1_0_63_0_2_i_44_n_0;
  wire ID_reg_r1_0_63_0_2_i_45_n_0;
  wire ID_reg_r1_0_63_0_2_i_46_n_0;
  wire ID_reg_r1_0_63_0_2_i_47_n_0;
  wire ID_reg_r1_0_63_0_2_i_48_n_0;
  wire ID_reg_r1_0_63_0_2_i_4_n_0;
  wire ID_reg_r1_0_63_0_2_i_50_n_0;
  wire ID_reg_r1_0_63_0_2_i_51_n_0;
  wire ID_reg_r1_0_63_0_2_i_52_n_0;
  wire ID_reg_r1_0_63_0_2_i_53_n_0;
  wire ID_reg_r1_0_63_0_2_i_53_n_1;
  wire ID_reg_r1_0_63_0_2_i_53_n_2;
  wire ID_reg_r1_0_63_0_2_i_53_n_3;
  wire ID_reg_r1_0_63_0_2_i_54_n_0;
  wire ID_reg_r1_0_63_0_2_i_55_n_0;
  wire ID_reg_r1_0_63_0_2_i_56_n_0;
  wire ID_reg_r1_0_63_0_2_i_57_n_0;
  wire ID_reg_r1_0_63_0_2_i_57_n_1;
  wire ID_reg_r1_0_63_0_2_i_57_n_2;
  wire ID_reg_r1_0_63_0_2_i_57_n_3;
  wire ID_reg_r1_0_63_0_2_i_58_n_0;
  wire ID_reg_r1_0_63_0_2_i_59_n_0;
  wire ID_reg_r1_0_63_0_2_i_60_n_0;
  wire ID_reg_r1_0_63_0_2_i_61_n_0;
  wire ID_reg_r1_0_63_0_2_i_62_n_0;
  wire ID_reg_r1_0_63_0_2_i_63_n_0;
  wire ID_reg_r1_0_63_0_2_i_64_n_0;
  wire ID_reg_r1_0_63_0_2_i_65_n_0;
  wire ID_reg_r1_0_63_0_2_i_66_n_0;
  wire ID_reg_r1_0_63_0_2_i_66_n_1;
  wire ID_reg_r1_0_63_0_2_i_66_n_2;
  wire ID_reg_r1_0_63_0_2_i_66_n_3;
  wire ID_reg_r1_0_63_0_2_i_67_n_0;
  wire ID_reg_r1_0_63_0_2_i_68_n_0;
  wire ID_reg_r1_0_63_0_2_i_69_n_0;
  wire ID_reg_r1_0_63_0_2_i_70_n_0;
  wire ID_reg_r1_0_63_0_2_i_71_n_0;
  wire ID_reg_r1_0_63_0_2_i_72_n_0;
  wire ID_reg_r1_0_63_0_2_i_73_n_0;
  wire ID_reg_r1_0_63_0_2_i_74_n_0;
  wire ID_reg_r1_0_63_0_2_i_75_n_0;
  wire ID_reg_r1_0_63_0_2_i_76_n_0;
  wire ID_reg_r1_0_63_0_2_n_0;
  wire ID_reg_r1_0_63_0_2_n_1;
  wire ID_reg_r1_0_63_0_2_n_2;
  wire ID_reg_r1_0_63_27_29_n_0;
  wire ID_reg_r1_0_63_27_29_n_1;
  wire ID_reg_r1_0_63_27_29_n_2;
  wire ID_reg_r1_0_63_31_31_n_0;
  wire ID_reg_r1_0_63_3_5_i_10_n_0;
  wire ID_reg_r1_0_63_3_5_i_13_n_0;
  wire ID_reg_r1_0_63_3_5_i_15_n_0;
  wire ID_reg_r1_0_63_3_5_i_16_n_0;
  wire ID_reg_r1_0_63_3_5_i_18_n_0;
  wire ID_reg_r1_0_63_3_5_i_19_n_1;
  wire ID_reg_r1_0_63_3_5_i_19_n_2;
  wire ID_reg_r1_0_63_3_5_i_19_n_3;
  wire ID_reg_r1_0_63_3_5_i_19_n_4;
  wire ID_reg_r1_0_63_3_5_i_19_n_5;
  wire ID_reg_r1_0_63_3_5_i_19_n_6;
  wire ID_reg_r1_0_63_3_5_i_19_n_7;
  wire ID_reg_r1_0_63_3_5_i_20_n_0;
  wire ID_reg_r1_0_63_3_5_i_21_n_0;
  wire ID_reg_r1_0_63_3_5_i_22_n_0;
  wire ID_reg_r1_0_63_3_5_i_23_n_0;
  wire ID_reg_r1_0_63_3_5_i_4_n_0;
  wire ID_reg_r1_0_63_3_5_i_5_n_0;
  wire ID_reg_r1_0_63_3_5_i_6_n_0;
  wire ID_reg_r1_0_63_3_5_i_8_n_0;
  wire ID_reg_r1_0_63_3_5_n_0;
  wire ID_reg_r1_0_63_3_5_n_1;
  wire ID_reg_r1_0_63_3_5_n_2;
  wire ID_reg_r1_0_63_6_8_i_10_n_0;
  wire ID_reg_r1_0_63_6_8_i_12_n_0;
  wire ID_reg_r1_0_63_6_8_i_4_n_0;
  wire ID_reg_r1_0_63_6_8_i_6_n_0;
  wire ID_reg_r1_0_63_6_8_i_7_n_0;
  wire ID_reg_r1_0_63_6_8_i_9_n_0;
  wire ID_reg_r1_0_63_6_8_n_0;
  wire ID_reg_r1_0_63_6_8_n_1;
  wire ID_reg_r1_0_63_6_8_n_2;
  wire ID_reg_r1_128_191_0_2_i_1_n_0;
  wire ID_reg_r1_128_191_0_2_n_0;
  wire ID_reg_r1_128_191_0_2_n_1;
  wire ID_reg_r1_128_191_0_2_n_2;
  wire ID_reg_r1_128_191_27_29_n_0;
  wire ID_reg_r1_128_191_27_29_n_1;
  wire ID_reg_r1_128_191_27_29_n_2;
  wire ID_reg_r1_128_191_31_31_n_0;
  wire ID_reg_r1_128_191_3_5_n_0;
  wire ID_reg_r1_128_191_3_5_n_1;
  wire ID_reg_r1_128_191_3_5_n_2;
  wire ID_reg_r1_128_191_6_8_n_0;
  wire ID_reg_r1_128_191_6_8_n_1;
  wire ID_reg_r1_128_191_6_8_n_2;
  wire ID_reg_r1_192_255_0_2_i_1_n_0;
  wire ID_reg_r1_192_255_0_2_n_0;
  wire ID_reg_r1_192_255_0_2_n_1;
  wire ID_reg_r1_192_255_0_2_n_2;
  wire ID_reg_r1_192_255_27_29_n_0;
  wire ID_reg_r1_192_255_27_29_n_1;
  wire ID_reg_r1_192_255_27_29_n_2;
  wire ID_reg_r1_192_255_31_31_n_0;
  wire ID_reg_r1_192_255_3_5_n_0;
  wire ID_reg_r1_192_255_3_5_n_1;
  wire ID_reg_r1_192_255_3_5_n_2;
  wire ID_reg_r1_192_255_6_8_n_0;
  wire ID_reg_r1_192_255_6_8_n_1;
  wire ID_reg_r1_192_255_6_8_n_2;
  wire ID_reg_r1_64_127_0_2_i_1_n_0;
  wire ID_reg_r1_64_127_0_2_n_0;
  wire ID_reg_r1_64_127_0_2_n_1;
  wire ID_reg_r1_64_127_0_2_n_2;
  wire ID_reg_r1_64_127_27_29_n_0;
  wire ID_reg_r1_64_127_27_29_n_1;
  wire ID_reg_r1_64_127_27_29_n_2;
  wire ID_reg_r1_64_127_31_31_n_0;
  wire ID_reg_r1_64_127_3_5_n_0;
  wire ID_reg_r1_64_127_3_5_n_1;
  wire ID_reg_r1_64_127_3_5_n_2;
  wire ID_reg_r1_64_127_6_8_n_0;
  wire ID_reg_r1_64_127_6_8_n_1;
  wire ID_reg_r1_64_127_6_8_n_2;
  wire ID_reg_r2_0_63_0_2_n_0;
  wire ID_reg_r2_0_63_0_2_n_1;
  wire ID_reg_r2_0_63_0_2_n_2;
  wire ID_reg_r2_0_63_3_5_n_0;
  wire ID_reg_r2_0_63_3_5_n_1;
  wire ID_reg_r2_0_63_3_5_n_2;
  wire ID_reg_r2_0_63_6_8_n_0;
  wire ID_reg_r2_0_63_6_8_n_1;
  wire ID_reg_r2_0_63_6_8_n_2;
  wire ID_reg_r2_128_191_0_2_n_0;
  wire ID_reg_r2_128_191_0_2_n_1;
  wire ID_reg_r2_128_191_0_2_n_2;
  wire ID_reg_r2_128_191_3_5_n_0;
  wire ID_reg_r2_128_191_3_5_n_1;
  wire ID_reg_r2_128_191_3_5_n_2;
  wire ID_reg_r2_128_191_6_8_n_0;
  wire ID_reg_r2_128_191_6_8_n_1;
  wire ID_reg_r2_128_191_6_8_n_2;
  wire ID_reg_r2_192_255_0_2_n_0;
  wire ID_reg_r2_192_255_0_2_n_1;
  wire ID_reg_r2_192_255_0_2_n_2;
  wire ID_reg_r2_192_255_3_5_n_0;
  wire ID_reg_r2_192_255_3_5_n_1;
  wire ID_reg_r2_192_255_3_5_n_2;
  wire ID_reg_r2_192_255_6_8_n_0;
  wire ID_reg_r2_192_255_6_8_n_1;
  wire ID_reg_r2_192_255_6_8_n_2;
  wire ID_reg_r2_64_127_0_2_n_0;
  wire ID_reg_r2_64_127_0_2_n_1;
  wire ID_reg_r2_64_127_0_2_n_2;
  wire ID_reg_r2_64_127_3_5_n_0;
  wire ID_reg_r2_64_127_3_5_n_1;
  wire ID_reg_r2_64_127_3_5_n_2;
  wire ID_reg_r2_64_127_6_8_n_0;
  wire ID_reg_r2_64_127_6_8_n_1;
  wire ID_reg_r2_64_127_6_8_n_2;
  wire ID_reg_r3_0_63_0_2_i_10_n_0;
  wire ID_reg_r3_0_63_0_2_i_1_n_2;
  wire ID_reg_r3_0_63_0_2_i_1_n_3;
  wire ID_reg_r3_0_63_0_2_i_1_n_5;
  wire ID_reg_r3_0_63_0_2_i_1_n_6;
  wire ID_reg_r3_0_63_0_2_i_1_n_7;
  wire ID_reg_r3_0_63_0_2_i_2_n_0;
  wire ID_reg_r3_0_63_0_2_i_2_n_1;
  wire ID_reg_r3_0_63_0_2_i_2_n_2;
  wire ID_reg_r3_0_63_0_2_i_2_n_3;
  wire ID_reg_r3_0_63_0_2_i_2_n_4;
  wire ID_reg_r3_0_63_0_2_i_2_n_5;
  wire ID_reg_r3_0_63_0_2_i_2_n_6;
  wire ID_reg_r3_0_63_0_2_i_2_n_7;
  wire ID_reg_r3_0_63_0_2_i_3_n_0;
  wire ID_reg_r3_0_63_0_2_i_4_n_0;
  wire ID_reg_r3_0_63_0_2_i_5_n_0;
  wire ID_reg_r3_0_63_0_2_i_6_n_0;
  wire ID_reg_r3_0_63_0_2_i_7_n_0;
  wire ID_reg_r3_0_63_0_2_i_8_n_0;
  wire ID_reg_r3_0_63_0_2_i_9_n_0;
  wire ID_reg_r3_0_63_0_2_n_0;
  wire ID_reg_r3_0_63_0_2_n_1;
  wire ID_reg_r3_0_63_0_2_n_2;
  wire ID_reg_r3_0_63_27_29_n_0;
  wire ID_reg_r3_0_63_27_29_n_1;
  wire ID_reg_r3_0_63_27_29_n_2;
  wire ID_reg_r3_0_63_31_31_n_0;
  wire ID_reg_r3_0_63_3_5_n_0;
  wire ID_reg_r3_0_63_3_5_n_1;
  wire ID_reg_r3_0_63_3_5_n_2;
  wire ID_reg_r3_0_63_6_8_n_0;
  wire ID_reg_r3_0_63_6_8_n_1;
  wire ID_reg_r3_0_63_6_8_n_2;
  wire ID_reg_r3_128_191_0_2_n_0;
  wire ID_reg_r3_128_191_0_2_n_1;
  wire ID_reg_r3_128_191_0_2_n_2;
  wire ID_reg_r3_128_191_27_29_n_0;
  wire ID_reg_r3_128_191_27_29_n_1;
  wire ID_reg_r3_128_191_27_29_n_2;
  wire ID_reg_r3_128_191_31_31_n_0;
  wire ID_reg_r3_128_191_3_5_n_0;
  wire ID_reg_r3_128_191_3_5_n_1;
  wire ID_reg_r3_128_191_3_5_n_2;
  wire ID_reg_r3_128_191_6_8_n_0;
  wire ID_reg_r3_128_191_6_8_n_1;
  wire ID_reg_r3_128_191_6_8_n_2;
  wire ID_reg_r3_192_255_0_2_n_0;
  wire ID_reg_r3_192_255_0_2_n_1;
  wire ID_reg_r3_192_255_0_2_n_2;
  wire ID_reg_r3_192_255_27_29_n_0;
  wire ID_reg_r3_192_255_27_29_n_1;
  wire ID_reg_r3_192_255_27_29_n_2;
  wire ID_reg_r3_192_255_31_31_n_0;
  wire ID_reg_r3_192_255_3_5_n_0;
  wire ID_reg_r3_192_255_3_5_n_1;
  wire ID_reg_r3_192_255_3_5_n_2;
  wire ID_reg_r3_192_255_6_8_n_0;
  wire ID_reg_r3_192_255_6_8_n_1;
  wire ID_reg_r3_192_255_6_8_n_2;
  wire ID_reg_r3_64_127_0_2_n_0;
  wire ID_reg_r3_64_127_0_2_n_1;
  wire ID_reg_r3_64_127_0_2_n_2;
  wire ID_reg_r3_64_127_27_29_n_0;
  wire ID_reg_r3_64_127_27_29_n_1;
  wire ID_reg_r3_64_127_27_29_n_2;
  wire ID_reg_r3_64_127_31_31_n_0;
  wire ID_reg_r3_64_127_3_5_n_0;
  wire ID_reg_r3_64_127_3_5_n_1;
  wire ID_reg_r3_64_127_3_5_n_2;
  wire ID_reg_r3_64_127_6_8_n_0;
  wire ID_reg_r3_64_127_6_8_n_1;
  wire ID_reg_r3_64_127_6_8_n_2;
  wire ID_reg_r4_0_63_0_2_i_1_n_0;
  wire ID_reg_r4_0_63_0_2_i_1_n_1;
  wire ID_reg_r4_0_63_0_2_i_1_n_2;
  wire ID_reg_r4_0_63_0_2_i_1_n_3;
  wire ID_reg_r4_0_63_0_2_i_3_n_0;
  wire ID_reg_r4_0_63_0_2_i_4_n_0;
  wire ID_reg_r4_0_63_0_2_i_5_n_0;
  wire ID_reg_r4_0_63_0_2_i_6_n_0;
  wire ID_reg_r4_0_63_0_2_n_0;
  wire ID_reg_r4_0_63_0_2_n_1;
  wire ID_reg_r4_0_63_0_2_n_2;
  wire ID_reg_r4_0_63_27_29_n_0;
  wire ID_reg_r4_0_63_27_29_n_1;
  wire ID_reg_r4_0_63_27_29_n_2;
  wire ID_reg_r4_0_63_31_31_n_0;
  wire ID_reg_r4_0_63_3_5_n_0;
  wire ID_reg_r4_0_63_3_5_n_1;
  wire ID_reg_r4_0_63_3_5_n_2;
  wire ID_reg_r4_0_63_6_8_n_0;
  wire ID_reg_r4_0_63_6_8_n_1;
  wire ID_reg_r4_0_63_6_8_n_2;
  wire ID_reg_r4_128_191_0_2_n_0;
  wire ID_reg_r4_128_191_0_2_n_1;
  wire ID_reg_r4_128_191_0_2_n_2;
  wire ID_reg_r4_128_191_27_29_n_0;
  wire ID_reg_r4_128_191_27_29_n_1;
  wire ID_reg_r4_128_191_27_29_n_2;
  wire ID_reg_r4_128_191_31_31_n_0;
  wire ID_reg_r4_128_191_3_5_n_0;
  wire ID_reg_r4_128_191_3_5_n_1;
  wire ID_reg_r4_128_191_3_5_n_2;
  wire ID_reg_r4_128_191_6_8_n_0;
  wire ID_reg_r4_128_191_6_8_n_1;
  wire ID_reg_r4_128_191_6_8_n_2;
  wire ID_reg_r4_192_255_0_2_n_0;
  wire ID_reg_r4_192_255_0_2_n_1;
  wire ID_reg_r4_192_255_0_2_n_2;
  wire ID_reg_r4_192_255_27_29_n_0;
  wire ID_reg_r4_192_255_27_29_n_1;
  wire ID_reg_r4_192_255_27_29_n_2;
  wire ID_reg_r4_192_255_31_31_n_0;
  wire ID_reg_r4_192_255_3_5_n_0;
  wire ID_reg_r4_192_255_3_5_n_1;
  wire ID_reg_r4_192_255_3_5_n_2;
  wire ID_reg_r4_192_255_6_8_n_0;
  wire ID_reg_r4_192_255_6_8_n_1;
  wire ID_reg_r4_192_255_6_8_n_2;
  wire ID_reg_r4_64_127_0_2_n_0;
  wire ID_reg_r4_64_127_0_2_n_1;
  wire ID_reg_r4_64_127_0_2_n_2;
  wire ID_reg_r4_64_127_27_29_n_0;
  wire ID_reg_r4_64_127_27_29_n_1;
  wire ID_reg_r4_64_127_27_29_n_2;
  wire ID_reg_r4_64_127_31_31_n_0;
  wire ID_reg_r4_64_127_3_5_n_0;
  wire ID_reg_r4_64_127_3_5_n_1;
  wire ID_reg_r4_64_127_3_5_n_2;
  wire ID_reg_r4_64_127_6_8_n_0;
  wire ID_reg_r4_64_127_6_8_n_1;
  wire ID_reg_r4_64_127_6_8_n_2;
  wire ID_reg_r5_0_63_0_2_i_10_n_0;
  wire ID_reg_r5_0_63_0_2_i_11_n_0;
  wire ID_reg_r5_0_63_0_2_i_12_n_0;
  wire ID_reg_r5_0_63_0_2_i_12_n_1;
  wire ID_reg_r5_0_63_0_2_i_12_n_2;
  wire ID_reg_r5_0_63_0_2_i_12_n_3;
  wire ID_reg_r5_0_63_0_2_i_13_n_0;
  wire ID_reg_r5_0_63_0_2_i_14_n_0;
  wire ID_reg_r5_0_63_0_2_i_15_n_0;
  wire ID_reg_r5_0_63_0_2_i_16_n_0;
  wire ID_reg_r5_0_63_0_2_i_17_n_0;
  wire ID_reg_r5_0_63_0_2_i_18_n_0;
  wire ID_reg_r5_0_63_0_2_i_19_n_0;
  wire ID_reg_r5_0_63_0_2_i_20_n_0;
  wire ID_reg_r5_0_63_0_2_i_21_n_0;
  wire ID_reg_r5_0_63_0_2_i_22_n_0;
  wire ID_reg_r5_0_63_0_2_i_23_n_0;
  wire ID_reg_r5_0_63_0_2_i_24_n_0;
  wire ID_reg_r5_0_63_0_2_i_25_n_0;
  wire ID_reg_r5_0_63_0_2_i_26_n_0;
  wire ID_reg_r5_0_63_0_2_i_26_n_1;
  wire ID_reg_r5_0_63_0_2_i_26_n_2;
  wire ID_reg_r5_0_63_0_2_i_26_n_3;
  wire ID_reg_r5_0_63_0_2_i_27_n_0;
  wire ID_reg_r5_0_63_0_2_i_28_n_0;
  wire ID_reg_r5_0_63_0_2_i_29_n_0;
  wire ID_reg_r5_0_63_0_2_i_30_n_0;
  wire ID_reg_r5_0_63_0_2_i_31_n_0;
  wire ID_reg_r5_0_63_0_2_i_32_n_0;
  wire ID_reg_r5_0_63_0_2_i_33_n_0;
  wire ID_reg_r5_0_63_0_2_i_34_n_0;
  wire ID_reg_r5_0_63_0_2_i_35_n_0;
  wire ID_reg_r5_0_63_0_2_i_35_n_1;
  wire ID_reg_r5_0_63_0_2_i_35_n_2;
  wire ID_reg_r5_0_63_0_2_i_35_n_3;
  wire ID_reg_r5_0_63_0_2_i_36_n_0;
  wire ID_reg_r5_0_63_0_2_i_37_n_0;
  wire ID_reg_r5_0_63_0_2_i_38_n_0;
  wire ID_reg_r5_0_63_0_2_i_39_n_0;
  wire ID_reg_r5_0_63_0_2_i_40_n_0;
  wire ID_reg_r5_0_63_0_2_i_41_n_0;
  wire ID_reg_r5_0_63_0_2_i_42_n_0;
  wire ID_reg_r5_0_63_0_2_i_43_n_0;
  wire ID_reg_r5_0_63_0_2_i_44_n_0;
  wire ID_reg_r5_0_63_0_2_i_45_n_0;
  wire ID_reg_r5_0_63_0_2_i_46_n_0;
  wire ID_reg_r5_0_63_0_2_i_47_n_0;
  wire ID_reg_r5_0_63_0_2_i_48_n_0;
  wire ID_reg_r5_0_63_0_2_i_49_n_0;
  wire ID_reg_r5_0_63_0_2_i_50_n_0;
  wire ID_reg_r5_0_63_0_2_i_51_n_0;
  wire ID_reg_r5_0_63_0_2_i_7_n_0;
  wire ID_reg_r5_0_63_0_2_i_8_n_0;
  wire ID_reg_r5_0_63_0_2_i_8_n_1;
  wire ID_reg_r5_0_63_0_2_i_8_n_2;
  wire ID_reg_r5_0_63_0_2_i_8_n_3;
  wire ID_reg_r5_0_63_0_2_i_9_n_0;
  wire ID_reg_r5_0_63_0_2_n_0;
  wire ID_reg_r5_0_63_0_2_n_1;
  wire ID_reg_r5_0_63_0_2_n_2;
  wire ID_reg_r5_0_63_3_5_n_0;
  wire ID_reg_r5_0_63_3_5_n_1;
  wire ID_reg_r5_0_63_3_5_n_2;
  wire ID_reg_r5_0_63_6_8_n_0;
  wire ID_reg_r5_0_63_6_8_n_1;
  wire ID_reg_r5_0_63_6_8_n_2;
  wire ID_reg_r5_128_191_0_2_n_0;
  wire ID_reg_r5_128_191_0_2_n_1;
  wire ID_reg_r5_128_191_0_2_n_2;
  wire ID_reg_r5_128_191_3_5_n_0;
  wire ID_reg_r5_128_191_3_5_n_1;
  wire ID_reg_r5_128_191_3_5_n_2;
  wire ID_reg_r5_128_191_6_8_n_0;
  wire ID_reg_r5_128_191_6_8_n_1;
  wire ID_reg_r5_128_191_6_8_n_2;
  wire ID_reg_r5_192_255_0_2_n_0;
  wire ID_reg_r5_192_255_0_2_n_1;
  wire ID_reg_r5_192_255_0_2_n_2;
  wire ID_reg_r5_192_255_3_5_n_0;
  wire ID_reg_r5_192_255_3_5_n_1;
  wire ID_reg_r5_192_255_3_5_n_2;
  wire ID_reg_r5_192_255_6_8_n_0;
  wire ID_reg_r5_192_255_6_8_n_1;
  wire ID_reg_r5_192_255_6_8_n_2;
  wire ID_reg_r5_64_127_0_2_n_0;
  wire ID_reg_r5_64_127_0_2_n_1;
  wire ID_reg_r5_64_127_0_2_n_2;
  wire ID_reg_r5_64_127_3_5_n_0;
  wire ID_reg_r5_64_127_3_5_n_1;
  wire ID_reg_r5_64_127_3_5_n_2;
  wire ID_reg_r5_64_127_6_8_n_0;
  wire ID_reg_r5_64_127_6_8_n_1;
  wire ID_reg_r5_64_127_6_8_n_2;
  wire ID_reg_r6_0_63_0_2_n_0;
  wire ID_reg_r6_0_63_0_2_n_1;
  wire ID_reg_r6_0_63_0_2_n_2;
  wire ID_reg_r6_0_63_3_5_n_0;
  wire ID_reg_r6_0_63_3_5_n_1;
  wire ID_reg_r6_0_63_3_5_n_2;
  wire ID_reg_r6_0_63_6_8_n_0;
  wire ID_reg_r6_0_63_6_8_n_1;
  wire ID_reg_r6_0_63_6_8_n_2;
  wire ID_reg_r6_128_191_0_2_n_0;
  wire ID_reg_r6_128_191_0_2_n_1;
  wire ID_reg_r6_128_191_0_2_n_2;
  wire ID_reg_r6_128_191_3_5_n_0;
  wire ID_reg_r6_128_191_3_5_n_1;
  wire ID_reg_r6_128_191_3_5_n_2;
  wire ID_reg_r6_128_191_6_8_n_0;
  wire ID_reg_r6_128_191_6_8_n_1;
  wire ID_reg_r6_128_191_6_8_n_2;
  wire ID_reg_r6_192_255_0_2_n_0;
  wire ID_reg_r6_192_255_0_2_n_1;
  wire ID_reg_r6_192_255_0_2_n_2;
  wire ID_reg_r6_192_255_3_5_n_0;
  wire ID_reg_r6_192_255_3_5_n_1;
  wire ID_reg_r6_192_255_3_5_n_2;
  wire ID_reg_r6_192_255_6_8_n_0;
  wire ID_reg_r6_192_255_6_8_n_1;
  wire ID_reg_r6_192_255_6_8_n_2;
  wire ID_reg_r6_64_127_0_2_n_0;
  wire ID_reg_r6_64_127_0_2_n_1;
  wire ID_reg_r6_64_127_0_2_n_2;
  wire ID_reg_r6_64_127_3_5_n_0;
  wire ID_reg_r6_64_127_3_5_n_1;
  wire ID_reg_r6_64_127_3_5_n_2;
  wire ID_reg_r6_64_127_6_8_n_0;
  wire ID_reg_r6_64_127_6_8_n_1;
  wire ID_reg_r6_64_127_6_8_n_2;
  wire Link;
  wire Link_reg_r1_0_63_0_2_i_11_n_0;
  wire Link_reg_r1_0_63_0_2_i_13_n_0;
  wire Link_reg_r1_0_63_0_2_i_15_n_0;
  wire Link_reg_r1_0_63_0_2_i_18_n_0;
  wire Link_reg_r1_0_63_0_2_i_19_n_0;
  wire Link_reg_r1_0_63_0_2_i_1_n_0;
  wire Link_reg_r1_0_63_0_2_i_20_n_0;
  wire Link_reg_r1_0_63_0_2_i_21_n_0;
  wire Link_reg_r1_0_63_0_2_i_22_n_0;
  wire Link_reg_r1_0_63_0_2_i_23_n_0;
  wire Link_reg_r1_0_63_0_2_i_24_n_0;
  wire Link_reg_r1_0_63_0_2_i_25_n_0;
  wire Link_reg_r1_0_63_0_2_i_26_n_0;
  wire Link_reg_r1_0_63_0_2_i_27_n_0;
  wire Link_reg_r1_0_63_0_2_i_28_n_0;
  wire Link_reg_r1_0_63_0_2_i_2_n_0;
  wire Link_reg_r1_0_63_0_2_i_3_n_0;
  wire Link_reg_r1_0_63_0_2_i_4_n_0;
  wire Link_reg_r1_0_63_0_2_n_0;
  wire Link_reg_r1_0_63_0_2_n_1;
  wire Link_reg_r1_0_63_0_2_n_2;
  wire Link_reg_r1_0_63_12_14_i_1_n_0;
  wire Link_reg_r1_0_63_12_14_i_2_n_0;
  wire Link_reg_r1_0_63_12_14_i_3_n_0;
  wire Link_reg_r1_0_63_12_14_i_4_n_0;
  wire Link_reg_r1_0_63_12_14_i_5_n_0;
  wire Link_reg_r1_0_63_12_14_i_6_n_0;
  wire Link_reg_r1_0_63_12_14_n_0;
  wire Link_reg_r1_0_63_12_14_n_1;
  wire Link_reg_r1_0_63_12_14_n_2;
  wire Link_reg_r1_0_63_15_17_i_1_n_0;
  wire Link_reg_r1_0_63_15_17_i_2_n_0;
  wire Link_reg_r1_0_63_15_17_i_3_n_0;
  wire Link_reg_r1_0_63_15_17_i_4_n_0;
  wire Link_reg_r1_0_63_15_17_i_5_n_0;
  wire Link_reg_r1_0_63_15_17_i_6_n_0;
  wire Link_reg_r1_0_63_15_17_n_0;
  wire Link_reg_r1_0_63_15_17_n_1;
  wire Link_reg_r1_0_63_15_17_n_2;
  wire Link_reg_r1_0_63_18_20_i_1_n_0;
  wire Link_reg_r1_0_63_18_20_i_2_n_0;
  wire Link_reg_r1_0_63_18_20_i_3_n_0;
  wire Link_reg_r1_0_63_18_20_i_4_n_0;
  wire Link_reg_r1_0_63_18_20_i_5_n_0;
  wire Link_reg_r1_0_63_18_20_i_6_n_0;
  wire Link_reg_r1_0_63_18_20_n_0;
  wire Link_reg_r1_0_63_18_20_n_1;
  wire Link_reg_r1_0_63_18_20_n_2;
  wire Link_reg_r1_0_63_21_23_i_1_n_0;
  wire Link_reg_r1_0_63_21_23_i_2_n_0;
  wire Link_reg_r1_0_63_21_23_i_3_n_0;
  wire Link_reg_r1_0_63_21_23_i_4_n_0;
  wire Link_reg_r1_0_63_21_23_i_5_n_0;
  wire Link_reg_r1_0_63_21_23_i_6_n_0;
  wire Link_reg_r1_0_63_21_23_n_0;
  wire Link_reg_r1_0_63_21_23_n_1;
  wire Link_reg_r1_0_63_21_23_n_2;
  wire Link_reg_r1_0_63_24_26_i_1_n_0;
  wire Link_reg_r1_0_63_24_26_i_2_n_0;
  wire Link_reg_r1_0_63_24_26_i_3_n_0;
  wire Link_reg_r1_0_63_24_26_i_4_n_0;
  wire Link_reg_r1_0_63_24_26_i_5_n_0;
  wire Link_reg_r1_0_63_24_26_i_6_n_0;
  wire Link_reg_r1_0_63_24_26_n_0;
  wire Link_reg_r1_0_63_24_26_n_1;
  wire Link_reg_r1_0_63_24_26_n_2;
  wire Link_reg_r1_0_63_27_29_i_1_n_0;
  wire Link_reg_r1_0_63_27_29_i_2_n_0;
  wire Link_reg_r1_0_63_27_29_i_3_n_0;
  wire Link_reg_r1_0_63_27_29_i_4_n_0;
  wire Link_reg_r1_0_63_27_29_i_5_n_0;
  wire Link_reg_r1_0_63_27_29_i_6_n_0;
  wire Link_reg_r1_0_63_27_29_n_0;
  wire Link_reg_r1_0_63_27_29_n_1;
  wire Link_reg_r1_0_63_27_29_n_2;
  wire Link_reg_r1_0_63_30_30_i_1_n_0;
  wire Link_reg_r1_0_63_30_30_i_2_n_0;
  wire Link_reg_r1_0_63_30_30_i_3_n_0;
  wire Link_reg_r1_0_63_30_30_i_4_n_0;
  wire Link_reg_r1_0_63_30_30_n_0;
  wire Link_reg_r1_0_63_31_31_i_1_n_0;
  wire Link_reg_r1_0_63_31_31_i_2_n_0;
  wire Link_reg_r1_0_63_31_31_n_0;
  wire Link_reg_r1_0_63_3_5_i_10_n_0;
  wire Link_reg_r1_0_63_3_5_i_11_n_0;
  wire Link_reg_r1_0_63_3_5_i_12_n_0;
  wire Link_reg_r1_0_63_3_5_i_1_n_0;
  wire Link_reg_r1_0_63_3_5_i_2_n_0;
  wire Link_reg_r1_0_63_3_5_i_3_n_0;
  wire Link_reg_r1_0_63_3_5_i_4_n_0;
  wire Link_reg_r1_0_63_3_5_i_6_n_0;
  wire Link_reg_r1_0_63_3_5_i_8_n_0;
  wire Link_reg_r1_0_63_3_5_n_0;
  wire Link_reg_r1_0_63_3_5_n_1;
  wire Link_reg_r1_0_63_3_5_n_2;
  wire Link_reg_r1_0_63_6_8_i_10_n_0;
  wire Link_reg_r1_0_63_6_8_i_11_n_0;
  wire Link_reg_r1_0_63_6_8_i_12_n_0;
  wire Link_reg_r1_0_63_6_8_i_1_n_0;
  wire Link_reg_r1_0_63_6_8_i_2_n_0;
  wire Link_reg_r1_0_63_6_8_i_3_n_0;
  wire Link_reg_r1_0_63_6_8_i_4_n_0;
  wire Link_reg_r1_0_63_6_8_i_6_n_0;
  wire Link_reg_r1_0_63_6_8_i_8_n_0;
  wire Link_reg_r1_0_63_6_8_n_0;
  wire Link_reg_r1_0_63_6_8_n_1;
  wire Link_reg_r1_0_63_6_8_n_2;
  wire Link_reg_r1_0_63_9_11_i_10_n_0;
  wire Link_reg_r1_0_63_9_11_i_11_n_0;
  wire Link_reg_r1_0_63_9_11_i_12_n_0;
  wire Link_reg_r1_0_63_9_11_i_1_n_0;
  wire Link_reg_r1_0_63_9_11_i_2_n_0;
  wire Link_reg_r1_0_63_9_11_i_3_n_0;
  wire Link_reg_r1_0_63_9_11_i_4_n_0;
  wire Link_reg_r1_0_63_9_11_i_5_n_0;
  wire Link_reg_r1_0_63_9_11_i_6_n_0;
  wire Link_reg_r1_0_63_9_11_i_7_n_0;
  wire Link_reg_r1_0_63_9_11_i_8_n_0;
  wire Link_reg_r1_0_63_9_11_i_9_n_0;
  wire Link_reg_r1_0_63_9_11_n_0;
  wire Link_reg_r1_0_63_9_11_n_1;
  wire Link_reg_r1_0_63_9_11_n_2;
  wire Link_reg_r1_128_191_0_2_i_1_n_0;
  wire Link_reg_r1_128_191_0_2_n_0;
  wire Link_reg_r1_128_191_0_2_n_1;
  wire Link_reg_r1_128_191_0_2_n_2;
  wire Link_reg_r1_128_191_12_14_n_0;
  wire Link_reg_r1_128_191_12_14_n_1;
  wire Link_reg_r1_128_191_12_14_n_2;
  wire Link_reg_r1_128_191_15_17_n_0;
  wire Link_reg_r1_128_191_15_17_n_1;
  wire Link_reg_r1_128_191_15_17_n_2;
  wire Link_reg_r1_128_191_18_20_n_0;
  wire Link_reg_r1_128_191_18_20_n_1;
  wire Link_reg_r1_128_191_18_20_n_2;
  wire Link_reg_r1_128_191_21_23_n_0;
  wire Link_reg_r1_128_191_21_23_n_1;
  wire Link_reg_r1_128_191_21_23_n_2;
  wire Link_reg_r1_128_191_24_26_n_0;
  wire Link_reg_r1_128_191_24_26_n_1;
  wire Link_reg_r1_128_191_24_26_n_2;
  wire Link_reg_r1_128_191_27_29_n_0;
  wire Link_reg_r1_128_191_27_29_n_1;
  wire Link_reg_r1_128_191_27_29_n_2;
  wire Link_reg_r1_128_191_30_30_n_0;
  wire Link_reg_r1_128_191_31_31_n_0;
  wire Link_reg_r1_128_191_3_5_n_0;
  wire Link_reg_r1_128_191_3_5_n_1;
  wire Link_reg_r1_128_191_3_5_n_2;
  wire Link_reg_r1_128_191_6_8_n_0;
  wire Link_reg_r1_128_191_6_8_n_1;
  wire Link_reg_r1_128_191_6_8_n_2;
  wire Link_reg_r1_128_191_9_11_n_0;
  wire Link_reg_r1_128_191_9_11_n_1;
  wire Link_reg_r1_128_191_9_11_n_2;
  wire Link_reg_r1_192_255_0_2_i_1_n_0;
  wire Link_reg_r1_192_255_0_2_n_0;
  wire Link_reg_r1_192_255_0_2_n_1;
  wire Link_reg_r1_192_255_0_2_n_2;
  wire Link_reg_r1_192_255_12_14_n_0;
  wire Link_reg_r1_192_255_12_14_n_1;
  wire Link_reg_r1_192_255_12_14_n_2;
  wire Link_reg_r1_192_255_15_17_n_0;
  wire Link_reg_r1_192_255_15_17_n_1;
  wire Link_reg_r1_192_255_15_17_n_2;
  wire Link_reg_r1_192_255_18_20_n_0;
  wire Link_reg_r1_192_255_18_20_n_1;
  wire Link_reg_r1_192_255_18_20_n_2;
  wire Link_reg_r1_192_255_21_23_n_0;
  wire Link_reg_r1_192_255_21_23_n_1;
  wire Link_reg_r1_192_255_21_23_n_2;
  wire Link_reg_r1_192_255_24_26_n_0;
  wire Link_reg_r1_192_255_24_26_n_1;
  wire Link_reg_r1_192_255_24_26_n_2;
  wire Link_reg_r1_192_255_27_29_n_0;
  wire Link_reg_r1_192_255_27_29_n_1;
  wire Link_reg_r1_192_255_27_29_n_2;
  wire Link_reg_r1_192_255_30_30_n_0;
  wire Link_reg_r1_192_255_31_31_n_0;
  wire Link_reg_r1_192_255_3_5_n_0;
  wire Link_reg_r1_192_255_3_5_n_1;
  wire Link_reg_r1_192_255_3_5_n_2;
  wire Link_reg_r1_192_255_6_8_n_0;
  wire Link_reg_r1_192_255_6_8_n_1;
  wire Link_reg_r1_192_255_6_8_n_2;
  wire Link_reg_r1_192_255_9_11_n_0;
  wire Link_reg_r1_192_255_9_11_n_1;
  wire Link_reg_r1_192_255_9_11_n_2;
  wire Link_reg_r1_64_127_0_2_i_1_n_0;
  wire Link_reg_r1_64_127_0_2_n_0;
  wire Link_reg_r1_64_127_0_2_n_1;
  wire Link_reg_r1_64_127_0_2_n_2;
  wire Link_reg_r1_64_127_12_14_n_0;
  wire Link_reg_r1_64_127_12_14_n_1;
  wire Link_reg_r1_64_127_12_14_n_2;
  wire Link_reg_r1_64_127_15_17_n_0;
  wire Link_reg_r1_64_127_15_17_n_1;
  wire Link_reg_r1_64_127_15_17_n_2;
  wire Link_reg_r1_64_127_18_20_n_0;
  wire Link_reg_r1_64_127_18_20_n_1;
  wire Link_reg_r1_64_127_18_20_n_2;
  wire Link_reg_r1_64_127_21_23_n_0;
  wire Link_reg_r1_64_127_21_23_n_1;
  wire Link_reg_r1_64_127_21_23_n_2;
  wire Link_reg_r1_64_127_24_26_n_0;
  wire Link_reg_r1_64_127_24_26_n_1;
  wire Link_reg_r1_64_127_24_26_n_2;
  wire Link_reg_r1_64_127_27_29_n_0;
  wire Link_reg_r1_64_127_27_29_n_1;
  wire Link_reg_r1_64_127_27_29_n_2;
  wire Link_reg_r1_64_127_30_30_n_0;
  wire Link_reg_r1_64_127_31_31_n_0;
  wire Link_reg_r1_64_127_3_5_n_0;
  wire Link_reg_r1_64_127_3_5_n_1;
  wire Link_reg_r1_64_127_3_5_n_2;
  wire Link_reg_r1_64_127_6_8_n_0;
  wire Link_reg_r1_64_127_6_8_n_1;
  wire Link_reg_r1_64_127_6_8_n_2;
  wire Link_reg_r1_64_127_9_11_n_0;
  wire Link_reg_r1_64_127_9_11_n_1;
  wire Link_reg_r1_64_127_9_11_n_2;
  wire Link_reg_r2_0_63_0_2_n_0;
  wire Link_reg_r2_0_63_0_2_n_1;
  wire Link_reg_r2_0_63_0_2_n_2;
  wire Link_reg_r2_0_63_12_14_n_0;
  wire Link_reg_r2_0_63_12_14_n_1;
  wire Link_reg_r2_0_63_12_14_n_2;
  wire Link_reg_r2_0_63_15_17_n_0;
  wire Link_reg_r2_0_63_15_17_n_1;
  wire Link_reg_r2_0_63_15_17_n_2;
  wire Link_reg_r2_0_63_18_20_n_0;
  wire Link_reg_r2_0_63_18_20_n_1;
  wire Link_reg_r2_0_63_18_20_n_2;
  wire Link_reg_r2_0_63_21_23_n_0;
  wire Link_reg_r2_0_63_21_23_n_1;
  wire Link_reg_r2_0_63_21_23_n_2;
  wire Link_reg_r2_0_63_24_26_n_0;
  wire Link_reg_r2_0_63_24_26_n_1;
  wire Link_reg_r2_0_63_24_26_n_2;
  wire Link_reg_r2_0_63_27_29_n_0;
  wire Link_reg_r2_0_63_27_29_n_1;
  wire Link_reg_r2_0_63_27_29_n_2;
  wire Link_reg_r2_0_63_30_30_n_0;
  wire Link_reg_r2_0_63_31_31_n_0;
  wire Link_reg_r2_0_63_3_5_n_0;
  wire Link_reg_r2_0_63_3_5_n_1;
  wire Link_reg_r2_0_63_3_5_n_2;
  wire Link_reg_r2_0_63_6_8_n_0;
  wire Link_reg_r2_0_63_6_8_n_1;
  wire Link_reg_r2_0_63_6_8_n_2;
  wire Link_reg_r2_0_63_9_11_n_0;
  wire Link_reg_r2_0_63_9_11_n_1;
  wire Link_reg_r2_0_63_9_11_n_2;
  wire Link_reg_r2_128_191_0_2_n_0;
  wire Link_reg_r2_128_191_0_2_n_1;
  wire Link_reg_r2_128_191_0_2_n_2;
  wire Link_reg_r2_128_191_12_14_n_0;
  wire Link_reg_r2_128_191_12_14_n_1;
  wire Link_reg_r2_128_191_12_14_n_2;
  wire Link_reg_r2_128_191_15_17_n_0;
  wire Link_reg_r2_128_191_15_17_n_1;
  wire Link_reg_r2_128_191_15_17_n_2;
  wire Link_reg_r2_128_191_18_20_n_0;
  wire Link_reg_r2_128_191_18_20_n_1;
  wire Link_reg_r2_128_191_18_20_n_2;
  wire Link_reg_r2_128_191_21_23_n_0;
  wire Link_reg_r2_128_191_21_23_n_1;
  wire Link_reg_r2_128_191_21_23_n_2;
  wire Link_reg_r2_128_191_24_26_n_0;
  wire Link_reg_r2_128_191_24_26_n_1;
  wire Link_reg_r2_128_191_24_26_n_2;
  wire Link_reg_r2_128_191_27_29_n_0;
  wire Link_reg_r2_128_191_27_29_n_1;
  wire Link_reg_r2_128_191_27_29_n_2;
  wire Link_reg_r2_128_191_30_30_n_0;
  wire Link_reg_r2_128_191_31_31_n_0;
  wire Link_reg_r2_128_191_3_5_n_0;
  wire Link_reg_r2_128_191_3_5_n_1;
  wire Link_reg_r2_128_191_3_5_n_2;
  wire Link_reg_r2_128_191_6_8_n_0;
  wire Link_reg_r2_128_191_6_8_n_1;
  wire Link_reg_r2_128_191_6_8_n_2;
  wire Link_reg_r2_128_191_9_11_n_0;
  wire Link_reg_r2_128_191_9_11_n_1;
  wire Link_reg_r2_128_191_9_11_n_2;
  wire Link_reg_r2_192_255_0_2_n_0;
  wire Link_reg_r2_192_255_0_2_n_1;
  wire Link_reg_r2_192_255_0_2_n_2;
  wire Link_reg_r2_192_255_12_14_n_0;
  wire Link_reg_r2_192_255_12_14_n_1;
  wire Link_reg_r2_192_255_12_14_n_2;
  wire Link_reg_r2_192_255_15_17_n_0;
  wire Link_reg_r2_192_255_15_17_n_1;
  wire Link_reg_r2_192_255_15_17_n_2;
  wire Link_reg_r2_192_255_18_20_n_0;
  wire Link_reg_r2_192_255_18_20_n_1;
  wire Link_reg_r2_192_255_18_20_n_2;
  wire Link_reg_r2_192_255_21_23_n_0;
  wire Link_reg_r2_192_255_21_23_n_1;
  wire Link_reg_r2_192_255_21_23_n_2;
  wire Link_reg_r2_192_255_24_26_n_0;
  wire Link_reg_r2_192_255_24_26_n_1;
  wire Link_reg_r2_192_255_24_26_n_2;
  wire Link_reg_r2_192_255_27_29_n_0;
  wire Link_reg_r2_192_255_27_29_n_1;
  wire Link_reg_r2_192_255_27_29_n_2;
  wire Link_reg_r2_192_255_30_30_n_0;
  wire Link_reg_r2_192_255_31_31_n_0;
  wire Link_reg_r2_192_255_3_5_n_0;
  wire Link_reg_r2_192_255_3_5_n_1;
  wire Link_reg_r2_192_255_3_5_n_2;
  wire Link_reg_r2_192_255_6_8_n_0;
  wire Link_reg_r2_192_255_6_8_n_1;
  wire Link_reg_r2_192_255_6_8_n_2;
  wire Link_reg_r2_192_255_9_11_n_0;
  wire Link_reg_r2_192_255_9_11_n_1;
  wire Link_reg_r2_192_255_9_11_n_2;
  wire Link_reg_r2_64_127_0_2_n_0;
  wire Link_reg_r2_64_127_0_2_n_1;
  wire Link_reg_r2_64_127_0_2_n_2;
  wire Link_reg_r2_64_127_12_14_n_0;
  wire Link_reg_r2_64_127_12_14_n_1;
  wire Link_reg_r2_64_127_12_14_n_2;
  wire Link_reg_r2_64_127_15_17_n_0;
  wire Link_reg_r2_64_127_15_17_n_1;
  wire Link_reg_r2_64_127_15_17_n_2;
  wire Link_reg_r2_64_127_18_20_n_0;
  wire Link_reg_r2_64_127_18_20_n_1;
  wire Link_reg_r2_64_127_18_20_n_2;
  wire Link_reg_r2_64_127_21_23_n_0;
  wire Link_reg_r2_64_127_21_23_n_1;
  wire Link_reg_r2_64_127_21_23_n_2;
  wire Link_reg_r2_64_127_24_26_n_0;
  wire Link_reg_r2_64_127_24_26_n_1;
  wire Link_reg_r2_64_127_24_26_n_2;
  wire Link_reg_r2_64_127_27_29_n_0;
  wire Link_reg_r2_64_127_27_29_n_1;
  wire Link_reg_r2_64_127_27_29_n_2;
  wire Link_reg_r2_64_127_30_30_n_0;
  wire Link_reg_r2_64_127_31_31_n_0;
  wire Link_reg_r2_64_127_3_5_n_0;
  wire Link_reg_r2_64_127_3_5_n_1;
  wire Link_reg_r2_64_127_3_5_n_2;
  wire Link_reg_r2_64_127_6_8_n_0;
  wire Link_reg_r2_64_127_6_8_n_1;
  wire Link_reg_r2_64_127_6_8_n_2;
  wire Link_reg_r2_64_127_9_11_n_0;
  wire Link_reg_r2_64_127_9_11_n_1;
  wire Link_reg_r2_64_127_9_11_n_2;
  wire Link_reg_r3_0_63_0_2_n_0;
  wire Link_reg_r3_0_63_0_2_n_1;
  wire Link_reg_r3_0_63_0_2_n_2;
  wire Link_reg_r3_0_63_12_14_n_0;
  wire Link_reg_r3_0_63_12_14_n_1;
  wire Link_reg_r3_0_63_12_14_n_2;
  wire Link_reg_r3_0_63_15_17_n_0;
  wire Link_reg_r3_0_63_15_17_n_1;
  wire Link_reg_r3_0_63_15_17_n_2;
  wire Link_reg_r3_0_63_18_20_n_0;
  wire Link_reg_r3_0_63_18_20_n_1;
  wire Link_reg_r3_0_63_18_20_n_2;
  wire Link_reg_r3_0_63_21_23_n_0;
  wire Link_reg_r3_0_63_21_23_n_1;
  wire Link_reg_r3_0_63_21_23_n_2;
  wire Link_reg_r3_0_63_24_26_n_0;
  wire Link_reg_r3_0_63_24_26_n_1;
  wire Link_reg_r3_0_63_24_26_n_2;
  wire Link_reg_r3_0_63_27_29_n_0;
  wire Link_reg_r3_0_63_27_29_n_1;
  wire Link_reg_r3_0_63_27_29_n_2;
  wire Link_reg_r3_0_63_30_30_n_0;
  wire Link_reg_r3_0_63_31_31_n_0;
  wire Link_reg_r3_0_63_3_5_n_0;
  wire Link_reg_r3_0_63_3_5_n_1;
  wire Link_reg_r3_0_63_3_5_n_2;
  wire Link_reg_r3_0_63_6_8_n_0;
  wire Link_reg_r3_0_63_6_8_n_1;
  wire Link_reg_r3_0_63_6_8_n_2;
  wire Link_reg_r3_0_63_9_11_n_0;
  wire Link_reg_r3_0_63_9_11_n_1;
  wire Link_reg_r3_0_63_9_11_n_2;
  wire Link_reg_r3_128_191_0_2_n_0;
  wire Link_reg_r3_128_191_0_2_n_1;
  wire Link_reg_r3_128_191_0_2_n_2;
  wire Link_reg_r3_128_191_12_14_n_0;
  wire Link_reg_r3_128_191_12_14_n_1;
  wire Link_reg_r3_128_191_12_14_n_2;
  wire Link_reg_r3_128_191_15_17_n_0;
  wire Link_reg_r3_128_191_15_17_n_1;
  wire Link_reg_r3_128_191_15_17_n_2;
  wire Link_reg_r3_128_191_18_20_n_0;
  wire Link_reg_r3_128_191_18_20_n_1;
  wire Link_reg_r3_128_191_18_20_n_2;
  wire Link_reg_r3_128_191_21_23_n_0;
  wire Link_reg_r3_128_191_21_23_n_1;
  wire Link_reg_r3_128_191_21_23_n_2;
  wire Link_reg_r3_128_191_24_26_n_0;
  wire Link_reg_r3_128_191_24_26_n_1;
  wire Link_reg_r3_128_191_24_26_n_2;
  wire Link_reg_r3_128_191_27_29_n_0;
  wire Link_reg_r3_128_191_27_29_n_1;
  wire Link_reg_r3_128_191_27_29_n_2;
  wire Link_reg_r3_128_191_30_30_n_0;
  wire Link_reg_r3_128_191_31_31_n_0;
  wire Link_reg_r3_128_191_3_5_n_0;
  wire Link_reg_r3_128_191_3_5_n_1;
  wire Link_reg_r3_128_191_3_5_n_2;
  wire Link_reg_r3_128_191_6_8_n_0;
  wire Link_reg_r3_128_191_6_8_n_1;
  wire Link_reg_r3_128_191_6_8_n_2;
  wire Link_reg_r3_128_191_9_11_n_0;
  wire Link_reg_r3_128_191_9_11_n_1;
  wire Link_reg_r3_128_191_9_11_n_2;
  wire Link_reg_r3_192_255_0_2_n_0;
  wire Link_reg_r3_192_255_0_2_n_1;
  wire Link_reg_r3_192_255_0_2_n_2;
  wire Link_reg_r3_192_255_12_14_n_0;
  wire Link_reg_r3_192_255_12_14_n_1;
  wire Link_reg_r3_192_255_12_14_n_2;
  wire Link_reg_r3_192_255_15_17_n_0;
  wire Link_reg_r3_192_255_15_17_n_1;
  wire Link_reg_r3_192_255_15_17_n_2;
  wire Link_reg_r3_192_255_18_20_n_0;
  wire Link_reg_r3_192_255_18_20_n_1;
  wire Link_reg_r3_192_255_18_20_n_2;
  wire Link_reg_r3_192_255_21_23_n_0;
  wire Link_reg_r3_192_255_21_23_n_1;
  wire Link_reg_r3_192_255_21_23_n_2;
  wire Link_reg_r3_192_255_24_26_n_0;
  wire Link_reg_r3_192_255_24_26_n_1;
  wire Link_reg_r3_192_255_24_26_n_2;
  wire Link_reg_r3_192_255_27_29_n_0;
  wire Link_reg_r3_192_255_27_29_n_1;
  wire Link_reg_r3_192_255_27_29_n_2;
  wire Link_reg_r3_192_255_30_30_n_0;
  wire Link_reg_r3_192_255_31_31_n_0;
  wire Link_reg_r3_192_255_3_5_n_0;
  wire Link_reg_r3_192_255_3_5_n_1;
  wire Link_reg_r3_192_255_3_5_n_2;
  wire Link_reg_r3_192_255_6_8_n_0;
  wire Link_reg_r3_192_255_6_8_n_1;
  wire Link_reg_r3_192_255_6_8_n_2;
  wire Link_reg_r3_192_255_9_11_n_0;
  wire Link_reg_r3_192_255_9_11_n_1;
  wire Link_reg_r3_192_255_9_11_n_2;
  wire Link_reg_r3_64_127_0_2_n_0;
  wire Link_reg_r3_64_127_0_2_n_1;
  wire Link_reg_r3_64_127_0_2_n_2;
  wire Link_reg_r3_64_127_12_14_n_0;
  wire Link_reg_r3_64_127_12_14_n_1;
  wire Link_reg_r3_64_127_12_14_n_2;
  wire Link_reg_r3_64_127_15_17_n_0;
  wire Link_reg_r3_64_127_15_17_n_1;
  wire Link_reg_r3_64_127_15_17_n_2;
  wire Link_reg_r3_64_127_18_20_n_0;
  wire Link_reg_r3_64_127_18_20_n_1;
  wire Link_reg_r3_64_127_18_20_n_2;
  wire Link_reg_r3_64_127_21_23_n_0;
  wire Link_reg_r3_64_127_21_23_n_1;
  wire Link_reg_r3_64_127_21_23_n_2;
  wire Link_reg_r3_64_127_24_26_n_0;
  wire Link_reg_r3_64_127_24_26_n_1;
  wire Link_reg_r3_64_127_24_26_n_2;
  wire Link_reg_r3_64_127_27_29_n_0;
  wire Link_reg_r3_64_127_27_29_n_1;
  wire Link_reg_r3_64_127_27_29_n_2;
  wire Link_reg_r3_64_127_30_30_n_0;
  wire Link_reg_r3_64_127_31_31_n_0;
  wire Link_reg_r3_64_127_3_5_n_0;
  wire Link_reg_r3_64_127_3_5_n_1;
  wire Link_reg_r3_64_127_3_5_n_2;
  wire Link_reg_r3_64_127_6_8_n_0;
  wire Link_reg_r3_64_127_6_8_n_1;
  wire Link_reg_r3_64_127_6_8_n_2;
  wire Link_reg_r3_64_127_9_11_n_0;
  wire Link_reg_r3_64_127_9_11_n_1;
  wire Link_reg_r3_64_127_9_11_n_2;
  wire [31:0]P;
  wire P_reg_r1_0_63_0_2_i_11_n_0;
  wire P_reg_r1_0_63_0_2_i_12_n_0;
  wire P_reg_r1_0_63_0_2_i_13_n_0;
  wire P_reg_r1_0_63_0_2_i_15_n_0;
  wire P_reg_r1_0_63_0_2_i_17_n_0;
  wire P_reg_r1_0_63_0_2_i_18_n_0;
  wire P_reg_r1_0_63_0_2_i_21_n_0;
  wire P_reg_r1_0_63_0_2_i_22_n_0;
  wire P_reg_r1_0_63_0_2_i_23_n_0;
  wire P_reg_r1_0_63_0_2_i_24_n_0;
  wire P_reg_r1_0_63_0_2_i_25_n_0;
  wire P_reg_r1_0_63_0_2_i_26_n_0;
  wire P_reg_r1_0_63_0_2_i_27_n_0;
  wire P_reg_r1_0_63_0_2_i_29_n_0;
  wire P_reg_r1_0_63_0_2_i_29_n_1;
  wire P_reg_r1_0_63_0_2_i_29_n_2;
  wire P_reg_r1_0_63_0_2_i_29_n_3;
  wire P_reg_r1_0_63_0_2_i_29_n_4;
  wire P_reg_r1_0_63_0_2_i_29_n_5;
  wire P_reg_r1_0_63_0_2_i_29_n_6;
  wire P_reg_r1_0_63_0_2_i_29_n_7;
  wire P_reg_r1_0_63_0_2_i_30_n_0;
  wire P_reg_r1_0_63_0_2_i_31_n_0;
  wire P_reg_r1_0_63_0_2_i_32_n_0;
  wire P_reg_r1_0_63_0_2_i_33_n_0;
  wire P_reg_r1_0_63_0_2_i_34_n_0;
  wire P_reg_r1_0_63_0_2_i_35_n_0;
  wire P_reg_r1_0_63_0_2_i_36_n_0;
  wire P_reg_r1_0_63_0_2_i_37_n_0;
  wire P_reg_r1_0_63_0_2_i_38_n_0;
  wire P_reg_r1_0_63_0_2_i_39_n_0;
  wire P_reg_r1_0_63_0_2_i_40_n_0;
  wire P_reg_r1_0_63_0_2_i_41_n_0;
  wire P_reg_r1_0_63_0_2_i_42_n_0;
  wire P_reg_r1_0_63_0_2_i_43_n_0;
  wire P_reg_r1_0_63_0_2_i_44_n_0;
  wire P_reg_r1_0_63_0_2_i_4_n_0;
  wire P_reg_r1_0_63_0_2_n_0;
  wire P_reg_r1_0_63_0_2_n_1;
  wire P_reg_r1_0_63_0_2_n_2;
  wire P_reg_r1_0_63_12_14_i_10_n_0;
  wire P_reg_r1_0_63_12_14_i_11_n_0;
  wire P_reg_r1_0_63_12_14_i_11_n_1;
  wire P_reg_r1_0_63_12_14_i_11_n_2;
  wire P_reg_r1_0_63_12_14_i_11_n_3;
  wire P_reg_r1_0_63_12_14_i_11_n_4;
  wire P_reg_r1_0_63_12_14_i_11_n_5;
  wire P_reg_r1_0_63_12_14_i_11_n_6;
  wire P_reg_r1_0_63_12_14_i_11_n_7;
  wire P_reg_r1_0_63_12_14_i_12_n_0;
  wire P_reg_r1_0_63_12_14_i_13_n_0;
  wire P_reg_r1_0_63_12_14_i_14_n_0;
  wire P_reg_r1_0_63_12_14_i_15_n_0;
  wire P_reg_r1_0_63_12_14_i_16_n_0;
  wire P_reg_r1_0_63_12_14_i_18_n_0;
  wire P_reg_r1_0_63_12_14_i_19_n_0;
  wire P_reg_r1_0_63_12_14_i_20_n_0;
  wire P_reg_r1_0_63_12_14_i_21_n_0;
  wire P_reg_r1_0_63_12_14_i_22_n_0;
  wire P_reg_r1_0_63_12_14_i_23_n_0;
  wire P_reg_r1_0_63_12_14_i_24_n_0;
  wire P_reg_r1_0_63_12_14_i_25_n_0;
  wire P_reg_r1_0_63_12_14_i_5_n_0;
  wire P_reg_r1_0_63_12_14_i_7_n_0;
  wire P_reg_r1_0_63_12_14_i_9_n_0;
  wire P_reg_r1_0_63_12_14_n_0;
  wire P_reg_r1_0_63_12_14_n_1;
  wire P_reg_r1_0_63_12_14_n_2;
  wire P_reg_r1_0_63_15_17_i_10_n_0;
  wire P_reg_r1_0_63_15_17_i_11_n_0;
  wire P_reg_r1_0_63_15_17_i_12_n_0;
  wire P_reg_r1_0_63_15_17_i_13_n_0;
  wire P_reg_r1_0_63_15_17_i_13_n_1;
  wire P_reg_r1_0_63_15_17_i_13_n_2;
  wire P_reg_r1_0_63_15_17_i_13_n_3;
  wire P_reg_r1_0_63_15_17_i_13_n_4;
  wire P_reg_r1_0_63_15_17_i_13_n_5;
  wire P_reg_r1_0_63_15_17_i_13_n_6;
  wire P_reg_r1_0_63_15_17_i_13_n_7;
  wire P_reg_r1_0_63_15_17_i_14_n_0;
  wire P_reg_r1_0_63_15_17_i_15_n_0;
  wire P_reg_r1_0_63_15_17_i_16_n_0;
  wire P_reg_r1_0_63_15_17_i_19_n_0;
  wire P_reg_r1_0_63_15_17_i_20_n_0;
  wire P_reg_r1_0_63_15_17_i_21_n_0;
  wire P_reg_r1_0_63_15_17_i_22_n_0;
  wire P_reg_r1_0_63_15_17_i_23_n_0;
  wire P_reg_r1_0_63_15_17_i_24_n_0;
  wire P_reg_r1_0_63_15_17_i_25_n_0;
  wire P_reg_r1_0_63_15_17_i_26_n_0;
  wire P_reg_r1_0_63_15_17_i_5_n_0;
  wire P_reg_r1_0_63_15_17_i_7_n_0;
  wire P_reg_r1_0_63_15_17_i_9_n_0;
  wire P_reg_r1_0_63_15_17_n_0;
  wire P_reg_r1_0_63_15_17_n_1;
  wire P_reg_r1_0_63_15_17_n_2;
  wire P_reg_r1_0_63_18_20_i_10_n_0;
  wire P_reg_r1_0_63_18_20_i_11_n_0;
  wire P_reg_r1_0_63_18_20_i_12_n_0;
  wire P_reg_r1_0_63_18_20_i_13_n_0;
  wire P_reg_r1_0_63_18_20_i_14_n_0;
  wire P_reg_r1_0_63_18_20_i_15_n_0;
  wire P_reg_r1_0_63_18_20_i_15_n_1;
  wire P_reg_r1_0_63_18_20_i_15_n_2;
  wire P_reg_r1_0_63_18_20_i_15_n_3;
  wire P_reg_r1_0_63_18_20_i_15_n_4;
  wire P_reg_r1_0_63_18_20_i_15_n_5;
  wire P_reg_r1_0_63_18_20_i_15_n_6;
  wire P_reg_r1_0_63_18_20_i_15_n_7;
  wire P_reg_r1_0_63_18_20_i_16_n_0;
  wire P_reg_r1_0_63_18_20_i_20_n_0;
  wire P_reg_r1_0_63_18_20_i_21_n_0;
  wire P_reg_r1_0_63_18_20_i_22_n_0;
  wire P_reg_r1_0_63_18_20_i_23_n_0;
  wire P_reg_r1_0_63_18_20_i_24_n_0;
  wire P_reg_r1_0_63_18_20_i_25_n_0;
  wire P_reg_r1_0_63_18_20_i_26_n_0;
  wire P_reg_r1_0_63_18_20_i_27_n_0;
  wire P_reg_r1_0_63_18_20_i_5_n_0;
  wire P_reg_r1_0_63_18_20_i_7_n_0;
  wire P_reg_r1_0_63_18_20_i_9_n_0;
  wire P_reg_r1_0_63_18_20_n_0;
  wire P_reg_r1_0_63_18_20_n_1;
  wire P_reg_r1_0_63_18_20_n_2;
  wire P_reg_r1_0_63_21_23_i_10_n_0;
  wire P_reg_r1_0_63_21_23_i_11_n_0;
  wire P_reg_r1_0_63_21_23_i_12_n_0;
  wire P_reg_r1_0_63_21_23_i_13_n_0;
  wire P_reg_r1_0_63_21_23_i_14_n_0;
  wire P_reg_r1_0_63_21_23_i_15_n_0;
  wire P_reg_r1_0_63_21_23_i_5_n_0;
  wire P_reg_r1_0_63_21_23_i_7_n_0;
  wire P_reg_r1_0_63_21_23_i_9_n_0;
  wire P_reg_r1_0_63_21_23_n_0;
  wire P_reg_r1_0_63_21_23_n_1;
  wire P_reg_r1_0_63_21_23_n_2;
  wire P_reg_r1_0_63_24_26_i_10_n_0;
  wire P_reg_r1_0_63_24_26_i_11_n_0;
  wire P_reg_r1_0_63_24_26_i_11_n_1;
  wire P_reg_r1_0_63_24_26_i_11_n_2;
  wire P_reg_r1_0_63_24_26_i_11_n_3;
  wire P_reg_r1_0_63_24_26_i_11_n_4;
  wire P_reg_r1_0_63_24_26_i_11_n_5;
  wire P_reg_r1_0_63_24_26_i_11_n_6;
  wire P_reg_r1_0_63_24_26_i_11_n_7;
  wire P_reg_r1_0_63_24_26_i_12_n_0;
  wire P_reg_r1_0_63_24_26_i_13_n_0;
  wire P_reg_r1_0_63_24_26_i_14_n_0;
  wire P_reg_r1_0_63_24_26_i_15_n_0;
  wire P_reg_r1_0_63_24_26_i_16_n_0;
  wire P_reg_r1_0_63_24_26_i_18_n_0;
  wire P_reg_r1_0_63_24_26_i_19_n_0;
  wire P_reg_r1_0_63_24_26_i_20_n_0;
  wire P_reg_r1_0_63_24_26_i_21_n_0;
  wire P_reg_r1_0_63_24_26_i_22_n_0;
  wire P_reg_r1_0_63_24_26_i_23_n_0;
  wire P_reg_r1_0_63_24_26_i_24_n_0;
  wire P_reg_r1_0_63_24_26_i_25_n_0;
  wire P_reg_r1_0_63_24_26_i_5_n_0;
  wire P_reg_r1_0_63_24_26_i_7_n_0;
  wire P_reg_r1_0_63_24_26_i_9_n_0;
  wire P_reg_r1_0_63_24_26_n_0;
  wire P_reg_r1_0_63_24_26_n_1;
  wire P_reg_r1_0_63_24_26_n_2;
  wire P_reg_r1_0_63_27_29_i_10_n_0;
  wire P_reg_r1_0_63_27_29_i_11_n_0;
  wire P_reg_r1_0_63_27_29_i_12_n_0;
  wire P_reg_r1_0_63_27_29_i_13_n_1;
  wire P_reg_r1_0_63_27_29_i_13_n_2;
  wire P_reg_r1_0_63_27_29_i_13_n_3;
  wire P_reg_r1_0_63_27_29_i_13_n_4;
  wire P_reg_r1_0_63_27_29_i_13_n_5;
  wire P_reg_r1_0_63_27_29_i_13_n_6;
  wire P_reg_r1_0_63_27_29_i_13_n_7;
  wire P_reg_r1_0_63_27_29_i_14_n_0;
  wire P_reg_r1_0_63_27_29_i_15_n_0;
  wire P_reg_r1_0_63_27_29_i_16_n_0;
  wire P_reg_r1_0_63_27_29_i_19_n_0;
  wire P_reg_r1_0_63_27_29_i_20_n_0;
  wire P_reg_r1_0_63_27_29_i_21_n_0;
  wire P_reg_r1_0_63_27_29_i_22_n_0;
  wire P_reg_r1_0_63_27_29_i_23_n_0;
  wire P_reg_r1_0_63_27_29_i_24_n_0;
  wire P_reg_r1_0_63_27_29_i_25_n_0;
  wire P_reg_r1_0_63_27_29_i_27_n_0;
  wire P_reg_r1_0_63_27_29_i_5_n_0;
  wire P_reg_r1_0_63_27_29_i_7_n_0;
  wire P_reg_r1_0_63_27_29_i_9_n_0;
  wire P_reg_r1_0_63_27_29_n_0;
  wire P_reg_r1_0_63_27_29_n_1;
  wire P_reg_r1_0_63_27_29_n_2;
  wire P_reg_r1_0_63_30_30_i_3_n_0;
  wire P_reg_r1_0_63_30_30_i_4_n_0;
  wire P_reg_r1_0_63_30_30_i_5_n_0;
  wire P_reg_r1_0_63_30_30_n_0;
  wire P_reg_r1_0_63_31_31_i_3_n_0;
  wire P_reg_r1_0_63_31_31_i_4_n_0;
  wire P_reg_r1_0_63_31_31_i_5_n_0;
  wire P_reg_r1_0_63_31_31_n_0;
  wire P_reg_r1_0_63_3_5_i_10_n_0;
  wire P_reg_r1_0_63_3_5_i_11_n_0;
  wire P_reg_r1_0_63_3_5_i_12_n_0;
  wire P_reg_r1_0_63_3_5_i_13_n_0;
  wire P_reg_r1_0_63_3_5_i_13_n_1;
  wire P_reg_r1_0_63_3_5_i_13_n_2;
  wire P_reg_r1_0_63_3_5_i_13_n_3;
  wire P_reg_r1_0_63_3_5_i_13_n_4;
  wire P_reg_r1_0_63_3_5_i_13_n_5;
  wire P_reg_r1_0_63_3_5_i_13_n_6;
  wire P_reg_r1_0_63_3_5_i_13_n_7;
  wire P_reg_r1_0_63_3_5_i_14_n_0;
  wire P_reg_r1_0_63_3_5_i_15_n_0;
  wire P_reg_r1_0_63_3_5_i_16_n_0;
  wire P_reg_r1_0_63_3_5_i_19_n_0;
  wire P_reg_r1_0_63_3_5_i_20_n_0;
  wire P_reg_r1_0_63_3_5_i_21_n_0;
  wire P_reg_r1_0_63_3_5_i_22_n_0;
  wire P_reg_r1_0_63_3_5_i_23_n_0;
  wire P_reg_r1_0_63_3_5_i_24_n_0;
  wire P_reg_r1_0_63_3_5_i_25_n_0;
  wire P_reg_r1_0_63_3_5_i_26_n_0;
  wire P_reg_r1_0_63_3_5_i_5_n_0;
  wire P_reg_r1_0_63_3_5_i_7_n_0;
  wire P_reg_r1_0_63_3_5_i_9_n_0;
  wire P_reg_r1_0_63_3_5_n_0;
  wire P_reg_r1_0_63_3_5_n_1;
  wire P_reg_r1_0_63_3_5_n_2;
  wire P_reg_r1_0_63_6_8_i_10_n_0;
  wire P_reg_r1_0_63_6_8_i_11_n_0;
  wire P_reg_r1_0_63_6_8_i_12_n_0;
  wire P_reg_r1_0_63_6_8_i_13_n_0;
  wire P_reg_r1_0_63_6_8_i_14_n_0;
  wire P_reg_r1_0_63_6_8_i_15_n_0;
  wire P_reg_r1_0_63_6_8_i_15_n_1;
  wire P_reg_r1_0_63_6_8_i_15_n_2;
  wire P_reg_r1_0_63_6_8_i_15_n_3;
  wire P_reg_r1_0_63_6_8_i_15_n_4;
  wire P_reg_r1_0_63_6_8_i_15_n_5;
  wire P_reg_r1_0_63_6_8_i_15_n_6;
  wire P_reg_r1_0_63_6_8_i_15_n_7;
  wire P_reg_r1_0_63_6_8_i_16_n_0;
  wire P_reg_r1_0_63_6_8_i_20_n_0;
  wire P_reg_r1_0_63_6_8_i_21_n_0;
  wire P_reg_r1_0_63_6_8_i_22_n_0;
  wire P_reg_r1_0_63_6_8_i_23_n_0;
  wire P_reg_r1_0_63_6_8_i_24_n_0;
  wire P_reg_r1_0_63_6_8_i_25_n_0;
  wire P_reg_r1_0_63_6_8_i_26_n_0;
  wire P_reg_r1_0_63_6_8_i_27_n_0;
  wire P_reg_r1_0_63_6_8_i_5_n_0;
  wire P_reg_r1_0_63_6_8_i_7_n_0;
  wire P_reg_r1_0_63_6_8_i_9_n_0;
  wire P_reg_r1_0_63_6_8_n_0;
  wire P_reg_r1_0_63_6_8_n_1;
  wire P_reg_r1_0_63_6_8_n_2;
  wire P_reg_r1_0_63_9_11_i_10_n_0;
  wire P_reg_r1_0_63_9_11_i_11_n_0;
  wire P_reg_r1_0_63_9_11_i_12_n_0;
  wire P_reg_r1_0_63_9_11_i_13_n_0;
  wire P_reg_r1_0_63_9_11_i_14_n_0;
  wire P_reg_r1_0_63_9_11_i_15_n_0;
  wire P_reg_r1_0_63_9_11_i_5_n_0;
  wire P_reg_r1_0_63_9_11_i_7_n_0;
  wire P_reg_r1_0_63_9_11_i_9_n_0;
  wire P_reg_r1_0_63_9_11_n_0;
  wire P_reg_r1_0_63_9_11_n_1;
  wire P_reg_r1_0_63_9_11_n_2;
  wire P_reg_r1_128_191_0_2_i_1_n_0;
  wire P_reg_r1_128_191_0_2_n_0;
  wire P_reg_r1_128_191_0_2_n_1;
  wire P_reg_r1_128_191_0_2_n_2;
  wire P_reg_r1_128_191_12_14_n_0;
  wire P_reg_r1_128_191_12_14_n_1;
  wire P_reg_r1_128_191_12_14_n_2;
  wire P_reg_r1_128_191_15_17_n_0;
  wire P_reg_r1_128_191_15_17_n_1;
  wire P_reg_r1_128_191_15_17_n_2;
  wire P_reg_r1_128_191_18_20_n_0;
  wire P_reg_r1_128_191_18_20_n_1;
  wire P_reg_r1_128_191_18_20_n_2;
  wire P_reg_r1_128_191_21_23_n_0;
  wire P_reg_r1_128_191_21_23_n_1;
  wire P_reg_r1_128_191_21_23_n_2;
  wire P_reg_r1_128_191_24_26_n_0;
  wire P_reg_r1_128_191_24_26_n_1;
  wire P_reg_r1_128_191_24_26_n_2;
  wire P_reg_r1_128_191_27_29_n_0;
  wire P_reg_r1_128_191_27_29_n_1;
  wire P_reg_r1_128_191_27_29_n_2;
  wire P_reg_r1_128_191_30_30_n_0;
  wire P_reg_r1_128_191_31_31_n_0;
  wire P_reg_r1_128_191_3_5_n_0;
  wire P_reg_r1_128_191_3_5_n_1;
  wire P_reg_r1_128_191_3_5_n_2;
  wire P_reg_r1_128_191_6_8_n_0;
  wire P_reg_r1_128_191_6_8_n_1;
  wire P_reg_r1_128_191_6_8_n_2;
  wire P_reg_r1_128_191_9_11_n_0;
  wire P_reg_r1_128_191_9_11_n_1;
  wire P_reg_r1_128_191_9_11_n_2;
  wire P_reg_r1_192_255_0_2_i_1_n_0;
  wire P_reg_r1_192_255_0_2_n_0;
  wire P_reg_r1_192_255_0_2_n_1;
  wire P_reg_r1_192_255_0_2_n_2;
  wire P_reg_r1_192_255_12_14_n_0;
  wire P_reg_r1_192_255_12_14_n_1;
  wire P_reg_r1_192_255_12_14_n_2;
  wire P_reg_r1_192_255_15_17_n_0;
  wire P_reg_r1_192_255_15_17_n_1;
  wire P_reg_r1_192_255_15_17_n_2;
  wire P_reg_r1_192_255_18_20_n_0;
  wire P_reg_r1_192_255_18_20_n_1;
  wire P_reg_r1_192_255_18_20_n_2;
  wire P_reg_r1_192_255_21_23_n_0;
  wire P_reg_r1_192_255_21_23_n_1;
  wire P_reg_r1_192_255_21_23_n_2;
  wire P_reg_r1_192_255_24_26_n_0;
  wire P_reg_r1_192_255_24_26_n_1;
  wire P_reg_r1_192_255_24_26_n_2;
  wire P_reg_r1_192_255_27_29_n_0;
  wire P_reg_r1_192_255_27_29_n_1;
  wire P_reg_r1_192_255_27_29_n_2;
  wire P_reg_r1_192_255_30_30_n_0;
  wire P_reg_r1_192_255_31_31_n_0;
  wire P_reg_r1_192_255_3_5_n_0;
  wire P_reg_r1_192_255_3_5_n_1;
  wire P_reg_r1_192_255_3_5_n_2;
  wire P_reg_r1_192_255_6_8_n_0;
  wire P_reg_r1_192_255_6_8_n_1;
  wire P_reg_r1_192_255_6_8_n_2;
  wire P_reg_r1_192_255_9_11_n_0;
  wire P_reg_r1_192_255_9_11_n_1;
  wire P_reg_r1_192_255_9_11_n_2;
  wire P_reg_r1_64_127_0_2_i_1_n_0;
  wire P_reg_r1_64_127_0_2_n_0;
  wire P_reg_r1_64_127_0_2_n_1;
  wire P_reg_r1_64_127_0_2_n_2;
  wire P_reg_r1_64_127_12_14_n_0;
  wire P_reg_r1_64_127_12_14_n_1;
  wire P_reg_r1_64_127_12_14_n_2;
  wire P_reg_r1_64_127_15_17_n_0;
  wire P_reg_r1_64_127_15_17_n_1;
  wire P_reg_r1_64_127_15_17_n_2;
  wire P_reg_r1_64_127_18_20_n_0;
  wire P_reg_r1_64_127_18_20_n_1;
  wire P_reg_r1_64_127_18_20_n_2;
  wire P_reg_r1_64_127_21_23_n_0;
  wire P_reg_r1_64_127_21_23_n_1;
  wire P_reg_r1_64_127_21_23_n_2;
  wire P_reg_r1_64_127_24_26_n_0;
  wire P_reg_r1_64_127_24_26_n_1;
  wire P_reg_r1_64_127_24_26_n_2;
  wire P_reg_r1_64_127_27_29_n_0;
  wire P_reg_r1_64_127_27_29_n_1;
  wire P_reg_r1_64_127_27_29_n_2;
  wire P_reg_r1_64_127_30_30_n_0;
  wire P_reg_r1_64_127_31_31_n_0;
  wire P_reg_r1_64_127_3_5_n_0;
  wire P_reg_r1_64_127_3_5_n_1;
  wire P_reg_r1_64_127_3_5_n_2;
  wire P_reg_r1_64_127_6_8_n_0;
  wire P_reg_r1_64_127_6_8_n_1;
  wire P_reg_r1_64_127_6_8_n_2;
  wire P_reg_r1_64_127_9_11_n_0;
  wire P_reg_r1_64_127_9_11_n_1;
  wire P_reg_r1_64_127_9_11_n_2;
  wire P_reg_r2_0_63_0_2_n_0;
  wire P_reg_r2_0_63_0_2_n_1;
  wire P_reg_r2_0_63_0_2_n_2;
  wire P_reg_r2_0_63_12_14_n_0;
  wire P_reg_r2_0_63_12_14_n_1;
  wire P_reg_r2_0_63_12_14_n_2;
  wire P_reg_r2_0_63_15_17_n_0;
  wire P_reg_r2_0_63_15_17_n_1;
  wire P_reg_r2_0_63_15_17_n_2;
  wire P_reg_r2_0_63_18_20_n_0;
  wire P_reg_r2_0_63_18_20_n_1;
  wire P_reg_r2_0_63_18_20_n_2;
  wire P_reg_r2_0_63_21_23_n_0;
  wire P_reg_r2_0_63_21_23_n_1;
  wire P_reg_r2_0_63_21_23_n_2;
  wire P_reg_r2_0_63_24_26_n_0;
  wire P_reg_r2_0_63_24_26_n_1;
  wire P_reg_r2_0_63_24_26_n_2;
  wire P_reg_r2_0_63_27_29_n_0;
  wire P_reg_r2_0_63_27_29_n_1;
  wire P_reg_r2_0_63_27_29_n_2;
  wire P_reg_r2_0_63_30_30_n_0;
  wire P_reg_r2_0_63_31_31_n_0;
  wire P_reg_r2_0_63_3_5_n_0;
  wire P_reg_r2_0_63_3_5_n_1;
  wire P_reg_r2_0_63_3_5_n_2;
  wire P_reg_r2_0_63_6_8_n_0;
  wire P_reg_r2_0_63_6_8_n_1;
  wire P_reg_r2_0_63_6_8_n_2;
  wire P_reg_r2_0_63_9_11_n_0;
  wire P_reg_r2_0_63_9_11_n_1;
  wire P_reg_r2_0_63_9_11_n_2;
  wire P_reg_r2_128_191_0_2_n_0;
  wire P_reg_r2_128_191_0_2_n_1;
  wire P_reg_r2_128_191_0_2_n_2;
  wire P_reg_r2_128_191_12_14_n_0;
  wire P_reg_r2_128_191_12_14_n_1;
  wire P_reg_r2_128_191_12_14_n_2;
  wire P_reg_r2_128_191_15_17_n_0;
  wire P_reg_r2_128_191_15_17_n_1;
  wire P_reg_r2_128_191_15_17_n_2;
  wire P_reg_r2_128_191_18_20_n_0;
  wire P_reg_r2_128_191_18_20_n_1;
  wire P_reg_r2_128_191_18_20_n_2;
  wire P_reg_r2_128_191_21_23_n_0;
  wire P_reg_r2_128_191_21_23_n_1;
  wire P_reg_r2_128_191_21_23_n_2;
  wire P_reg_r2_128_191_24_26_n_0;
  wire P_reg_r2_128_191_24_26_n_1;
  wire P_reg_r2_128_191_24_26_n_2;
  wire P_reg_r2_128_191_27_29_n_0;
  wire P_reg_r2_128_191_27_29_n_1;
  wire P_reg_r2_128_191_27_29_n_2;
  wire P_reg_r2_128_191_30_30_n_0;
  wire P_reg_r2_128_191_31_31_n_0;
  wire P_reg_r2_128_191_3_5_n_0;
  wire P_reg_r2_128_191_3_5_n_1;
  wire P_reg_r2_128_191_3_5_n_2;
  wire P_reg_r2_128_191_6_8_n_0;
  wire P_reg_r2_128_191_6_8_n_1;
  wire P_reg_r2_128_191_6_8_n_2;
  wire P_reg_r2_128_191_9_11_n_0;
  wire P_reg_r2_128_191_9_11_n_1;
  wire P_reg_r2_128_191_9_11_n_2;
  wire P_reg_r2_192_255_0_2_n_0;
  wire P_reg_r2_192_255_0_2_n_1;
  wire P_reg_r2_192_255_0_2_n_2;
  wire P_reg_r2_192_255_12_14_n_0;
  wire P_reg_r2_192_255_12_14_n_1;
  wire P_reg_r2_192_255_12_14_n_2;
  wire P_reg_r2_192_255_15_17_n_0;
  wire P_reg_r2_192_255_15_17_n_1;
  wire P_reg_r2_192_255_15_17_n_2;
  wire P_reg_r2_192_255_18_20_n_0;
  wire P_reg_r2_192_255_18_20_n_1;
  wire P_reg_r2_192_255_18_20_n_2;
  wire P_reg_r2_192_255_21_23_n_0;
  wire P_reg_r2_192_255_21_23_n_1;
  wire P_reg_r2_192_255_21_23_n_2;
  wire P_reg_r2_192_255_24_26_n_0;
  wire P_reg_r2_192_255_24_26_n_1;
  wire P_reg_r2_192_255_24_26_n_2;
  wire P_reg_r2_192_255_27_29_n_0;
  wire P_reg_r2_192_255_27_29_n_1;
  wire P_reg_r2_192_255_27_29_n_2;
  wire P_reg_r2_192_255_30_30_n_0;
  wire P_reg_r2_192_255_31_31_n_0;
  wire P_reg_r2_192_255_3_5_n_0;
  wire P_reg_r2_192_255_3_5_n_1;
  wire P_reg_r2_192_255_3_5_n_2;
  wire P_reg_r2_192_255_6_8_n_0;
  wire P_reg_r2_192_255_6_8_n_1;
  wire P_reg_r2_192_255_6_8_n_2;
  wire P_reg_r2_192_255_9_11_n_0;
  wire P_reg_r2_192_255_9_11_n_1;
  wire P_reg_r2_192_255_9_11_n_2;
  wire P_reg_r2_64_127_0_2_n_0;
  wire P_reg_r2_64_127_0_2_n_1;
  wire P_reg_r2_64_127_0_2_n_2;
  wire P_reg_r2_64_127_12_14_n_0;
  wire P_reg_r2_64_127_12_14_n_1;
  wire P_reg_r2_64_127_12_14_n_2;
  wire P_reg_r2_64_127_15_17_n_0;
  wire P_reg_r2_64_127_15_17_n_1;
  wire P_reg_r2_64_127_15_17_n_2;
  wire P_reg_r2_64_127_18_20_n_0;
  wire P_reg_r2_64_127_18_20_n_1;
  wire P_reg_r2_64_127_18_20_n_2;
  wire P_reg_r2_64_127_21_23_n_0;
  wire P_reg_r2_64_127_21_23_n_1;
  wire P_reg_r2_64_127_21_23_n_2;
  wire P_reg_r2_64_127_24_26_n_0;
  wire P_reg_r2_64_127_24_26_n_1;
  wire P_reg_r2_64_127_24_26_n_2;
  wire P_reg_r2_64_127_27_29_n_0;
  wire P_reg_r2_64_127_27_29_n_1;
  wire P_reg_r2_64_127_27_29_n_2;
  wire P_reg_r2_64_127_30_30_n_0;
  wire P_reg_r2_64_127_31_31_n_0;
  wire P_reg_r2_64_127_3_5_n_0;
  wire P_reg_r2_64_127_3_5_n_1;
  wire P_reg_r2_64_127_3_5_n_2;
  wire P_reg_r2_64_127_6_8_n_0;
  wire P_reg_r2_64_127_6_8_n_1;
  wire P_reg_r2_64_127_6_8_n_2;
  wire P_reg_r2_64_127_9_11_n_0;
  wire P_reg_r2_64_127_9_11_n_1;
  wire P_reg_r2_64_127_9_11_n_2;
  wire P_reg_r3_0_63_0_2_i_10_n_0;
  wire P_reg_r3_0_63_0_2_i_11_n_0;
  wire P_reg_r3_0_63_0_2_i_1_n_0;
  wire P_reg_r3_0_63_0_2_i_1_n_1;
  wire P_reg_r3_0_63_0_2_i_1_n_2;
  wire P_reg_r3_0_63_0_2_i_1_n_3;
  wire P_reg_r3_0_63_0_2_i_1_n_4;
  wire P_reg_r3_0_63_0_2_i_1_n_5;
  wire P_reg_r3_0_63_0_2_i_1_n_6;
  wire P_reg_r3_0_63_0_2_i_1_n_7;
  wire P_reg_r3_0_63_0_2_i_2_n_0;
  wire P_reg_r3_0_63_0_2_i_2_n_1;
  wire P_reg_r3_0_63_0_2_i_2_n_2;
  wire P_reg_r3_0_63_0_2_i_2_n_3;
  wire P_reg_r3_0_63_0_2_i_2_n_4;
  wire P_reg_r3_0_63_0_2_i_2_n_5;
  wire P_reg_r3_0_63_0_2_i_2_n_6;
  wire P_reg_r3_0_63_0_2_i_2_n_7;
  wire P_reg_r3_0_63_0_2_i_3_n_0;
  wire P_reg_r3_0_63_0_2_i_4_n_0;
  wire P_reg_r3_0_63_0_2_i_5_n_0;
  wire P_reg_r3_0_63_0_2_i_6_n_0;
  wire P_reg_r3_0_63_0_2_i_7_n_0;
  wire P_reg_r3_0_63_0_2_i_8_n_0;
  wire P_reg_r3_0_63_0_2_i_9_n_0;
  wire P_reg_r3_0_63_0_2_n_0;
  wire P_reg_r3_0_63_0_2_n_1;
  wire P_reg_r3_0_63_0_2_n_2;
  wire P_reg_r3_0_63_12_14_n_0;
  wire P_reg_r3_0_63_12_14_n_1;
  wire P_reg_r3_0_63_12_14_n_2;
  wire P_reg_r3_0_63_15_17_n_0;
  wire P_reg_r3_0_63_15_17_n_1;
  wire P_reg_r3_0_63_15_17_n_2;
  wire P_reg_r3_0_63_18_20_n_0;
  wire P_reg_r3_0_63_18_20_n_1;
  wire P_reg_r3_0_63_18_20_n_2;
  wire P_reg_r3_0_63_21_23_n_0;
  wire P_reg_r3_0_63_21_23_n_1;
  wire P_reg_r3_0_63_21_23_n_2;
  wire P_reg_r3_0_63_24_26_n_0;
  wire P_reg_r3_0_63_24_26_n_1;
  wire P_reg_r3_0_63_24_26_n_2;
  wire P_reg_r3_0_63_27_29_n_0;
  wire P_reg_r3_0_63_27_29_n_1;
  wire P_reg_r3_0_63_27_29_n_2;
  wire P_reg_r3_0_63_30_30_n_0;
  wire P_reg_r3_0_63_31_31_n_0;
  wire P_reg_r3_0_63_3_5_n_0;
  wire P_reg_r3_0_63_3_5_n_1;
  wire P_reg_r3_0_63_3_5_n_2;
  wire P_reg_r3_0_63_6_8_n_0;
  wire P_reg_r3_0_63_6_8_n_1;
  wire P_reg_r3_0_63_6_8_n_2;
  wire P_reg_r3_0_63_9_11_n_0;
  wire P_reg_r3_0_63_9_11_n_1;
  wire P_reg_r3_0_63_9_11_n_2;
  wire P_reg_r3_128_191_0_2_n_0;
  wire P_reg_r3_128_191_0_2_n_1;
  wire P_reg_r3_128_191_0_2_n_2;
  wire P_reg_r3_128_191_12_14_n_0;
  wire P_reg_r3_128_191_12_14_n_1;
  wire P_reg_r3_128_191_12_14_n_2;
  wire P_reg_r3_128_191_15_17_n_0;
  wire P_reg_r3_128_191_15_17_n_1;
  wire P_reg_r3_128_191_15_17_n_2;
  wire P_reg_r3_128_191_18_20_n_0;
  wire P_reg_r3_128_191_18_20_n_1;
  wire P_reg_r3_128_191_18_20_n_2;
  wire P_reg_r3_128_191_21_23_n_0;
  wire P_reg_r3_128_191_21_23_n_1;
  wire P_reg_r3_128_191_21_23_n_2;
  wire P_reg_r3_128_191_24_26_n_0;
  wire P_reg_r3_128_191_24_26_n_1;
  wire P_reg_r3_128_191_24_26_n_2;
  wire P_reg_r3_128_191_27_29_n_0;
  wire P_reg_r3_128_191_27_29_n_1;
  wire P_reg_r3_128_191_27_29_n_2;
  wire P_reg_r3_128_191_30_30_n_0;
  wire P_reg_r3_128_191_31_31_n_0;
  wire P_reg_r3_128_191_3_5_n_0;
  wire P_reg_r3_128_191_3_5_n_1;
  wire P_reg_r3_128_191_3_5_n_2;
  wire P_reg_r3_128_191_6_8_n_0;
  wire P_reg_r3_128_191_6_8_n_1;
  wire P_reg_r3_128_191_6_8_n_2;
  wire P_reg_r3_128_191_9_11_n_0;
  wire P_reg_r3_128_191_9_11_n_1;
  wire P_reg_r3_128_191_9_11_n_2;
  wire P_reg_r3_192_255_0_2_n_0;
  wire P_reg_r3_192_255_0_2_n_1;
  wire P_reg_r3_192_255_0_2_n_2;
  wire P_reg_r3_192_255_12_14_n_0;
  wire P_reg_r3_192_255_12_14_n_1;
  wire P_reg_r3_192_255_12_14_n_2;
  wire P_reg_r3_192_255_15_17_n_0;
  wire P_reg_r3_192_255_15_17_n_1;
  wire P_reg_r3_192_255_15_17_n_2;
  wire P_reg_r3_192_255_18_20_n_0;
  wire P_reg_r3_192_255_18_20_n_1;
  wire P_reg_r3_192_255_18_20_n_2;
  wire P_reg_r3_192_255_21_23_n_0;
  wire P_reg_r3_192_255_21_23_n_1;
  wire P_reg_r3_192_255_21_23_n_2;
  wire P_reg_r3_192_255_24_26_n_0;
  wire P_reg_r3_192_255_24_26_n_1;
  wire P_reg_r3_192_255_24_26_n_2;
  wire P_reg_r3_192_255_27_29_n_0;
  wire P_reg_r3_192_255_27_29_n_1;
  wire P_reg_r3_192_255_27_29_n_2;
  wire P_reg_r3_192_255_30_30_n_0;
  wire P_reg_r3_192_255_31_31_n_0;
  wire P_reg_r3_192_255_3_5_n_0;
  wire P_reg_r3_192_255_3_5_n_1;
  wire P_reg_r3_192_255_3_5_n_2;
  wire P_reg_r3_192_255_6_8_n_0;
  wire P_reg_r3_192_255_6_8_n_1;
  wire P_reg_r3_192_255_6_8_n_2;
  wire P_reg_r3_192_255_9_11_n_0;
  wire P_reg_r3_192_255_9_11_n_1;
  wire P_reg_r3_192_255_9_11_n_2;
  wire P_reg_r3_64_127_0_2_n_0;
  wire P_reg_r3_64_127_0_2_n_1;
  wire P_reg_r3_64_127_0_2_n_2;
  wire P_reg_r3_64_127_12_14_n_0;
  wire P_reg_r3_64_127_12_14_n_1;
  wire P_reg_r3_64_127_12_14_n_2;
  wire P_reg_r3_64_127_15_17_n_0;
  wire P_reg_r3_64_127_15_17_n_1;
  wire P_reg_r3_64_127_15_17_n_2;
  wire P_reg_r3_64_127_18_20_n_0;
  wire P_reg_r3_64_127_18_20_n_1;
  wire P_reg_r3_64_127_18_20_n_2;
  wire P_reg_r3_64_127_21_23_n_0;
  wire P_reg_r3_64_127_21_23_n_1;
  wire P_reg_r3_64_127_21_23_n_2;
  wire P_reg_r3_64_127_24_26_n_0;
  wire P_reg_r3_64_127_24_26_n_1;
  wire P_reg_r3_64_127_24_26_n_2;
  wire P_reg_r3_64_127_27_29_n_0;
  wire P_reg_r3_64_127_27_29_n_1;
  wire P_reg_r3_64_127_27_29_n_2;
  wire P_reg_r3_64_127_30_30_n_0;
  wire P_reg_r3_64_127_31_31_n_0;
  wire P_reg_r3_64_127_3_5_n_0;
  wire P_reg_r3_64_127_3_5_n_1;
  wire P_reg_r3_64_127_3_5_n_2;
  wire P_reg_r3_64_127_6_8_n_0;
  wire P_reg_r3_64_127_6_8_n_1;
  wire P_reg_r3_64_127_6_8_n_2;
  wire P_reg_r3_64_127_9_11_n_0;
  wire P_reg_r3_64_127_9_11_n_1;
  wire P_reg_r3_64_127_9_11_n_2;
  wire P_reg_r4_0_63_0_2_n_0;
  wire P_reg_r4_0_63_0_2_n_1;
  wire P_reg_r4_0_63_0_2_n_2;
  wire P_reg_r4_0_63_12_14_n_0;
  wire P_reg_r4_0_63_12_14_n_1;
  wire P_reg_r4_0_63_12_14_n_2;
  wire P_reg_r4_0_63_15_17_n_0;
  wire P_reg_r4_0_63_15_17_n_1;
  wire P_reg_r4_0_63_15_17_n_2;
  wire P_reg_r4_0_63_18_20_n_0;
  wire P_reg_r4_0_63_18_20_n_1;
  wire P_reg_r4_0_63_18_20_n_2;
  wire P_reg_r4_0_63_21_23_n_0;
  wire P_reg_r4_0_63_21_23_n_1;
  wire P_reg_r4_0_63_21_23_n_2;
  wire P_reg_r4_0_63_24_26_n_0;
  wire P_reg_r4_0_63_24_26_n_1;
  wire P_reg_r4_0_63_24_26_n_2;
  wire P_reg_r4_0_63_27_29_n_0;
  wire P_reg_r4_0_63_27_29_n_1;
  wire P_reg_r4_0_63_27_29_n_2;
  wire P_reg_r4_0_63_30_30_n_0;
  wire P_reg_r4_0_63_31_31_n_0;
  wire P_reg_r4_0_63_3_5_n_0;
  wire P_reg_r4_0_63_3_5_n_1;
  wire P_reg_r4_0_63_3_5_n_2;
  wire P_reg_r4_0_63_6_8_n_0;
  wire P_reg_r4_0_63_6_8_n_1;
  wire P_reg_r4_0_63_6_8_n_2;
  wire P_reg_r4_0_63_9_11_n_0;
  wire P_reg_r4_0_63_9_11_n_1;
  wire P_reg_r4_0_63_9_11_n_2;
  wire P_reg_r4_128_191_0_2_n_0;
  wire P_reg_r4_128_191_0_2_n_1;
  wire P_reg_r4_128_191_0_2_n_2;
  wire P_reg_r4_128_191_12_14_n_0;
  wire P_reg_r4_128_191_12_14_n_1;
  wire P_reg_r4_128_191_12_14_n_2;
  wire P_reg_r4_128_191_15_17_n_0;
  wire P_reg_r4_128_191_15_17_n_1;
  wire P_reg_r4_128_191_15_17_n_2;
  wire P_reg_r4_128_191_18_20_n_0;
  wire P_reg_r4_128_191_18_20_n_1;
  wire P_reg_r4_128_191_18_20_n_2;
  wire P_reg_r4_128_191_21_23_n_0;
  wire P_reg_r4_128_191_21_23_n_1;
  wire P_reg_r4_128_191_21_23_n_2;
  wire P_reg_r4_128_191_24_26_n_0;
  wire P_reg_r4_128_191_24_26_n_1;
  wire P_reg_r4_128_191_24_26_n_2;
  wire P_reg_r4_128_191_27_29_n_0;
  wire P_reg_r4_128_191_27_29_n_1;
  wire P_reg_r4_128_191_27_29_n_2;
  wire P_reg_r4_128_191_30_30_n_0;
  wire P_reg_r4_128_191_31_31_n_0;
  wire P_reg_r4_128_191_3_5_n_0;
  wire P_reg_r4_128_191_3_5_n_1;
  wire P_reg_r4_128_191_3_5_n_2;
  wire P_reg_r4_128_191_6_8_n_0;
  wire P_reg_r4_128_191_6_8_n_1;
  wire P_reg_r4_128_191_6_8_n_2;
  wire P_reg_r4_128_191_9_11_n_0;
  wire P_reg_r4_128_191_9_11_n_1;
  wire P_reg_r4_128_191_9_11_n_2;
  wire P_reg_r4_192_255_0_2_n_0;
  wire P_reg_r4_192_255_0_2_n_1;
  wire P_reg_r4_192_255_0_2_n_2;
  wire P_reg_r4_192_255_12_14_n_0;
  wire P_reg_r4_192_255_12_14_n_1;
  wire P_reg_r4_192_255_12_14_n_2;
  wire P_reg_r4_192_255_15_17_n_0;
  wire P_reg_r4_192_255_15_17_n_1;
  wire P_reg_r4_192_255_15_17_n_2;
  wire P_reg_r4_192_255_18_20_n_0;
  wire P_reg_r4_192_255_18_20_n_1;
  wire P_reg_r4_192_255_18_20_n_2;
  wire P_reg_r4_192_255_21_23_n_0;
  wire P_reg_r4_192_255_21_23_n_1;
  wire P_reg_r4_192_255_21_23_n_2;
  wire P_reg_r4_192_255_24_26_n_0;
  wire P_reg_r4_192_255_24_26_n_1;
  wire P_reg_r4_192_255_24_26_n_2;
  wire P_reg_r4_192_255_27_29_n_0;
  wire P_reg_r4_192_255_27_29_n_1;
  wire P_reg_r4_192_255_27_29_n_2;
  wire P_reg_r4_192_255_30_30_n_0;
  wire P_reg_r4_192_255_31_31_n_0;
  wire P_reg_r4_192_255_3_5_n_0;
  wire P_reg_r4_192_255_3_5_n_1;
  wire P_reg_r4_192_255_3_5_n_2;
  wire P_reg_r4_192_255_6_8_n_0;
  wire P_reg_r4_192_255_6_8_n_1;
  wire P_reg_r4_192_255_6_8_n_2;
  wire P_reg_r4_192_255_9_11_n_0;
  wire P_reg_r4_192_255_9_11_n_1;
  wire P_reg_r4_192_255_9_11_n_2;
  wire P_reg_r4_64_127_0_2_n_0;
  wire P_reg_r4_64_127_0_2_n_1;
  wire P_reg_r4_64_127_0_2_n_2;
  wire P_reg_r4_64_127_12_14_n_0;
  wire P_reg_r4_64_127_12_14_n_1;
  wire P_reg_r4_64_127_12_14_n_2;
  wire P_reg_r4_64_127_15_17_n_0;
  wire P_reg_r4_64_127_15_17_n_1;
  wire P_reg_r4_64_127_15_17_n_2;
  wire P_reg_r4_64_127_18_20_n_0;
  wire P_reg_r4_64_127_18_20_n_1;
  wire P_reg_r4_64_127_18_20_n_2;
  wire P_reg_r4_64_127_21_23_n_0;
  wire P_reg_r4_64_127_21_23_n_1;
  wire P_reg_r4_64_127_21_23_n_2;
  wire P_reg_r4_64_127_24_26_n_0;
  wire P_reg_r4_64_127_24_26_n_1;
  wire P_reg_r4_64_127_24_26_n_2;
  wire P_reg_r4_64_127_27_29_n_0;
  wire P_reg_r4_64_127_27_29_n_1;
  wire P_reg_r4_64_127_27_29_n_2;
  wire P_reg_r4_64_127_30_30_n_0;
  wire P_reg_r4_64_127_31_31_n_0;
  wire P_reg_r4_64_127_3_5_n_0;
  wire P_reg_r4_64_127_3_5_n_1;
  wire P_reg_r4_64_127_3_5_n_2;
  wire P_reg_r4_64_127_6_8_n_0;
  wire P_reg_r4_64_127_6_8_n_1;
  wire P_reg_r4_64_127_6_8_n_2;
  wire P_reg_r4_64_127_9_11_n_0;
  wire P_reg_r4_64_127_9_11_n_1;
  wire P_reg_r4_64_127_9_11_n_2;
  wire P_reg_r5_0_63_0_2_n_0;
  wire P_reg_r5_0_63_0_2_n_1;
  wire P_reg_r5_0_63_0_2_n_2;
  wire P_reg_r5_0_63_12_14_n_0;
  wire P_reg_r5_0_63_12_14_n_1;
  wire P_reg_r5_0_63_12_14_n_2;
  wire P_reg_r5_0_63_15_17_n_0;
  wire P_reg_r5_0_63_15_17_n_1;
  wire P_reg_r5_0_63_15_17_n_2;
  wire P_reg_r5_0_63_18_20_n_0;
  wire P_reg_r5_0_63_18_20_n_1;
  wire P_reg_r5_0_63_18_20_n_2;
  wire P_reg_r5_0_63_21_23_n_0;
  wire P_reg_r5_0_63_21_23_n_1;
  wire P_reg_r5_0_63_21_23_n_2;
  wire P_reg_r5_0_63_24_26_n_0;
  wire P_reg_r5_0_63_24_26_n_1;
  wire P_reg_r5_0_63_24_26_n_2;
  wire P_reg_r5_0_63_27_29_n_0;
  wire P_reg_r5_0_63_27_29_n_1;
  wire P_reg_r5_0_63_27_29_n_2;
  wire P_reg_r5_0_63_30_30_n_0;
  wire P_reg_r5_0_63_31_31_n_0;
  wire P_reg_r5_0_63_3_5_n_0;
  wire P_reg_r5_0_63_3_5_n_1;
  wire P_reg_r5_0_63_3_5_n_2;
  wire P_reg_r5_0_63_6_8_n_0;
  wire P_reg_r5_0_63_6_8_n_1;
  wire P_reg_r5_0_63_6_8_n_2;
  wire P_reg_r5_0_63_9_11_n_0;
  wire P_reg_r5_0_63_9_11_n_1;
  wire P_reg_r5_0_63_9_11_n_2;
  wire P_reg_r5_128_191_0_2_n_0;
  wire P_reg_r5_128_191_0_2_n_1;
  wire P_reg_r5_128_191_0_2_n_2;
  wire P_reg_r5_128_191_12_14_n_0;
  wire P_reg_r5_128_191_12_14_n_1;
  wire P_reg_r5_128_191_12_14_n_2;
  wire P_reg_r5_128_191_15_17_n_0;
  wire P_reg_r5_128_191_15_17_n_1;
  wire P_reg_r5_128_191_15_17_n_2;
  wire P_reg_r5_128_191_18_20_n_0;
  wire P_reg_r5_128_191_18_20_n_1;
  wire P_reg_r5_128_191_18_20_n_2;
  wire P_reg_r5_128_191_21_23_n_0;
  wire P_reg_r5_128_191_21_23_n_1;
  wire P_reg_r5_128_191_21_23_n_2;
  wire P_reg_r5_128_191_24_26_n_0;
  wire P_reg_r5_128_191_24_26_n_1;
  wire P_reg_r5_128_191_24_26_n_2;
  wire P_reg_r5_128_191_27_29_n_0;
  wire P_reg_r5_128_191_27_29_n_1;
  wire P_reg_r5_128_191_27_29_n_2;
  wire P_reg_r5_128_191_30_30_n_0;
  wire P_reg_r5_128_191_31_31_n_0;
  wire P_reg_r5_128_191_3_5_n_0;
  wire P_reg_r5_128_191_3_5_n_1;
  wire P_reg_r5_128_191_3_5_n_2;
  wire P_reg_r5_128_191_6_8_n_0;
  wire P_reg_r5_128_191_6_8_n_1;
  wire P_reg_r5_128_191_6_8_n_2;
  wire P_reg_r5_128_191_9_11_n_0;
  wire P_reg_r5_128_191_9_11_n_1;
  wire P_reg_r5_128_191_9_11_n_2;
  wire P_reg_r5_192_255_0_2_n_0;
  wire P_reg_r5_192_255_0_2_n_1;
  wire P_reg_r5_192_255_0_2_n_2;
  wire P_reg_r5_192_255_12_14_n_0;
  wire P_reg_r5_192_255_12_14_n_1;
  wire P_reg_r5_192_255_12_14_n_2;
  wire P_reg_r5_192_255_15_17_n_0;
  wire P_reg_r5_192_255_15_17_n_1;
  wire P_reg_r5_192_255_15_17_n_2;
  wire P_reg_r5_192_255_18_20_n_0;
  wire P_reg_r5_192_255_18_20_n_1;
  wire P_reg_r5_192_255_18_20_n_2;
  wire P_reg_r5_192_255_21_23_n_0;
  wire P_reg_r5_192_255_21_23_n_1;
  wire P_reg_r5_192_255_21_23_n_2;
  wire P_reg_r5_192_255_24_26_n_0;
  wire P_reg_r5_192_255_24_26_n_1;
  wire P_reg_r5_192_255_24_26_n_2;
  wire P_reg_r5_192_255_27_29_n_0;
  wire P_reg_r5_192_255_27_29_n_1;
  wire P_reg_r5_192_255_27_29_n_2;
  wire P_reg_r5_192_255_30_30_n_0;
  wire P_reg_r5_192_255_31_31_n_0;
  wire P_reg_r5_192_255_3_5_n_0;
  wire P_reg_r5_192_255_3_5_n_1;
  wire P_reg_r5_192_255_3_5_n_2;
  wire P_reg_r5_192_255_6_8_n_0;
  wire P_reg_r5_192_255_6_8_n_1;
  wire P_reg_r5_192_255_6_8_n_2;
  wire P_reg_r5_192_255_9_11_n_0;
  wire P_reg_r5_192_255_9_11_n_1;
  wire P_reg_r5_192_255_9_11_n_2;
  wire P_reg_r5_64_127_0_2_n_0;
  wire P_reg_r5_64_127_0_2_n_1;
  wire P_reg_r5_64_127_0_2_n_2;
  wire P_reg_r5_64_127_12_14_n_0;
  wire P_reg_r5_64_127_12_14_n_1;
  wire P_reg_r5_64_127_12_14_n_2;
  wire P_reg_r5_64_127_15_17_n_0;
  wire P_reg_r5_64_127_15_17_n_1;
  wire P_reg_r5_64_127_15_17_n_2;
  wire P_reg_r5_64_127_18_20_n_0;
  wire P_reg_r5_64_127_18_20_n_1;
  wire P_reg_r5_64_127_18_20_n_2;
  wire P_reg_r5_64_127_21_23_n_0;
  wire P_reg_r5_64_127_21_23_n_1;
  wire P_reg_r5_64_127_21_23_n_2;
  wire P_reg_r5_64_127_24_26_n_0;
  wire P_reg_r5_64_127_24_26_n_1;
  wire P_reg_r5_64_127_24_26_n_2;
  wire P_reg_r5_64_127_27_29_n_0;
  wire P_reg_r5_64_127_27_29_n_1;
  wire P_reg_r5_64_127_27_29_n_2;
  wire P_reg_r5_64_127_30_30_n_0;
  wire P_reg_r5_64_127_31_31_n_0;
  wire P_reg_r5_64_127_3_5_n_0;
  wire P_reg_r5_64_127_3_5_n_1;
  wire P_reg_r5_64_127_3_5_n_2;
  wire P_reg_r5_64_127_6_8_n_0;
  wire P_reg_r5_64_127_6_8_n_1;
  wire P_reg_r5_64_127_6_8_n_2;
  wire P_reg_r5_64_127_9_11_n_0;
  wire P_reg_r5_64_127_9_11_n_1;
  wire P_reg_r5_64_127_9_11_n_2;
  wire P_reg_r6_0_63_0_2_i_10_n_0;
  wire P_reg_r6_0_63_0_2_i_1_n_2;
  wire P_reg_r6_0_63_0_2_i_1_n_3;
  wire P_reg_r6_0_63_0_2_i_1_n_5;
  wire P_reg_r6_0_63_0_2_i_1_n_6;
  wire P_reg_r6_0_63_0_2_i_1_n_7;
  wire P_reg_r6_0_63_0_2_i_2_n_0;
  wire P_reg_r6_0_63_0_2_i_2_n_1;
  wire P_reg_r6_0_63_0_2_i_2_n_2;
  wire P_reg_r6_0_63_0_2_i_2_n_3;
  wire P_reg_r6_0_63_0_2_i_2_n_4;
  wire P_reg_r6_0_63_0_2_i_2_n_5;
  wire P_reg_r6_0_63_0_2_i_2_n_6;
  wire P_reg_r6_0_63_0_2_i_2_n_7;
  wire P_reg_r6_0_63_0_2_i_3_n_0;
  wire P_reg_r6_0_63_0_2_i_4_n_0;
  wire P_reg_r6_0_63_0_2_i_5_n_0;
  wire P_reg_r6_0_63_0_2_i_6_n_0;
  wire P_reg_r6_0_63_0_2_i_7_n_0;
  wire P_reg_r6_0_63_0_2_i_8_n_0;
  wire P_reg_r6_0_63_0_2_i_9_n_0;
  wire P_reg_r6_0_63_0_2_n_0;
  wire P_reg_r6_0_63_0_2_n_1;
  wire P_reg_r6_0_63_0_2_n_2;
  wire P_reg_r6_0_63_12_14_n_0;
  wire P_reg_r6_0_63_12_14_n_1;
  wire P_reg_r6_0_63_12_14_n_2;
  wire P_reg_r6_0_63_15_17_n_0;
  wire P_reg_r6_0_63_15_17_n_1;
  wire P_reg_r6_0_63_15_17_n_2;
  wire P_reg_r6_0_63_18_20_n_0;
  wire P_reg_r6_0_63_18_20_n_1;
  wire P_reg_r6_0_63_18_20_n_2;
  wire P_reg_r6_0_63_21_23_n_0;
  wire P_reg_r6_0_63_21_23_n_1;
  wire P_reg_r6_0_63_21_23_n_2;
  wire P_reg_r6_0_63_24_26_n_0;
  wire P_reg_r6_0_63_24_26_n_1;
  wire P_reg_r6_0_63_24_26_n_2;
  wire P_reg_r6_0_63_27_29_n_0;
  wire P_reg_r6_0_63_27_29_n_1;
  wire P_reg_r6_0_63_27_29_n_2;
  wire P_reg_r6_0_63_30_30_n_0;
  wire P_reg_r6_0_63_31_31_n_0;
  wire P_reg_r6_0_63_3_5_n_0;
  wire P_reg_r6_0_63_3_5_n_1;
  wire P_reg_r6_0_63_3_5_n_2;
  wire P_reg_r6_0_63_6_8_n_0;
  wire P_reg_r6_0_63_6_8_n_1;
  wire P_reg_r6_0_63_6_8_n_2;
  wire P_reg_r6_0_63_9_11_n_0;
  wire P_reg_r6_0_63_9_11_n_1;
  wire P_reg_r6_0_63_9_11_n_2;
  wire P_reg_r6_128_191_0_2_n_0;
  wire P_reg_r6_128_191_0_2_n_1;
  wire P_reg_r6_128_191_0_2_n_2;
  wire P_reg_r6_128_191_12_14_n_0;
  wire P_reg_r6_128_191_12_14_n_1;
  wire P_reg_r6_128_191_12_14_n_2;
  wire P_reg_r6_128_191_15_17_n_0;
  wire P_reg_r6_128_191_15_17_n_1;
  wire P_reg_r6_128_191_15_17_n_2;
  wire P_reg_r6_128_191_18_20_n_0;
  wire P_reg_r6_128_191_18_20_n_1;
  wire P_reg_r6_128_191_18_20_n_2;
  wire P_reg_r6_128_191_21_23_n_0;
  wire P_reg_r6_128_191_21_23_n_1;
  wire P_reg_r6_128_191_21_23_n_2;
  wire P_reg_r6_128_191_24_26_n_0;
  wire P_reg_r6_128_191_24_26_n_1;
  wire P_reg_r6_128_191_24_26_n_2;
  wire P_reg_r6_128_191_27_29_n_0;
  wire P_reg_r6_128_191_27_29_n_1;
  wire P_reg_r6_128_191_27_29_n_2;
  wire P_reg_r6_128_191_30_30_n_0;
  wire P_reg_r6_128_191_31_31_n_0;
  wire P_reg_r6_128_191_3_5_n_0;
  wire P_reg_r6_128_191_3_5_n_1;
  wire P_reg_r6_128_191_3_5_n_2;
  wire P_reg_r6_128_191_6_8_n_0;
  wire P_reg_r6_128_191_6_8_n_1;
  wire P_reg_r6_128_191_6_8_n_2;
  wire P_reg_r6_128_191_9_11_n_0;
  wire P_reg_r6_128_191_9_11_n_1;
  wire P_reg_r6_128_191_9_11_n_2;
  wire P_reg_r6_192_255_0_2_n_0;
  wire P_reg_r6_192_255_0_2_n_1;
  wire P_reg_r6_192_255_0_2_n_2;
  wire P_reg_r6_192_255_12_14_n_0;
  wire P_reg_r6_192_255_12_14_n_1;
  wire P_reg_r6_192_255_12_14_n_2;
  wire P_reg_r6_192_255_15_17_n_0;
  wire P_reg_r6_192_255_15_17_n_1;
  wire P_reg_r6_192_255_15_17_n_2;
  wire P_reg_r6_192_255_18_20_n_0;
  wire P_reg_r6_192_255_18_20_n_1;
  wire P_reg_r6_192_255_18_20_n_2;
  wire P_reg_r6_192_255_21_23_n_0;
  wire P_reg_r6_192_255_21_23_n_1;
  wire P_reg_r6_192_255_21_23_n_2;
  wire P_reg_r6_192_255_24_26_n_0;
  wire P_reg_r6_192_255_24_26_n_1;
  wire P_reg_r6_192_255_24_26_n_2;
  wire P_reg_r6_192_255_27_29_n_0;
  wire P_reg_r6_192_255_27_29_n_1;
  wire P_reg_r6_192_255_27_29_n_2;
  wire P_reg_r6_192_255_30_30_n_0;
  wire P_reg_r6_192_255_31_31_n_0;
  wire P_reg_r6_192_255_3_5_n_0;
  wire P_reg_r6_192_255_3_5_n_1;
  wire P_reg_r6_192_255_3_5_n_2;
  wire P_reg_r6_192_255_6_8_n_0;
  wire P_reg_r6_192_255_6_8_n_1;
  wire P_reg_r6_192_255_6_8_n_2;
  wire P_reg_r6_192_255_9_11_n_0;
  wire P_reg_r6_192_255_9_11_n_1;
  wire P_reg_r6_192_255_9_11_n_2;
  wire P_reg_r6_64_127_0_2_n_0;
  wire P_reg_r6_64_127_0_2_n_1;
  wire P_reg_r6_64_127_0_2_n_2;
  wire P_reg_r6_64_127_12_14_n_0;
  wire P_reg_r6_64_127_12_14_n_1;
  wire P_reg_r6_64_127_12_14_n_2;
  wire P_reg_r6_64_127_15_17_n_0;
  wire P_reg_r6_64_127_15_17_n_1;
  wire P_reg_r6_64_127_15_17_n_2;
  wire P_reg_r6_64_127_18_20_n_0;
  wire P_reg_r6_64_127_18_20_n_1;
  wire P_reg_r6_64_127_18_20_n_2;
  wire P_reg_r6_64_127_21_23_n_0;
  wire P_reg_r6_64_127_21_23_n_1;
  wire P_reg_r6_64_127_21_23_n_2;
  wire P_reg_r6_64_127_24_26_n_0;
  wire P_reg_r6_64_127_24_26_n_1;
  wire P_reg_r6_64_127_24_26_n_2;
  wire P_reg_r6_64_127_27_29_n_0;
  wire P_reg_r6_64_127_27_29_n_1;
  wire P_reg_r6_64_127_27_29_n_2;
  wire P_reg_r6_64_127_30_30_n_0;
  wire P_reg_r6_64_127_31_31_n_0;
  wire P_reg_r6_64_127_3_5_n_0;
  wire P_reg_r6_64_127_3_5_n_1;
  wire P_reg_r6_64_127_3_5_n_2;
  wire P_reg_r6_64_127_6_8_n_0;
  wire P_reg_r6_64_127_6_8_n_1;
  wire P_reg_r6_64_127_6_8_n_2;
  wire P_reg_r6_64_127_9_11_n_0;
  wire P_reg_r6_64_127_9_11_n_1;
  wire P_reg_r6_64_127_9_11_n_2;
  wire P_reg_r7_0_63_0_2_n_0;
  wire P_reg_r7_0_63_0_2_n_1;
  wire P_reg_r7_0_63_0_2_n_2;
  wire P_reg_r7_0_63_12_14_n_0;
  wire P_reg_r7_0_63_12_14_n_1;
  wire P_reg_r7_0_63_12_14_n_2;
  wire P_reg_r7_0_63_15_17_n_0;
  wire P_reg_r7_0_63_15_17_n_1;
  wire P_reg_r7_0_63_15_17_n_2;
  wire P_reg_r7_0_63_18_20_n_0;
  wire P_reg_r7_0_63_18_20_n_1;
  wire P_reg_r7_0_63_18_20_n_2;
  wire P_reg_r7_0_63_21_23_n_0;
  wire P_reg_r7_0_63_21_23_n_1;
  wire P_reg_r7_0_63_21_23_n_2;
  wire P_reg_r7_0_63_24_26_n_0;
  wire P_reg_r7_0_63_24_26_n_1;
  wire P_reg_r7_0_63_24_26_n_2;
  wire P_reg_r7_0_63_27_29_n_0;
  wire P_reg_r7_0_63_27_29_n_1;
  wire P_reg_r7_0_63_27_29_n_2;
  wire P_reg_r7_0_63_30_30_n_0;
  wire P_reg_r7_0_63_31_31_n_0;
  wire P_reg_r7_0_63_3_5_n_0;
  wire P_reg_r7_0_63_3_5_n_1;
  wire P_reg_r7_0_63_3_5_n_2;
  wire P_reg_r7_0_63_6_8_n_0;
  wire P_reg_r7_0_63_6_8_n_1;
  wire P_reg_r7_0_63_6_8_n_2;
  wire P_reg_r7_0_63_9_11_n_0;
  wire P_reg_r7_0_63_9_11_n_1;
  wire P_reg_r7_0_63_9_11_n_2;
  wire P_reg_r7_128_191_0_2_n_0;
  wire P_reg_r7_128_191_0_2_n_1;
  wire P_reg_r7_128_191_0_2_n_2;
  wire P_reg_r7_128_191_12_14_n_0;
  wire P_reg_r7_128_191_12_14_n_1;
  wire P_reg_r7_128_191_12_14_n_2;
  wire P_reg_r7_128_191_15_17_n_0;
  wire P_reg_r7_128_191_15_17_n_1;
  wire P_reg_r7_128_191_15_17_n_2;
  wire P_reg_r7_128_191_18_20_n_0;
  wire P_reg_r7_128_191_18_20_n_1;
  wire P_reg_r7_128_191_18_20_n_2;
  wire P_reg_r7_128_191_21_23_n_0;
  wire P_reg_r7_128_191_21_23_n_1;
  wire P_reg_r7_128_191_21_23_n_2;
  wire P_reg_r7_128_191_24_26_n_0;
  wire P_reg_r7_128_191_24_26_n_1;
  wire P_reg_r7_128_191_24_26_n_2;
  wire P_reg_r7_128_191_27_29_n_0;
  wire P_reg_r7_128_191_27_29_n_1;
  wire P_reg_r7_128_191_27_29_n_2;
  wire P_reg_r7_128_191_30_30_n_0;
  wire P_reg_r7_128_191_31_31_n_0;
  wire P_reg_r7_128_191_3_5_n_0;
  wire P_reg_r7_128_191_3_5_n_1;
  wire P_reg_r7_128_191_3_5_n_2;
  wire P_reg_r7_128_191_6_8_n_0;
  wire P_reg_r7_128_191_6_8_n_1;
  wire P_reg_r7_128_191_6_8_n_2;
  wire P_reg_r7_128_191_9_11_n_0;
  wire P_reg_r7_128_191_9_11_n_1;
  wire P_reg_r7_128_191_9_11_n_2;
  wire P_reg_r7_192_255_0_2_n_0;
  wire P_reg_r7_192_255_0_2_n_1;
  wire P_reg_r7_192_255_0_2_n_2;
  wire P_reg_r7_192_255_12_14_n_0;
  wire P_reg_r7_192_255_12_14_n_1;
  wire P_reg_r7_192_255_12_14_n_2;
  wire P_reg_r7_192_255_15_17_n_0;
  wire P_reg_r7_192_255_15_17_n_1;
  wire P_reg_r7_192_255_15_17_n_2;
  wire P_reg_r7_192_255_18_20_n_0;
  wire P_reg_r7_192_255_18_20_n_1;
  wire P_reg_r7_192_255_18_20_n_2;
  wire P_reg_r7_192_255_21_23_n_0;
  wire P_reg_r7_192_255_21_23_n_1;
  wire P_reg_r7_192_255_21_23_n_2;
  wire P_reg_r7_192_255_24_26_n_0;
  wire P_reg_r7_192_255_24_26_n_1;
  wire P_reg_r7_192_255_24_26_n_2;
  wire P_reg_r7_192_255_27_29_n_0;
  wire P_reg_r7_192_255_27_29_n_1;
  wire P_reg_r7_192_255_27_29_n_2;
  wire P_reg_r7_192_255_30_30_n_0;
  wire P_reg_r7_192_255_31_31_n_0;
  wire P_reg_r7_192_255_3_5_n_0;
  wire P_reg_r7_192_255_3_5_n_1;
  wire P_reg_r7_192_255_3_5_n_2;
  wire P_reg_r7_192_255_6_8_n_0;
  wire P_reg_r7_192_255_6_8_n_1;
  wire P_reg_r7_192_255_6_8_n_2;
  wire P_reg_r7_192_255_9_11_n_0;
  wire P_reg_r7_192_255_9_11_n_1;
  wire P_reg_r7_192_255_9_11_n_2;
  wire P_reg_r7_64_127_0_2_n_0;
  wire P_reg_r7_64_127_0_2_n_1;
  wire P_reg_r7_64_127_0_2_n_2;
  wire P_reg_r7_64_127_12_14_n_0;
  wire P_reg_r7_64_127_12_14_n_1;
  wire P_reg_r7_64_127_12_14_n_2;
  wire P_reg_r7_64_127_15_17_n_0;
  wire P_reg_r7_64_127_15_17_n_1;
  wire P_reg_r7_64_127_15_17_n_2;
  wire P_reg_r7_64_127_18_20_n_0;
  wire P_reg_r7_64_127_18_20_n_1;
  wire P_reg_r7_64_127_18_20_n_2;
  wire P_reg_r7_64_127_21_23_n_0;
  wire P_reg_r7_64_127_21_23_n_1;
  wire P_reg_r7_64_127_21_23_n_2;
  wire P_reg_r7_64_127_24_26_n_0;
  wire P_reg_r7_64_127_24_26_n_1;
  wire P_reg_r7_64_127_24_26_n_2;
  wire P_reg_r7_64_127_27_29_n_0;
  wire P_reg_r7_64_127_27_29_n_1;
  wire P_reg_r7_64_127_27_29_n_2;
  wire P_reg_r7_64_127_30_30_n_0;
  wire P_reg_r7_64_127_31_31_n_0;
  wire P_reg_r7_64_127_3_5_n_0;
  wire P_reg_r7_64_127_3_5_n_1;
  wire P_reg_r7_64_127_3_5_n_2;
  wire P_reg_r7_64_127_6_8_n_0;
  wire P_reg_r7_64_127_6_8_n_1;
  wire P_reg_r7_64_127_6_8_n_2;
  wire P_reg_r7_64_127_9_11_n_0;
  wire P_reg_r7_64_127_9_11_n_1;
  wire P_reg_r7_64_127_9_11_n_2;
  wire [4:0]Q;
  wire \bit_counter_reg[30] ;
  wire building_tree_state;
  wire \building_tree_state[0]_i_1_n_0 ;
  wire \building_tree_state[1]_i_1_n_0 ;
  wire \building_tree_state[2]_i_1_n_0 ;
  wire \building_tree_state_reg_n_0_[0] ;
  wire \building_tree_state_reg_n_0_[1] ;
  wire \building_tree_state_reg_n_0_[2] ;
  wire clock_IBUF_BUFG;
  wire [7:1]code_length_tab;
  wire code_length_tab_reg_r1_0_63_0_2_i_1_n_0;
  wire code_length_tab_reg_r1_0_63_0_2_i_4_n_0;
  wire code_length_tab_reg_r2_0_63_0_2_n_0;
  wire code_length_tab_reg_r2_0_63_0_2_n_1;
  wire code_length_tab_reg_r2_0_63_0_2_n_2;
  wire code_length_tab_reg_r2_0_63_3_5_n_0;
  wire code_length_tab_reg_r2_0_63_3_5_n_1;
  wire code_length_tab_reg_r2_0_63_3_5_n_2;
  wire code_length_tab_reg_r2_0_63_6_7_n_0;
  wire code_length_tab_reg_r2_0_63_6_7_n_1;
  wire [7:0]code_out0;
  wire [7:0]code_out0_out;
  wire [7:0]code_out_length;
  wire [7:0]code_out_length0;
  wire \code_out_length[7]_i_1_n_0 ;
  wire code_tab_reg_0_15_0_0__0_i_1_n_0;
  wire code_tab_reg_0_15_0_0__0_n_0;
  wire code_tab_reg_0_15_0_0__0_n_1;
  wire code_tab_reg_0_15_0_0__10_n_0;
  wire code_tab_reg_0_15_0_0__10_n_1;
  wire code_tab_reg_0_15_0_0__11_n_0;
  wire code_tab_reg_0_15_0_0__11_n_1;
  wire code_tab_reg_0_15_0_0__12_n_0;
  wire code_tab_reg_0_15_0_0__12_n_1;
  wire code_tab_reg_0_15_0_0__13_n_0;
  wire code_tab_reg_0_15_0_0__13_n_1;
  wire code_tab_reg_0_15_0_0__14_n_0;
  wire code_tab_reg_0_15_0_0__14_n_1;
  wire code_tab_reg_0_15_0_0__1_n_0;
  wire code_tab_reg_0_15_0_0__1_n_1;
  wire code_tab_reg_0_15_0_0__2_n_0;
  wire code_tab_reg_0_15_0_0__2_n_1;
  wire code_tab_reg_0_15_0_0__3_n_0;
  wire code_tab_reg_0_15_0_0__3_n_1;
  wire code_tab_reg_0_15_0_0__4_n_0;
  wire code_tab_reg_0_15_0_0__4_n_1;
  wire code_tab_reg_0_15_0_0__5_n_0;
  wire code_tab_reg_0_15_0_0__5_n_1;
  wire code_tab_reg_0_15_0_0__6_n_0;
  wire code_tab_reg_0_15_0_0__6_n_1;
  wire code_tab_reg_0_15_0_0__7_n_0;
  wire code_tab_reg_0_15_0_0__7_n_1;
  wire code_tab_reg_0_15_0_0__8_n_0;
  wire code_tab_reg_0_15_0_0__8_n_1;
  wire code_tab_reg_0_15_0_0__9_n_0;
  wire code_tab_reg_0_15_0_0__9_n_1;
  wire code_tab_reg_0_15_0_0_i_1_n_0;
  wire code_tab_reg_0_15_0_0_n_0;
  wire code_tab_reg_0_15_0_0_n_1;
  wire code_tab_reg_0_31_0_0__0_i_1_n_0;
  wire code_tab_reg_0_31_0_0__0_i_2_n_0;
  wire code_tab_reg_0_31_0_0__0_i_2_n_1;
  wire code_tab_reg_0_31_0_0__0_i_2_n_2;
  wire code_tab_reg_0_31_0_0__0_i_2_n_3;
  wire code_tab_reg_0_31_0_0__0_i_2_n_4;
  wire code_tab_reg_0_31_0_0__0_i_2_n_5;
  wire code_tab_reg_0_31_0_0__0_i_2_n_6;
  wire code_tab_reg_0_31_0_0__0_i_2_n_7;
  wire code_tab_reg_0_31_0_0__0_i_3_n_0;
  wire code_tab_reg_0_31_0_0__0_i_4_n_0;
  wire code_tab_reg_0_31_0_0__0_i_5_n_0;
  wire code_tab_reg_0_31_0_0__0_i_6_n_0;
  wire code_tab_reg_0_31_0_0__0_n_0;
  wire code_tab_reg_0_31_0_0__0_n_1;
  wire code_tab_reg_0_31_0_0__1_i_1_n_0;
  wire code_tab_reg_0_31_0_0__1_i_2_n_0;
  wire code_tab_reg_0_31_0_0__1_n_0;
  wire code_tab_reg_0_31_0_0__1_n_1;
  wire code_tab_reg_0_31_0_0__2_i_1_n_0;
  wire code_tab_reg_0_31_0_0__2_i_2_n_0;
  wire code_tab_reg_0_31_0_0__2_n_0;
  wire code_tab_reg_0_31_0_0__2_n_1;
  wire code_tab_reg_0_31_0_0__3_i_1_n_0;
  wire code_tab_reg_0_31_0_0__3_i_2_n_0;
  wire code_tab_reg_0_31_0_0__3_n_0;
  wire code_tab_reg_0_31_0_0__3_n_1;
  wire code_tab_reg_0_31_0_0__4_i_1_n_0;
  wire code_tab_reg_0_31_0_0__4_i_2_n_2;
  wire code_tab_reg_0_31_0_0__4_i_2_n_3;
  wire code_tab_reg_0_31_0_0__4_i_2_n_5;
  wire code_tab_reg_0_31_0_0__4_i_2_n_6;
  wire code_tab_reg_0_31_0_0__4_i_2_n_7;
  wire code_tab_reg_0_31_0_0__4_i_3_n_0;
  wire code_tab_reg_0_31_0_0__4_i_4_n_0;
  wire code_tab_reg_0_31_0_0__4_i_5_n_0;
  wire code_tab_reg_0_31_0_0__4_i_6_n_0;
  wire code_tab_reg_0_31_0_0__4_n_0;
  wire code_tab_reg_0_31_0_0__4_n_1;
  wire code_tab_reg_0_31_0_0__5_i_1_n_0;
  wire code_tab_reg_0_31_0_0__5_i_2_n_0;
  wire code_tab_reg_0_31_0_0__5_n_0;
  wire code_tab_reg_0_31_0_0__5_n_1;
  wire code_tab_reg_0_31_0_0__6_i_1_n_0;
  wire code_tab_reg_0_31_0_0__6_i_2_n_0;
  wire code_tab_reg_0_31_0_0__6_n_0;
  wire code_tab_reg_0_31_0_0__6_n_1;
  wire code_tab_reg_0_31_0_0_i_1_n_0;
  wire code_tab_reg_0_31_0_0_i_2_n_0;
  wire code_tab_reg_0_31_0_0_i_3_n_0;
  wire code_tab_reg_0_31_0_0_i_4_n_0;
  wire code_tab_reg_0_31_0_0_i_5_n_0;
  wire code_tab_reg_0_31_0_0_n_0;
  wire code_tab_reg_0_31_0_0_n_1;
  wire \counter_reg_n_0_[0] ;
  wire \counter_reg_n_0_[1] ;
  wire \counter_reg_n_0_[2] ;
  wire \counter_reg_n_0_[3] ;
  wire \counter_reg_n_0_[4] ;
  wire \counter_reg_n_0_[5] ;
  wire \counter_reg_n_0_[6] ;
  wire \counter_reg_n_0_[7] ;
  wire \counter_reg_rep[3]_i_1_n_0 ;
  wire \counter_reg_rep[3]_i_1_n_1 ;
  wire \counter_reg_rep[3]_i_1_n_2 ;
  wire \counter_reg_rep[3]_i_1_n_3 ;
  wire \counter_reg_rep[3]_i_1_n_4 ;
  wire \counter_reg_rep[3]_i_1_n_5 ;
  wire \counter_reg_rep[3]_i_1_n_6 ;
  wire \counter_reg_rep[3]_i_1_n_7 ;
  wire \counter_reg_rep[7]_i_3_n_1 ;
  wire \counter_reg_rep[7]_i_3_n_2 ;
  wire \counter_reg_rep[7]_i_3_n_3 ;
  wire \counter_reg_rep[7]_i_3_n_4 ;
  wire \counter_reg_rep[7]_i_3_n_5 ;
  wire \counter_reg_rep[7]_i_3_n_6 ;
  wire \counter_reg_rep[7]_i_3_n_7 ;
  wire [7:0]counter_reg_rep__0;
  wire \counter_rep[3]_i_2_n_0 ;
  wire \counter_rep[3]_i_3_n_0 ;
  wire \counter_rep[3]_i_4_n_0 ;
  wire \counter_rep[3]_i_5_n_0 ;
  wire \counter_rep[7]_i_1_n_0 ;
  wire \counter_rep[7]_i_2_n_0 ;
  wire \counter_rep[7]_i_4_n_0 ;
  wire \counter_rep[7]_i_5_n_0 ;
  wire \counter_rep[7]_i_6_n_0 ;
  wire \counter_rep[7]_i_7_n_0 ;
  wire \counter_rep[7]_i_8_n_0 ;
  wire [31:0]current_symbol;
  wire [31:0]current_symbol0;
  wire \current_symbol[0]_i_1_n_0 ;
  wire \current_symbol[1]_i_1_n_0 ;
  wire \current_symbol[2]_i_1_n_0 ;
  wire \current_symbol[31]_i_1_n_0 ;
  wire \current_symbol[3]_i_1_n_0 ;
  wire \current_symbol[4]_i_1_n_0 ;
  wire \current_symbol[5]_i_1_n_0 ;
  wire \current_symbol[6]_i_1_n_0 ;
  wire \current_symbol[7]_i_1_n_0 ;
  wire \current_symbol[7]_i_2_n_0 ;
  wire \current_symbol[7]_i_3_n_0 ;
  wire [7:6]i;
  wire [5:0]i2_in;
  wire \i[12]_i_3_n_0 ;
  wire \i[12]_i_4_n_0 ;
  wire \i[12]_i_5_n_0 ;
  wire \i[12]_i_6_n_0 ;
  wire \i[16]_i_3_n_0 ;
  wire \i[16]_i_4_n_0 ;
  wire \i[16]_i_5_n_0 ;
  wire \i[16]_i_6_n_0 ;
  wire \i[20]_i_3_n_0 ;
  wire \i[20]_i_4_n_0 ;
  wire \i[20]_i_5_n_0 ;
  wire \i[20]_i_6_n_0 ;
  wire \i[24]_i_3_n_0 ;
  wire \i[24]_i_4_n_0 ;
  wire \i[24]_i_5_n_0 ;
  wire \i[24]_i_6_n_0 ;
  wire \i[28]_i_3_n_0 ;
  wire \i[28]_i_4_n_0 ;
  wire \i[28]_i_5_n_0 ;
  wire \i[28]_i_6_n_0 ;
  wire \i[31]_i_3__0_n_0 ;
  wire \i[31]_i_4__0_n_0 ;
  wire \i[31]_i_4_n_0 ;
  wire \i[31]_i_5__0_n_0 ;
  wire \i[31]_i_8_n_0 ;
  wire [31:8]i__0;
  wire \i_reg[12]_i_2_n_0 ;
  wire \i_reg[12]_i_2_n_1 ;
  wire \i_reg[12]_i_2_n_2 ;
  wire \i_reg[12]_i_2_n_3 ;
  wire \i_reg[12]_i_2_n_4 ;
  wire \i_reg[12]_i_2_n_5 ;
  wire \i_reg[12]_i_2_n_6 ;
  wire \i_reg[12]_i_2_n_7 ;
  wire \i_reg[16]_i_2_n_0 ;
  wire \i_reg[16]_i_2_n_1 ;
  wire \i_reg[16]_i_2_n_2 ;
  wire \i_reg[16]_i_2_n_3 ;
  wire \i_reg[16]_i_2_n_4 ;
  wire \i_reg[16]_i_2_n_5 ;
  wire \i_reg[16]_i_2_n_6 ;
  wire \i_reg[16]_i_2_n_7 ;
  wire \i_reg[20]_i_2_n_0 ;
  wire \i_reg[20]_i_2_n_1 ;
  wire \i_reg[20]_i_2_n_2 ;
  wire \i_reg[20]_i_2_n_3 ;
  wire \i_reg[20]_i_2_n_4 ;
  wire \i_reg[20]_i_2_n_5 ;
  wire \i_reg[20]_i_2_n_6 ;
  wire \i_reg[20]_i_2_n_7 ;
  wire \i_reg[24]_i_2_n_0 ;
  wire \i_reg[24]_i_2_n_1 ;
  wire \i_reg[24]_i_2_n_2 ;
  wire \i_reg[24]_i_2_n_3 ;
  wire \i_reg[24]_i_2_n_4 ;
  wire \i_reg[24]_i_2_n_5 ;
  wire \i_reg[24]_i_2_n_6 ;
  wire \i_reg[24]_i_2_n_7 ;
  wire \i_reg[28]_i_2_n_0 ;
  wire \i_reg[28]_i_2_n_1 ;
  wire \i_reg[28]_i_2_n_2 ;
  wire \i_reg[28]_i_2_n_3 ;
  wire \i_reg[28]_i_2_n_4 ;
  wire \i_reg[28]_i_2_n_5 ;
  wire \i_reg[28]_i_2_n_6 ;
  wire \i_reg[28]_i_2_n_7 ;
  wire [0:0]\i_reg[30]_0 ;
  wire \i_reg[31]_0 ;
  wire [0:0]\i_reg[31]_1 ;
  wire \i_reg[31]_i_2_n_2 ;
  wire \i_reg[31]_i_2_n_3 ;
  wire \i_reg[31]_i_2_n_5 ;
  wire \i_reg[31]_i_2_n_6 ;
  wire \i_reg[31]_i_2_n_7 ;
  wire \i_reg_n_0_[0] ;
  wire \i_reg_n_0_[10] ;
  wire \i_reg_n_0_[11] ;
  wire \i_reg_n_0_[12] ;
  wire \i_reg_n_0_[13] ;
  wire \i_reg_n_0_[14] ;
  wire \i_reg_n_0_[15] ;
  wire \i_reg_n_0_[16] ;
  wire \i_reg_n_0_[17] ;
  wire \i_reg_n_0_[18] ;
  wire \i_reg_n_0_[19] ;
  wire \i_reg_n_0_[1] ;
  wire \i_reg_n_0_[20] ;
  wire \i_reg_n_0_[21] ;
  wire \i_reg_n_0_[22] ;
  wire \i_reg_n_0_[23] ;
  wire \i_reg_n_0_[24] ;
  wire \i_reg_n_0_[25] ;
  wire \i_reg_n_0_[26] ;
  wire \i_reg_n_0_[27] ;
  wire \i_reg_n_0_[28] ;
  wire \i_reg_n_0_[29] ;
  wire \i_reg_n_0_[2] ;
  wire \i_reg_n_0_[30] ;
  wire \i_reg_n_0_[31] ;
  wire \i_reg_n_0_[3] ;
  wire \i_reg_n_0_[4] ;
  wire \i_reg_n_0_[5] ;
  wire \i_reg_n_0_[6] ;
  wire \i_reg_n_0_[7] ;
  wire \i_reg_n_0_[8] ;
  wire \i_reg_n_0_[9] ;
  wire \i_reg_rep[0]_0 ;
  wire \i_reg_rep[0]__1_0 ;
  wire \i_reg_rep[0]__2_n_0 ;
  wire \i_reg_rep[1]__2_n_0 ;
  wire \i_reg_rep[2]__2_n_0 ;
  wire \i_reg_rep[3]__2_n_0 ;
  wire \i_reg_rep[4]__2_n_0 ;
  wire \i_reg_rep[4]_i_2_n_0 ;
  wire \i_reg_rep[4]_i_2_n_1 ;
  wire \i_reg_rep[4]_i_2_n_2 ;
  wire \i_reg_rep[4]_i_2_n_3 ;
  wire \i_reg_rep[4]_i_2_n_4 ;
  wire \i_reg_rep[4]_i_2_n_5 ;
  wire \i_reg_rep[4]_i_2_n_6 ;
  wire \i_reg_rep[4]_i_2_n_7 ;
  wire \i_reg_rep[5]__2_n_0 ;
  wire \i_reg_rep[7]_i_7_n_0 ;
  wire \i_reg_rep[7]_i_7_n_1 ;
  wire \i_reg_rep[7]_i_7_n_2 ;
  wire \i_reg_rep[7]_i_7_n_3 ;
  wire \i_reg_rep[7]_i_7_n_4 ;
  wire \i_reg_rep[7]_i_7_n_5 ;
  wire \i_reg_rep[7]_i_7_n_6 ;
  wire \i_reg_rep[7]_i_7_n_7 ;
  wire [7:0]i_reg_rep__0__1;
  wire [5:0]i_reg_rep__1__0;
  wire [7:0]i_reg_rep__2__0;
  wire [5:0]i_reg_rep__3;
  wire \i_rep[4]_i_3_n_0 ;
  wire \i_rep[4]_i_4_n_0 ;
  wire \i_rep[4]_i_5_n_0 ;
  wire \i_rep[4]_i_6_n_0 ;
  wire \i_rep[7]_i_10_n_0 ;
  wire \i_rep[7]_i_11_n_0 ;
  wire \i_rep[7]_i_12_n_0 ;
  wire \i_rep[7]_i_3_n_0 ;
  wire \i_rep[7]_i_4_n_0 ;
  wire \i_rep[7]_i_5_n_0 ;
  wire \i_rep[7]_i_6_n_0 ;
  wire \i_rep[7]_i_8_n_0 ;
  wire \i_rep[7]_i_9_n_0 ;
  wire [31:0]it;
  wire \it[0]_i_1_n_0 ;
  wire \it[12]_i_2_n_0 ;
  wire \it[12]_i_3_n_0 ;
  wire \it[12]_i_4_n_0 ;
  wire \it[12]_i_5_n_0 ;
  wire \it[16]_i_2_n_0 ;
  wire \it[16]_i_3_n_0 ;
  wire \it[16]_i_4_n_0 ;
  wire \it[16]_i_5_n_0 ;
  wire \it[20]_i_2_n_0 ;
  wire \it[20]_i_3_n_0 ;
  wire \it[20]_i_4_n_0 ;
  wire \it[20]_i_5_n_0 ;
  wire \it[24]_i_2_n_0 ;
  wire \it[24]_i_3_n_0 ;
  wire \it[24]_i_4_n_0 ;
  wire \it[24]_i_5_n_0 ;
  wire \it[28]_i_2_n_0 ;
  wire \it[28]_i_3_n_0 ;
  wire \it[28]_i_4_n_0 ;
  wire \it[28]_i_5_n_0 ;
  wire \it[31]_i_1_n_0 ;
  wire \it[31]_i_2_n_0 ;
  wire \it[31]_i_4_n_0 ;
  wire \it[31]_i_5_n_0 ;
  wire \it[31]_i_6_n_0 ;
  wire \it[31]_i_7_n_0 ;
  wire \it[4]_i_2_n_0 ;
  wire \it[4]_i_3_n_0 ;
  wire \it[4]_i_4_n_0 ;
  wire \it[4]_i_5_n_0 ;
  wire \it[8]_i_2_n_0 ;
  wire \it[8]_i_3_n_0 ;
  wire \it[8]_i_4_n_0 ;
  wire \it[8]_i_5_n_0 ;
  wire \it_reg[12]_i_1_n_0 ;
  wire \it_reg[12]_i_1_n_1 ;
  wire \it_reg[12]_i_1_n_2 ;
  wire \it_reg[12]_i_1_n_3 ;
  wire \it_reg[12]_i_1_n_4 ;
  wire \it_reg[12]_i_1_n_5 ;
  wire \it_reg[12]_i_1_n_6 ;
  wire \it_reg[12]_i_1_n_7 ;
  wire \it_reg[16]_i_1_n_0 ;
  wire \it_reg[16]_i_1_n_1 ;
  wire \it_reg[16]_i_1_n_2 ;
  wire \it_reg[16]_i_1_n_3 ;
  wire \it_reg[16]_i_1_n_4 ;
  wire \it_reg[16]_i_1_n_5 ;
  wire \it_reg[16]_i_1_n_6 ;
  wire \it_reg[16]_i_1_n_7 ;
  wire \it_reg[20]_i_1_n_0 ;
  wire \it_reg[20]_i_1_n_1 ;
  wire \it_reg[20]_i_1_n_2 ;
  wire \it_reg[20]_i_1_n_3 ;
  wire \it_reg[20]_i_1_n_4 ;
  wire \it_reg[20]_i_1_n_5 ;
  wire \it_reg[20]_i_1_n_6 ;
  wire \it_reg[20]_i_1_n_7 ;
  wire \it_reg[24]_i_1_n_0 ;
  wire \it_reg[24]_i_1_n_1 ;
  wire \it_reg[24]_i_1_n_2 ;
  wire \it_reg[24]_i_1_n_3 ;
  wire \it_reg[24]_i_1_n_4 ;
  wire \it_reg[24]_i_1_n_5 ;
  wire \it_reg[24]_i_1_n_6 ;
  wire \it_reg[24]_i_1_n_7 ;
  wire \it_reg[28]_i_1_n_0 ;
  wire \it_reg[28]_i_1_n_1 ;
  wire \it_reg[28]_i_1_n_2 ;
  wire \it_reg[28]_i_1_n_3 ;
  wire \it_reg[28]_i_1_n_4 ;
  wire \it_reg[28]_i_1_n_5 ;
  wire \it_reg[28]_i_1_n_6 ;
  wire \it_reg[28]_i_1_n_7 ;
  wire \it_reg[31]_i_3_n_2 ;
  wire \it_reg[31]_i_3_n_3 ;
  wire \it_reg[31]_i_3_n_5 ;
  wire \it_reg[31]_i_3_n_6 ;
  wire \it_reg[31]_i_3_n_7 ;
  wire \it_reg[4]_i_1_n_0 ;
  wire \it_reg[4]_i_1_n_1 ;
  wire \it_reg[4]_i_1_n_2 ;
  wire \it_reg[4]_i_1_n_3 ;
  wire \it_reg[4]_i_1_n_4 ;
  wire \it_reg[4]_i_1_n_5 ;
  wire \it_reg[4]_i_1_n_6 ;
  wire \it_reg[4]_i_1_n_7 ;
  wire \it_reg[8]_i_1_n_0 ;
  wire \it_reg[8]_i_1_n_1 ;
  wire \it_reg[8]_i_1_n_2 ;
  wire \it_reg[8]_i_1_n_3 ;
  wire \it_reg[8]_i_1_n_4 ;
  wire \it_reg[8]_i_1_n_5 ;
  wire \it_reg[8]_i_1_n_6 ;
  wire \it_reg[8]_i_1_n_7 ;
  wire [31:0]j;
  wire \j[0]_i_1_n_0 ;
  wire \j[10]_i_1_n_0 ;
  wire \j[11]_i_1_n_0 ;
  wire \j[12]_i_1_n_0 ;
  wire \j[12]_i_3_n_0 ;
  wire \j[12]_i_4_n_0 ;
  wire \j[12]_i_5_n_0 ;
  wire \j[12]_i_6_n_0 ;
  wire \j[13]_i_1_n_0 ;
  wire \j[14]_i_1_n_0 ;
  wire \j[15]_i_1_n_0 ;
  wire \j[16]_i_1_n_0 ;
  wire \j[16]_i_3_n_0 ;
  wire \j[16]_i_4_n_0 ;
  wire \j[16]_i_5_n_0 ;
  wire \j[16]_i_6_n_0 ;
  wire \j[17]_i_1_n_0 ;
  wire \j[18]_i_1_n_0 ;
  wire \j[19]_i_1_n_0 ;
  wire \j[1]_i_1_n_0 ;
  wire \j[20]_i_1_n_0 ;
  wire \j[20]_i_3_n_0 ;
  wire \j[20]_i_4_n_0 ;
  wire \j[20]_i_5_n_0 ;
  wire \j[20]_i_6_n_0 ;
  wire \j[21]_i_1_n_0 ;
  wire \j[22]_i_1_n_0 ;
  wire \j[23]_i_1_n_0 ;
  wire \j[24]_i_1_n_0 ;
  wire \j[24]_i_3_n_0 ;
  wire \j[24]_i_4_n_0 ;
  wire \j[24]_i_5_n_0 ;
  wire \j[24]_i_6_n_0 ;
  wire \j[25]_i_1_n_0 ;
  wire \j[26]_i_1_n_0 ;
  wire \j[27]_i_1_n_0 ;
  wire \j[28]_i_1_n_0 ;
  wire \j[28]_i_3_n_0 ;
  wire \j[28]_i_4_n_0 ;
  wire \j[28]_i_5_n_0 ;
  wire \j[28]_i_6_n_0 ;
  wire \j[29]_i_1_n_0 ;
  wire \j[2]_i_1_n_0 ;
  wire \j[30]_i_1_n_0 ;
  wire \j[31]_i_1_n_0 ;
  wire \j[31]_i_2_n_0 ;
  wire \j[31]_i_3_n_0 ;
  wire \j[31]_i_5_n_0 ;
  wire \j[31]_i_6_n_0 ;
  wire \j[31]_i_7_n_0 ;
  wire \j[3]_i_1_n_0 ;
  wire \j[4]_i_1_n_0 ;
  wire \j[5]_i_1_n_0 ;
  wire \j[6]_i_1_n_0 ;
  wire \j[7]_i_1_n_0 ;
  wire \j[8]_i_1_n_0 ;
  wire \j[9]_i_1_n_0 ;
  wire \j_reg[12]_i_2_n_0 ;
  wire \j_reg[12]_i_2_n_1 ;
  wire \j_reg[12]_i_2_n_2 ;
  wire \j_reg[12]_i_2_n_3 ;
  wire \j_reg[12]_i_2_n_4 ;
  wire \j_reg[12]_i_2_n_5 ;
  wire \j_reg[12]_i_2_n_6 ;
  wire \j_reg[12]_i_2_n_7 ;
  wire \j_reg[16]_i_2_n_0 ;
  wire \j_reg[16]_i_2_n_1 ;
  wire \j_reg[16]_i_2_n_2 ;
  wire \j_reg[16]_i_2_n_3 ;
  wire \j_reg[16]_i_2_n_4 ;
  wire \j_reg[16]_i_2_n_5 ;
  wire \j_reg[16]_i_2_n_6 ;
  wire \j_reg[16]_i_2_n_7 ;
  wire \j_reg[20]_i_2_n_0 ;
  wire \j_reg[20]_i_2_n_1 ;
  wire \j_reg[20]_i_2_n_2 ;
  wire \j_reg[20]_i_2_n_3 ;
  wire \j_reg[20]_i_2_n_4 ;
  wire \j_reg[20]_i_2_n_5 ;
  wire \j_reg[20]_i_2_n_6 ;
  wire \j_reg[20]_i_2_n_7 ;
  wire \j_reg[24]_i_2_n_0 ;
  wire \j_reg[24]_i_2_n_1 ;
  wire \j_reg[24]_i_2_n_2 ;
  wire \j_reg[24]_i_2_n_3 ;
  wire \j_reg[24]_i_2_n_4 ;
  wire \j_reg[24]_i_2_n_5 ;
  wire \j_reg[24]_i_2_n_6 ;
  wire \j_reg[24]_i_2_n_7 ;
  wire \j_reg[28]_i_2_n_0 ;
  wire \j_reg[28]_i_2_n_1 ;
  wire \j_reg[28]_i_2_n_2 ;
  wire \j_reg[28]_i_2_n_3 ;
  wire \j_reg[28]_i_2_n_4 ;
  wire \j_reg[28]_i_2_n_5 ;
  wire \j_reg[28]_i_2_n_6 ;
  wire \j_reg[28]_i_2_n_7 ;
  wire \j_reg[31]_i_4_n_2 ;
  wire \j_reg[31]_i_4_n_3 ;
  wire \j_reg[31]_i_4_n_5 ;
  wire \j_reg[31]_i_4_n_6 ;
  wire \j_reg[31]_i_4_n_7 ;
  wire \j_reg_rep[0]__0_n_0 ;
  wire \j_reg_rep[0]__1_n_0 ;
  wire \j_reg_rep[1]__0_n_0 ;
  wire \j_reg_rep[1]__1_n_0 ;
  wire \j_reg_rep[2]__0_n_0 ;
  wire \j_reg_rep[2]__1_n_0 ;
  wire \j_reg_rep[3]__0_n_0 ;
  wire \j_reg_rep[3]__1_n_0 ;
  wire \j_reg_rep[4]__0_n_0 ;
  wire \j_reg_rep[4]__1_n_0 ;
  wire \j_reg_rep[5]__0_n_0 ;
  wire \j_reg_rep[5]__1_n_0 ;
  wire \j_reg_rep[6]__0_n_0 ;
  wire \j_reg_rep[6]__1_n_0 ;
  wire \j_reg_rep[7]__0_n_0 ;
  wire \j_reg_rep[7]__1_n_0 ;
  wire [7:0]j_reg_rep__2;
  wire [31:0]last_symbol;
  wire [31:0]last_symbol0;
  wire \last_symbol[31]_i_1_n_0 ;
  wire \last_symbol_reg[31]_i_3_n_7 ;
  wire making_tree_state;
  wire [31:0]making_tree_state1;
  wire [31:0]making_tree_state2;
  wire \making_tree_state[0]_i_1_n_0 ;
  wire \making_tree_state[0]_i_2_n_0 ;
  wire \making_tree_state[0]_i_3_n_0 ;
  wire \making_tree_state[0]_i_4_n_0 ;
  wire \making_tree_state[0]_i_5_n_0 ;
  wire \making_tree_state[0]_i_6_n_0 ;
  wire \making_tree_state[0]_i_7_n_0 ;
  wire \making_tree_state[1]_i_11_n_0 ;
  wire \making_tree_state[1]_i_12_n_0 ;
  wire \making_tree_state[1]_i_17_n_0 ;
  wire \making_tree_state[1]_i_1_n_0 ;
  wire \making_tree_state[1]_i_26_n_0 ;
  wire \making_tree_state[1]_i_2_n_0 ;
  wire \making_tree_state[1]_i_35_n_0 ;
  wire \making_tree_state[1]_i_3_n_0 ;
  wire \making_tree_state[1]_i_4_n_0 ;
  wire \making_tree_state[1]_i_6_n_0 ;
  wire \making_tree_state[2]_i_10_n_0 ;
  wire \making_tree_state[2]_i_11_n_0 ;
  wire \making_tree_state[2]_i_12_n_0 ;
  wire \making_tree_state[2]_i_13_n_0 ;
  wire \making_tree_state[2]_i_14_n_0 ;
  wire \making_tree_state[2]_i_15_n_0 ;
  wire \making_tree_state[2]_i_17_n_0 ;
  wire \making_tree_state[2]_i_18_n_0 ;
  wire \making_tree_state[2]_i_19_n_0 ;
  wire \making_tree_state[2]_i_1_n_0 ;
  wire \making_tree_state[2]_i_20_n_0 ;
  wire \making_tree_state[2]_i_28_n_0 ;
  wire \making_tree_state[2]_i_29_n_0 ;
  wire \making_tree_state[2]_i_30_n_0 ;
  wire \making_tree_state[2]_i_31_n_0 ;
  wire \making_tree_state[2]_i_32_n_0 ;
  wire \making_tree_state[2]_i_33_n_0 ;
  wire \making_tree_state[2]_i_34_n_0 ;
  wire \making_tree_state[2]_i_35_n_0 ;
  wire \making_tree_state[2]_i_36_n_0 ;
  wire \making_tree_state[2]_i_37_n_0 ;
  wire \making_tree_state[2]_i_38_n_0 ;
  wire \making_tree_state[2]_i_4_n_0 ;
  wire \making_tree_state[2]_i_5_n_0 ;
  wire \making_tree_state[2]_i_7_n_0 ;
  wire \making_tree_state[2]_i_8_n_0 ;
  wire \making_tree_state[2]_i_9_n_0 ;
  wire \making_tree_state_reg[2]_i_16_n_0 ;
  wire \making_tree_state_reg[2]_i_16_n_1 ;
  wire \making_tree_state_reg[2]_i_16_n_2 ;
  wire \making_tree_state_reg[2]_i_16_n_3 ;
  wire \making_tree_state_reg[2]_i_3_n_1 ;
  wire \making_tree_state_reg[2]_i_3_n_2 ;
  wire \making_tree_state_reg[2]_i_3_n_3 ;
  wire \making_tree_state_reg[2]_i_6_n_0 ;
  wire \making_tree_state_reg[2]_i_6_n_1 ;
  wire \making_tree_state_reg[2]_i_6_n_2 ;
  wire \making_tree_state_reg[2]_i_6_n_3 ;
  wire \making_tree_state_reg_n_0_[0] ;
  wire \making_tree_state_reg_n_0_[1] ;
  wire \making_tree_state_reg_n_0_[2] ;
  wire \p_0_out_inferred__9/code_length_tab_reg_r1_0_63_3_5_i_4_n_0 ;
  wire \p_0_out_inferred__9/code_length_tab_reg_r1_0_63_6_7_i_3_n_0 ;
  wire [7:0]p_1_in;
  wire [7:0]p_1_out;
  wire [5:0]p_2_in;
  wire [31:0]p_2_out;
  wire [5:0]p_3_in;
  wire [7:0]p_3_out;
  wire [7:1]p_4_in;
  wire [31:8]p_4_in__0;
  wire [31:0]p_5_out;
  wire [7:0]p_6_in;
  wire [31:0]p_7_out;
  wire [7:0]p_8_in;
  wire position;
  wire [7:1]position0;
  wire [7:0]position__0;
  wire \position_reg_rep[4]_i_1_n_0 ;
  wire \position_reg_rep[4]_i_1_n_1 ;
  wire \position_reg_rep[4]_i_1_n_2 ;
  wire \position_reg_rep[4]_i_1_n_3 ;
  wire \position_reg_rep[7]_i_12_n_0 ;
  wire \position_reg_rep[7]_i_12_n_1 ;
  wire \position_reg_rep[7]_i_12_n_2 ;
  wire \position_reg_rep[7]_i_12_n_3 ;
  wire \position_reg_rep[7]_i_3_n_2 ;
  wire \position_reg_rep[7]_i_3_n_3 ;
  wire \position_reg_rep[7]_i_4_n_1 ;
  wire \position_reg_rep[7]_i_4_n_2 ;
  wire \position_reg_rep[7]_i_4_n_3 ;
  wire \position_reg_rep[7]_i_8_n_0 ;
  wire \position_reg_rep[7]_i_8_n_1 ;
  wire \position_reg_rep[7]_i_8_n_2 ;
  wire \position_reg_rep[7]_i_8_n_3 ;
  wire [7:0]position_reg_rep__0__0;
  wire [7:0]position_reg_rep__1__0;
  wire [7:0]position_reg_rep__2;
  wire \position_rep[0]_i_1_n_0 ;
  wire \position_rep[4]_i_2_n_0 ;
  wire \position_rep[4]_i_3_n_0 ;
  wire \position_rep[4]_i_4_n_0 ;
  wire \position_rep[4]_i_5_n_0 ;
  wire \position_rep[7]_i_10_n_0 ;
  wire \position_rep[7]_i_11_n_0 ;
  wire \position_rep[7]_i_13_n_0 ;
  wire \position_rep[7]_i_14_n_0 ;
  wire \position_rep[7]_i_15_n_0 ;
  wire \position_rep[7]_i_16_n_0 ;
  wire \position_rep[7]_i_17_n_0 ;
  wire \position_rep[7]_i_18_n_0 ;
  wire \position_rep[7]_i_19_n_0 ;
  wire \position_rep[7]_i_1_n_0 ;
  wire \position_rep[7]_i_20_n_0 ;
  wire \position_rep[7]_i_5_n_0 ;
  wire \position_rep[7]_i_6_n_0 ;
  wire \position_rep[7]_i_7_n_0 ;
  wire \position_rep[7]_i_9_n_0 ;
  wire probabilities_tab_reg_i_10;
  wire probabilities_tab_reg_i_11;
  wire probabilities_tab_reg_i_12;
  wire probabilities_tab_reg_i_1_n_0;
  wire probabilities_tab_reg_i_2_n_0;
  wire probabilities_tab_reg_i_3_n_0;
  wire probabilities_tab_reg_i_4_n_0;
  wire probabilities_tab_reg_i_5_n_0;
  wire probabilities_tab_reg_i_6_n_0;
  wire probabilities_tab_reg_i_7;
  wire probabilities_tab_reg_i_8;
  wire probabilities_tab_reg_i_9;
  wire probabilities_tab_reg_n_0;
  wire probabilities_tab_reg_n_1;
  wire probabilities_tab_reg_n_10;
  wire probabilities_tab_reg_n_11;
  wire probabilities_tab_reg_n_12;
  wire probabilities_tab_reg_n_13;
  wire probabilities_tab_reg_n_14;
  wire probabilities_tab_reg_n_15;
  wire probabilities_tab_reg_n_16;
  wire probabilities_tab_reg_n_17;
  wire probabilities_tab_reg_n_18;
  wire probabilities_tab_reg_n_19;
  wire probabilities_tab_reg_n_2;
  wire probabilities_tab_reg_n_20;
  wire probabilities_tab_reg_n_21;
  wire probabilities_tab_reg_n_22;
  wire probabilities_tab_reg_n_23;
  wire probabilities_tab_reg_n_24;
  wire probabilities_tab_reg_n_25;
  wire probabilities_tab_reg_n_26;
  wire probabilities_tab_reg_n_27;
  wire probabilities_tab_reg_n_28;
  wire probabilities_tab_reg_n_29;
  wire probabilities_tab_reg_n_3;
  wire probabilities_tab_reg_n_30;
  wire probabilities_tab_reg_n_31;
  wire probabilities_tab_reg_n_4;
  wire probabilities_tab_reg_n_5;
  wire probabilities_tab_reg_n_6;
  wire probabilities_tab_reg_n_7;
  wire probabilities_tab_reg_n_8;
  wire probabilities_tab_reg_n_9;
  wire sorting_state;
  wire sorting_state1;
  wire [31:0]sorting_state3;
  wire \sorting_state[0]_i_10_n_0 ;
  wire \sorting_state[0]_i_11_n_0 ;
  wire \sorting_state[0]_i_12_n_0 ;
  wire \sorting_state[0]_i_13_n_0 ;
  wire \sorting_state[0]_i_14_n_0 ;
  wire \sorting_state[0]_i_15_n_0 ;
  wire \sorting_state[0]_i_16_n_0 ;
  wire \sorting_state[0]_i_18_n_0 ;
  wire \sorting_state[0]_i_19_n_0 ;
  wire \sorting_state[0]_i_1_n_0 ;
  wire \sorting_state[0]_i_20_n_0 ;
  wire \sorting_state[0]_i_21_n_0 ;
  wire \sorting_state[0]_i_5_n_0 ;
  wire \sorting_state[0]_i_6_n_0 ;
  wire \sorting_state[0]_i_7_n_0 ;
  wire \sorting_state[0]_i_9_n_0 ;
  wire \sorting_state[1]_i_10_n_0 ;
  wire \sorting_state[1]_i_11_n_0 ;
  wire \sorting_state[1]_i_13_n_0 ;
  wire \sorting_state[1]_i_14_n_0 ;
  wire \sorting_state[1]_i_15_n_0 ;
  wire \sorting_state[1]_i_16_n_0 ;
  wire \sorting_state[1]_i_17_n_0 ;
  wire \sorting_state[1]_i_18_n_0 ;
  wire \sorting_state[1]_i_19_n_0 ;
  wire \sorting_state[1]_i_1_n_0 ;
  wire \sorting_state[1]_i_20_n_0 ;
  wire \sorting_state[1]_i_25_n_0 ;
  wire \sorting_state[1]_i_26_n_0 ;
  wire \sorting_state[1]_i_27_n_0 ;
  wire \sorting_state[1]_i_28_n_0 ;
  wire \sorting_state[1]_i_29_n_0 ;
  wire \sorting_state[1]_i_30_n_0 ;
  wire \sorting_state[1]_i_31_n_0 ;
  wire \sorting_state[1]_i_32_n_0 ;
  wire \sorting_state[1]_i_35_n_0 ;
  wire \sorting_state[1]_i_36_n_0 ;
  wire \sorting_state[1]_i_37_n_0 ;
  wire \sorting_state[1]_i_38_n_0 ;
  wire \sorting_state[1]_i_39_n_0 ;
  wire \sorting_state[1]_i_40_n_0 ;
  wire \sorting_state[1]_i_41_n_0 ;
  wire \sorting_state[1]_i_42_n_0 ;
  wire \sorting_state[1]_i_43_n_0 ;
  wire \sorting_state[1]_i_44_n_0 ;
  wire \sorting_state[1]_i_45_n_0 ;
  wire \sorting_state[1]_i_46_n_0 ;
  wire \sorting_state[1]_i_47_n_0 ;
  wire \sorting_state[1]_i_48_n_0 ;
  wire \sorting_state[1]_i_49_n_0 ;
  wire \sorting_state[1]_i_4_n_0 ;
  wire \sorting_state[1]_i_50_n_0 ;
  wire \sorting_state[1]_i_51_n_0 ;
  wire \sorting_state[1]_i_52_n_0 ;
  wire \sorting_state[1]_i_53_n_0 ;
  wire \sorting_state[1]_i_54_n_0 ;
  wire \sorting_state[1]_i_55_n_0 ;
  wire \sorting_state[1]_i_56_n_0 ;
  wire \sorting_state[1]_i_57_n_0 ;
  wire \sorting_state[1]_i_58_n_0 ;
  wire \sorting_state[1]_i_59_n_0 ;
  wire \sorting_state[1]_i_5_n_0 ;
  wire \sorting_state[1]_i_60_n_0 ;
  wire \sorting_state[1]_i_6_n_0 ;
  wire \sorting_state[1]_i_7_n_0 ;
  wire \sorting_state[1]_i_8_n_0 ;
  wire \sorting_state[1]_i_9_n_0 ;
  wire \sorting_state[2]_i_1_n_0 ;
  wire \sorting_state_reg[0]_i_17_n_0 ;
  wire \sorting_state_reg[0]_i_17_n_1 ;
  wire \sorting_state_reg[0]_i_17_n_2 ;
  wire \sorting_state_reg[0]_i_17_n_3 ;
  wire \sorting_state_reg[0]_i_2_n_2 ;
  wire \sorting_state_reg[0]_i_2_n_3 ;
  wire \sorting_state_reg[0]_i_2_n_4 ;
  wire \sorting_state_reg[0]_i_4_n_0 ;
  wire \sorting_state_reg[0]_i_4_n_1 ;
  wire \sorting_state_reg[0]_i_4_n_2 ;
  wire \sorting_state_reg[0]_i_4_n_3 ;
  wire \sorting_state_reg[0]_i_8_n_0 ;
  wire \sorting_state_reg[0]_i_8_n_1 ;
  wire \sorting_state_reg[0]_i_8_n_2 ;
  wire \sorting_state_reg[0]_i_8_n_3 ;
  wire \sorting_state_reg[1]_i_12_n_0 ;
  wire \sorting_state_reg[1]_i_12_n_1 ;
  wire \sorting_state_reg[1]_i_12_n_2 ;
  wire \sorting_state_reg[1]_i_12_n_3 ;
  wire \sorting_state_reg[1]_i_21_n_3 ;
  wire \sorting_state_reg[1]_i_22_n_0 ;
  wire \sorting_state_reg[1]_i_22_n_1 ;
  wire \sorting_state_reg[1]_i_22_n_2 ;
  wire \sorting_state_reg[1]_i_22_n_3 ;
  wire \sorting_state_reg[1]_i_23_n_0 ;
  wire \sorting_state_reg[1]_i_23_n_1 ;
  wire \sorting_state_reg[1]_i_23_n_2 ;
  wire \sorting_state_reg[1]_i_23_n_3 ;
  wire \sorting_state_reg[1]_i_24_n_0 ;
  wire \sorting_state_reg[1]_i_24_n_1 ;
  wire \sorting_state_reg[1]_i_24_n_2 ;
  wire \sorting_state_reg[1]_i_24_n_3 ;
  wire \sorting_state_reg[1]_i_2_n_0 ;
  wire \sorting_state_reg[1]_i_2_n_1 ;
  wire \sorting_state_reg[1]_i_2_n_2 ;
  wire \sorting_state_reg[1]_i_2_n_3 ;
  wire \sorting_state_reg[1]_i_33_n_0 ;
  wire \sorting_state_reg[1]_i_33_n_1 ;
  wire \sorting_state_reg[1]_i_33_n_2 ;
  wire \sorting_state_reg[1]_i_33_n_3 ;
  wire \sorting_state_reg[1]_i_34_n_0 ;
  wire \sorting_state_reg[1]_i_34_n_1 ;
  wire \sorting_state_reg[1]_i_34_n_2 ;
  wire \sorting_state_reg[1]_i_34_n_3 ;
  wire \sorting_state_reg[1]_i_3_n_0 ;
  wire \sorting_state_reg[1]_i_3_n_1 ;
  wire \sorting_state_reg[1]_i_3_n_2 ;
  wire \sorting_state_reg[1]_i_3_n_3 ;
  wire \sorting_state_reg_n_0_[0] ;
  wire \sorting_state_reg_n_0_[1] ;
  wire \sorting_state_reg_n_0_[2] ;
  wire state;
  wire state1;
  wire \state[4]_i_3_n_0 ;
  wire [3:0]state_reg;
  wire state_reg_0__s_net_1;
  wire [7:0]symbol;
  wire [7:2]symbol0;
  wire \symbol[7]_i_1_n_0 ;
  wire [0:0]symbol_in;
  wire symbol_it;
  wire \symbol_it[0]_i_2_n_0 ;
  wire \symbol_it[0]_i_3_n_0 ;
  wire \symbol_it[0]_i_4_n_0 ;
  wire \symbol_it[0]_i_5_n_0 ;
  wire \symbol_it[4]_i_2_n_0 ;
  wire \symbol_it[4]_i_3_n_0 ;
  wire [5:0]symbol_it_reg;
  wire \symbol_it_reg[0]_i_1_n_0 ;
  wire \symbol_it_reg[0]_i_1_n_1 ;
  wire \symbol_it_reg[0]_i_1_n_2 ;
  wire \symbol_it_reg[0]_i_1_n_3 ;
  wire \symbol_it_reg[0]_i_1_n_4 ;
  wire \symbol_it_reg[0]_i_1_n_5 ;
  wire \symbol_it_reg[0]_i_1_n_6 ;
  wire \symbol_it_reg[0]_i_1_n_7 ;
  wire \symbol_it_reg[4]_i_1_n_3 ;
  wire \symbol_it_reg[4]_i_1_n_6 ;
  wire \symbol_it_reg[4]_i_1_n_7 ;
  wire \symbol_it_reg_rep[4]_i_1_n_0 ;
  wire \symbol_it_reg_rep[4]_i_1_n_1 ;
  wire \symbol_it_reg_rep[4]_i_1_n_2 ;
  wire \symbol_it_reg_rep[4]_i_1_n_3 ;
  wire \symbol_it_reg_rep[4]_i_1_n_4 ;
  wire \symbol_it_reg_rep[4]_i_1_n_5 ;
  wire \symbol_it_reg_rep[4]_i_1_n_6 ;
  wire \symbol_it_reg_rep[4]_i_1_n_7 ;
  wire \symbol_it_reg_rep[5]_i_2_n_7 ;
  wire [5:0]symbol_it_reg_rep__0__0;
  wire [5:0]symbol_it_reg_rep__1;
  wire \symbol_it_rep[0]_i_1_n_0 ;
  wire \symbol_it_rep[4]_i_2_n_0 ;
  wire \symbol_it_rep[4]_i_3_n_0 ;
  wire \symbol_it_rep[4]_i_4_n_0 ;
  wire \symbol_it_rep[4]_i_5_n_0 ;
  wire \symbol_it_rep[5]_i_3_n_0 ;
  wire symbols_tab_reg_r2_0_63_3_5_n_0;
  wire symbols_tab_reg_r2_0_63_3_5_n_1;
  wire symbols_tab_reg_r2_0_63_3_5_n_2;
  wire symbols_tab_reg_r2_0_63_6_7_n_0;
  wire symbols_tab_reg_r2_0_63_6_7_n_1;
  wire symbols_tab_reg_r2_0_63_6_7_n_2;
  wire [31:0]temp;
  wire [31:0]temp0;
  wire [7:0]temp1;
  wire [7:0]temp10;
  wire \temp1[7]_i_1_n_0 ;
  wire \temp1[7]_i_4_n_0 ;
  wire \temp1[7]_i_6_n_0 ;
  wire [31:0]temp2;
  wire [31:0]temp20;
  wire tree_data_enable;
  wire tree_data_ready;
  wire tree_data_ready_i_1_n_0;
  wire [7:0]tree_tab_length;
  wire \tree_tab_length[2]_i_1_n_0 ;
  wire \tree_tab_length[5]_i_1_n_0 ;
  wire \tree_tab_length[6]_i_1_n_0 ;
  wire \tree_tab_length[7]_i_1_n_0 ;
  wire \tree_tab_length[7]_i_2_n_0 ;
  wire [3:0]\NLW_FSM_onehot_building_tree_state_reg[7]_i_10_O_UNCONNECTED ;
  wire [3:0]\NLW_FSM_onehot_building_tree_state_reg[7]_i_16_O_UNCONNECTED ;
  wire [3:0]\NLW_FSM_onehot_building_tree_state_reg[7]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_FSM_onehot_building_tree_state_reg[7]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_FSM_onehot_state_reg[12]_i_10_O_UNCONNECTED ;
  wire [3:3]\NLW_FSM_onehot_state_reg[12]_i_4_CO_UNCONNECTED ;
  wire [3:0]\NLW_FSM_onehot_state_reg[12]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_FSM_onehot_state_reg[12]_i_6_O_UNCONNECTED ;
  wire NLW_ID_reg_r1_0_63_0_2_DOD_UNCONNECTED;
  wire [3:0]NLW_ID_reg_r1_0_63_0_2_i_19_O_UNCONNECTED;
  wire [3:0]NLW_ID_reg_r1_0_63_0_2_i_43_O_UNCONNECTED;
  wire [3:0]NLW_ID_reg_r1_0_63_0_2_i_57_O_UNCONNECTED;
  wire [3:0]NLW_ID_reg_r1_0_63_0_2_i_66_O_UNCONNECTED;
  wire NLW_ID_reg_r1_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r1_0_63_3_5_DOD_UNCONNECTED;
  wire [3:3]NLW_ID_reg_r1_0_63_3_5_i_19_CO_UNCONNECTED;
  wire NLW_ID_reg_r1_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r1_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r1_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r1_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r1_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r2_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_0_63_0_2_DOD_UNCONNECTED;
  wire [3:2]NLW_ID_reg_r3_0_63_0_2_i_1_CO_UNCONNECTED;
  wire [3:3]NLW_ID_reg_r3_0_63_0_2_i_1_O_UNCONNECTED;
  wire NLW_ID_reg_r3_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r3_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r3_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r3_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r3_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r3_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r4_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r4_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r4_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_ID_reg_r4_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r4_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_0_63_0_2_DOD_UNCONNECTED;
  wire [3:0]NLW_ID_reg_r5_0_63_0_2_i_12_O_UNCONNECTED;
  wire [3:0]NLW_ID_reg_r5_0_63_0_2_i_26_O_UNCONNECTED;
  wire [3:0]NLW_ID_reg_r5_0_63_0_2_i_35_O_UNCONNECTED;
  wire [3:0]NLW_ID_reg_r5_0_63_0_2_i_8_O_UNCONNECTED;
  wire NLW_ID_reg_r5_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r5_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_ID_reg_r6_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_0_63_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_128_191_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_192_255_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r1_64_127_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_0_63_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_128_191_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_192_255_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r2_64_127_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_0_63_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_128_191_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_192_255_9_11_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_12_14_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_15_17_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_18_20_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_21_23_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_24_26_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_30_30_SPO_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_Link_reg_r3_64_127_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_27_29_DOD_UNCONNECTED;
  wire [3:3]NLW_P_reg_r1_0_63_27_29_i_13_CO_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_0_63_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_128_191_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_192_255_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r1_64_127_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_0_63_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_128_191_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_192_255_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r2_64_127_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_0_63_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_128_191_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_192_255_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r3_64_127_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_0_63_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_128_191_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_192_255_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r4_64_127_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_0_63_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_128_191_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_192_255_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r5_64_127_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_0_2_DOD_UNCONNECTED;
  wire [3:2]NLW_P_reg_r6_0_63_0_2_i_1_CO_UNCONNECTED;
  wire [3:3]NLW_P_reg_r6_0_63_0_2_i_1_O_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_0_63_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_128_191_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_192_255_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r6_64_127_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_0_63_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_128_191_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_192_255_9_11_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_0_2_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_12_14_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_15_17_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_18_20_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_21_23_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_24_26_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_27_29_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_30_30_SPO_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_31_31_SPO_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_3_5_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_6_8_DOD_UNCONNECTED;
  wire NLW_P_reg_r7_64_127_9_11_DOD_UNCONNECTED;
  wire NLW_code_length_tab_reg_r1_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_code_length_tab_reg_r1_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_code_length_tab_reg_r1_0_63_6_7_DOC_UNCONNECTED;
  wire NLW_code_length_tab_reg_r1_0_63_6_7_DOD_UNCONNECTED;
  wire NLW_code_length_tab_reg_r2_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_code_length_tab_reg_r2_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_code_length_tab_reg_r2_0_63_6_7_DOC_UNCONNECTED;
  wire NLW_code_length_tab_reg_r2_0_63_6_7_DOD_UNCONNECTED;
  wire [3:2]NLW_code_tab_reg_0_31_0_0__4_i_2_CO_UNCONNECTED;
  wire [3:3]NLW_code_tab_reg_0_31_0_0__4_i_2_O_UNCONNECTED;
  wire [3:3]\NLW_counter_reg_rep[7]_i_3_CO_UNCONNECTED ;
  wire [3:2]\NLW_i_reg[31]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_i_reg[31]_i_2_O_UNCONNECTED ;
  wire [3:2]\NLW_it_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_it_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:2]\NLW_j_reg[31]_i_4_CO_UNCONNECTED ;
  wire [3:3]\NLW_j_reg[31]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_last_symbol_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:1]\NLW_last_symbol_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_making_tree_state_reg[2]_i_16_O_UNCONNECTED ;
  wire [3:3]\NLW_making_tree_state_reg[2]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_making_tree_state_reg[2]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_making_tree_state_reg[2]_i_6_O_UNCONNECTED ;
  wire [3:0]\NLW_position_reg_rep[7]_i_12_O_UNCONNECTED ;
  wire [3:2]\NLW_position_reg_rep[7]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_position_reg_rep[7]_i_3_O_UNCONNECTED ;
  wire [3:3]\NLW_position_reg_rep[7]_i_4_CO_UNCONNECTED ;
  wire [3:0]\NLW_position_reg_rep[7]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_position_reg_rep[7]_i_8_O_UNCONNECTED ;
  wire [1:0]NLW_probabilities_tab_reg_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_probabilities_tab_reg_DOPBDOP_UNCONNECTED;
  wire [3:3]\NLW_sorting_state_reg[0]_i_2_CO_UNCONNECTED ;
  wire [2:0]\NLW_sorting_state_reg[0]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_sorting_state_reg[0]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_sorting_state_reg[0]_i_8_O_UNCONNECTED ;
  wire [3:0]\NLW_sorting_state_reg[1]_i_12_O_UNCONNECTED ;
  wire [3:0]\NLW_sorting_state_reg[1]_i_2_O_UNCONNECTED ;
  wire [3:1]\NLW_sorting_state_reg[1]_i_21_CO_UNCONNECTED ;
  wire [3:2]\NLW_sorting_state_reg[1]_i_21_O_UNCONNECTED ;
  wire [3:0]\NLW_sorting_state_reg[1]_i_24_O_UNCONNECTED ;
  wire [3:0]\NLW_sorting_state_reg[1]_i_3_O_UNCONNECTED ;
  wire [3:1]\NLW_symbol_it_reg[4]_i_1_CO_UNCONNECTED ;
  wire [3:2]\NLW_symbol_it_reg[4]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_symbol_it_reg_rep[5]_i_2_CO_UNCONNECTED ;
  wire [3:1]\NLW_symbol_it_reg_rep[5]_i_2_O_UNCONNECTED ;
  wire NLW_symbols_tab_reg_r1_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_symbols_tab_reg_r1_0_63_6_7_DOD_UNCONNECTED;
  wire NLW_symbols_tab_reg_r2_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_symbols_tab_reg_r2_0_63_6_7_DOD_UNCONNECTED;

  assign state_reg_0__s_net_1 = \state_reg[0] ;
  LUT5 #(
    .INIT(32'hAAAAA888)) 
    \FSM_onehot_building_tree_state[7]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_building_tree_state_reg[7]_i_2_n_0 ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[6] ),
        .I4(\FSM_onehot_building_tree_state[7]_i_3_n_0 ),
        .O(building_tree_state));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_11 
       (.I0(it[22]),
        .I1(it[23]),
        .O(\FSM_onehot_building_tree_state[7]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_12 
       (.I0(it[20]),
        .I1(it[21]),
        .O(\FSM_onehot_building_tree_state[7]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_13 
       (.I0(it[18]),
        .I1(it[19]),
        .O(\FSM_onehot_building_tree_state[7]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_14 
       (.I0(it[16]),
        .I1(it[17]),
        .O(\FSM_onehot_building_tree_state[7]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \FSM_onehot_building_tree_state[7]_i_15 
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .O(\FSM_onehot_building_tree_state[7]_i_15_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_17 
       (.I0(it[14]),
        .I1(it[15]),
        .O(\FSM_onehot_building_tree_state[7]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_18 
       (.I0(it[12]),
        .I1(it[13]),
        .O(\FSM_onehot_building_tree_state[7]_i_18_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_19 
       (.I0(it[10]),
        .I1(it[11]),
        .O(\FSM_onehot_building_tree_state[7]_i_19_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_20 
       (.I0(it[8]),
        .I1(it[9]),
        .O(\FSM_onehot_building_tree_state[7]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \FSM_onehot_building_tree_state[7]_i_21 
       (.I0(it[4]),
        .I1(it[5]),
        .O(\FSM_onehot_building_tree_state[7]_i_21_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \FSM_onehot_building_tree_state[7]_i_22 
       (.I0(it[1]),
        .O(\FSM_onehot_building_tree_state[7]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_23 
       (.I0(it[6]),
        .I1(it[7]),
        .O(\FSM_onehot_building_tree_state[7]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \FSM_onehot_building_tree_state[7]_i_24 
       (.I0(it[4]),
        .I1(it[5]),
        .O(\FSM_onehot_building_tree_state[7]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_25 
       (.I0(it[2]),
        .I1(it[3]),
        .O(\FSM_onehot_building_tree_state[7]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_building_tree_state[7]_i_26 
       (.I0(it[1]),
        .I1(it[0]),
        .O(\FSM_onehot_building_tree_state[7]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_building_tree_state[7]_i_3 
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_building_tree_state[7]_i_9_n_0 ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[7] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(\FSM_onehot_building_tree_state[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_5 
       (.I0(it[30]),
        .I1(it[31]),
        .O(\FSM_onehot_building_tree_state[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_6 
       (.I0(it[28]),
        .I1(it[29]),
        .O(\FSM_onehot_building_tree_state[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_7 
       (.I0(it[26]),
        .I1(it[27]),
        .O(\FSM_onehot_building_tree_state[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_building_tree_state[7]_i_8 
       (.I0(it[24]),
        .I1(it[25]),
        .O(\FSM_onehot_building_tree_state[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBFF00000800)) 
    \FSM_onehot_building_tree_state[7]_i_9 
       (.I0(\FSM_onehot_building_tree_state[7]_i_15_n_0 ),
        .I1(\sorting_state_reg_n_0_[2] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\sorting_state_reg[1]_i_2_n_0 ),
        .I5(Link_reg_r1_0_63_30_30_i_4_n_0),
        .O(\FSM_onehot_building_tree_state[7]_i_9_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_building_tree_state_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\FSM_onehot_building_tree_state_reg_n_0_[7] ),
        .Q(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_building_tree_state_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .Q(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_building_tree_state_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .Q(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_building_tree_state_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .Q(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_building_tree_state_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .Q(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_building_tree_state_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .Q(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_building_tree_state_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .Q(\FSM_onehot_building_tree_state_reg_n_0_[6] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_building_tree_state_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\FSM_onehot_building_tree_state_reg_n_0_[6] ),
        .Q(\FSM_onehot_building_tree_state_reg_n_0_[7] ),
        .R(1'b0));
  CARRY4 \FSM_onehot_building_tree_state_reg[7]_i_10 
       (.CI(\FSM_onehot_building_tree_state_reg[7]_i_16_n_0 ),
        .CO({\FSM_onehot_building_tree_state_reg[7]_i_10_n_0 ,\FSM_onehot_building_tree_state_reg[7]_i_10_n_1 ,\FSM_onehot_building_tree_state_reg[7]_i_10_n_2 ,\FSM_onehot_building_tree_state_reg[7]_i_10_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_FSM_onehot_building_tree_state_reg[7]_i_10_O_UNCONNECTED [3:0]),
        .S({\FSM_onehot_building_tree_state[7]_i_17_n_0 ,\FSM_onehot_building_tree_state[7]_i_18_n_0 ,\FSM_onehot_building_tree_state[7]_i_19_n_0 ,\FSM_onehot_building_tree_state[7]_i_20_n_0 }));
  CARRY4 \FSM_onehot_building_tree_state_reg[7]_i_16 
       (.CI(1'b0),
        .CO({\FSM_onehot_building_tree_state_reg[7]_i_16_n_0 ,\FSM_onehot_building_tree_state_reg[7]_i_16_n_1 ,\FSM_onehot_building_tree_state_reg[7]_i_16_n_2 ,\FSM_onehot_building_tree_state_reg[7]_i_16_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\FSM_onehot_building_tree_state[7]_i_21_n_0 ,1'b0,\FSM_onehot_building_tree_state[7]_i_22_n_0 }),
        .O(\NLW_FSM_onehot_building_tree_state_reg[7]_i_16_O_UNCONNECTED [3:0]),
        .S({\FSM_onehot_building_tree_state[7]_i_23_n_0 ,\FSM_onehot_building_tree_state[7]_i_24_n_0 ,\FSM_onehot_building_tree_state[7]_i_25_n_0 ,\FSM_onehot_building_tree_state[7]_i_26_n_0 }));
  CARRY4 \FSM_onehot_building_tree_state_reg[7]_i_2 
       (.CI(\FSM_onehot_building_tree_state_reg[7]_i_4_n_0 ),
        .CO({\FSM_onehot_building_tree_state_reg[7]_i_2_n_0 ,\FSM_onehot_building_tree_state_reg[7]_i_2_n_1 ,\FSM_onehot_building_tree_state_reg[7]_i_2_n_2 ,\FSM_onehot_building_tree_state_reg[7]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_FSM_onehot_building_tree_state_reg[7]_i_2_O_UNCONNECTED [3:0]),
        .S({\FSM_onehot_building_tree_state[7]_i_5_n_0 ,\FSM_onehot_building_tree_state[7]_i_6_n_0 ,\FSM_onehot_building_tree_state[7]_i_7_n_0 ,\FSM_onehot_building_tree_state[7]_i_8_n_0 }));
  CARRY4 \FSM_onehot_building_tree_state_reg[7]_i_4 
       (.CI(\FSM_onehot_building_tree_state_reg[7]_i_10_n_0 ),
        .CO({\FSM_onehot_building_tree_state_reg[7]_i_4_n_0 ,\FSM_onehot_building_tree_state_reg[7]_i_4_n_1 ,\FSM_onehot_building_tree_state_reg[7]_i_4_n_2 ,\FSM_onehot_building_tree_state_reg[7]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_FSM_onehot_building_tree_state_reg[7]_i_4_O_UNCONNECTED [3:0]),
        .S({\FSM_onehot_building_tree_state[7]_i_11_n_0 ,\FSM_onehot_building_tree_state[7]_i_12_n_0 ,\FSM_onehot_building_tree_state[7]_i_13_n_0 ,\FSM_onehot_building_tree_state[7]_i_14_n_0 }));
  LUT4 #(
    .INIT(16'h0400)) 
    \FSM_onehot_state[10]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(\FSM_onehot_state_reg_n_0_[9] ),
        .I2(\FSM_onehot_state_reg_n_0_[8] ),
        .I3(\FSM_onehot_state[11]_i_2_n_0 ),
        .O(\FSM_onehot_state[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00100000)) 
    \FSM_onehot_state[11]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[8] ),
        .I1(\FSM_onehot_state_reg_n_0_[9] ),
        .I2(\FSM_onehot_state_reg_n_0_[10] ),
        .I3(\FSM_onehot_state_reg_n_0_[7] ),
        .I4(\FSM_onehot_state[11]_i_2_n_0 ),
        .O(\FSM_onehot_state[11]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \FSM_onehot_state[11]_i_2 
       (.I0(\FSM_onehot_state[7]_i_2_n_0 ),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_state_reg_n_0_[4] ),
        .O(\FSM_onehot_state[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5576FFFF55760000)) 
    \FSM_onehot_state[12]_i_1 
       (.I0(state_reg[2]),
        .I1(state_reg[1]),
        .I2(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I3(state_reg[0]),
        .I4(state_reg[3]),
        .I5(\FSM_onehot_state[12]_i_3_n_0 ),
        .O(state));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_state[12]_i_11 
       (.I0(j[23]),
        .I1(j[22]),
        .I2(j[21]),
        .O(\FSM_onehot_state[12]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_state[12]_i_12 
       (.I0(j[20]),
        .I1(j[19]),
        .I2(j[18]),
        .O(\FSM_onehot_state[12]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_state[12]_i_13 
       (.I0(j[17]),
        .I1(j[16]),
        .I2(j[15]),
        .O(\FSM_onehot_state[12]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_state[12]_i_14 
       (.I0(j[14]),
        .I1(j[13]),
        .I2(j[12]),
        .O(\FSM_onehot_state[12]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_state[12]_i_15 
       (.I0(j[11]),
        .I1(j[10]),
        .I2(j[9]),
        .O(\FSM_onehot_state[12]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_state[12]_i_16 
       (.I0(j[8]),
        .I1(j[7]),
        .I2(j[6]),
        .O(\FSM_onehot_state[12]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_onehot_state[12]_i_17 
       (.I0(j[5]),
        .I1(j[4]),
        .I2(j[3]),
        .O(\FSM_onehot_state[12]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \FSM_onehot_state[12]_i_18 
       (.I0(j[2]),
        .I1(j[1]),
        .I2(j[0]),
        .O(\FSM_onehot_state[12]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \FSM_onehot_state[12]_i_2 
       (.I0(state1),
        .I1(\FSM_onehot_state_reg_n_0_[2] ),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\FSM_onehot_state[12]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hBFBFBFBC)) 
    \FSM_onehot_state[12]_i_3 
       (.I0(\FSM_onehot_state[12]_i_5_n_0 ),
        .I1(state_reg[2]),
        .I2(state_reg[1]),
        .I3(tree_data_enable),
        .I4(state_reg[0]),
        .O(\FSM_onehot_state[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h01FF010001000100)) 
    \FSM_onehot_state[12]_i_5 
       (.I0(\making_tree_state[2]_i_5_n_0 ),
        .I1(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(state_reg[0]),
        .I4(\last_symbol_reg[31]_i_3_n_7 ),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[6] ),
        .O(\FSM_onehot_state[12]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \FSM_onehot_state[12]_i_7 
       (.I0(j[30]),
        .I1(j[31]),
        .O(\FSM_onehot_state[12]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_state[12]_i_8 
       (.I0(j[29]),
        .I1(j[28]),
        .I2(j[27]),
        .O(\FSM_onehot_state[12]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \FSM_onehot_state[12]_i_9 
       (.I0(j[26]),
        .I1(j[25]),
        .I2(j[24]),
        .O(\FSM_onehot_state[12]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000002)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[12] ),
        .I1(\FSM_onehot_state_reg_n_0_[5] ),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .I5(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF100010001000)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[0] ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(state1),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_state_reg_n_0_[4] ),
        .I5(\FSM_onehot_state[7]_i_2_n_0 ),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000008)) 
    \FSM_onehot_state[4]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I2(\FSM_onehot_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000004)) 
    \FSM_onehot_state[5]_i_1 
       (.I0(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_state_reg_n_0_[1] ),
        .O(\FSM_onehot_state[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00010000)) 
    \FSM_onehot_state[6]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_state_reg_n_0_[5] ),
        .O(\FSM_onehot_state[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_onehot_state[7]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_state[7]_i_2_n_0 ),
        .O(\FSM_onehot_state[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \FSM_onehot_state[7]_i_2 
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_state_reg_n_0_[1] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_state_reg_n_0_[12] ),
        .I5(\FSM_onehot_state_reg_n_0_[5] ),
        .O(\FSM_onehot_state[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h8888888C)) 
    \FSM_onehot_state[8]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(\FSM_onehot_state[11]_i_2_n_0 ),
        .I2(\FSM_onehot_state_reg_n_0_[9] ),
        .I3(\FSM_onehot_state_reg_n_0_[8] ),
        .I4(\FSM_onehot_state_reg_n_0_[10] ),
        .O(\FSM_onehot_state[8]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_onehot_state[9]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(\FSM_onehot_state_reg_n_0_[8] ),
        .I2(\FSM_onehot_state[11]_i_2_n_0 ),
        .O(\FSM_onehot_state[9]_i_1_n_0 ));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(1'b0),
        .Q(\FSM_onehot_state_reg_n_0_[0] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[10]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[10] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[11]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[11] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[12]_i_2_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[12] ),
        .R(1'b0));
  CARRY4 \FSM_onehot_state_reg[12]_i_10 
       (.CI(1'b0),
        .CO({\FSM_onehot_state_reg[12]_i_10_n_0 ,\FSM_onehot_state_reg[12]_i_10_n_1 ,\FSM_onehot_state_reg[12]_i_10_n_2 ,\FSM_onehot_state_reg[12]_i_10_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_FSM_onehot_state_reg[12]_i_10_O_UNCONNECTED [3:0]),
        .S({\FSM_onehot_state[12]_i_15_n_0 ,\FSM_onehot_state[12]_i_16_n_0 ,\FSM_onehot_state[12]_i_17_n_0 ,\FSM_onehot_state[12]_i_18_n_0 }));
  CARRY4 \FSM_onehot_state_reg[12]_i_4 
       (.CI(\FSM_onehot_state_reg[12]_i_6_n_0 ),
        .CO({\NLW_FSM_onehot_state_reg[12]_i_4_CO_UNCONNECTED [3],state1,\FSM_onehot_state_reg[12]_i_4_n_2 ,\FSM_onehot_state_reg[12]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_FSM_onehot_state_reg[12]_i_4_O_UNCONNECTED [3:0]),
        .S({1'b0,\FSM_onehot_state[12]_i_7_n_0 ,\FSM_onehot_state[12]_i_8_n_0 ,\FSM_onehot_state[12]_i_9_n_0 }));
  CARRY4 \FSM_onehot_state_reg[12]_i_6 
       (.CI(\FSM_onehot_state_reg[12]_i_10_n_0 ),
        .CO({\FSM_onehot_state_reg[12]_i_6_n_0 ,\FSM_onehot_state_reg[12]_i_6_n_1 ,\FSM_onehot_state_reg[12]_i_6_n_2 ,\FSM_onehot_state_reg[12]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_FSM_onehot_state_reg[12]_i_6_O_UNCONNECTED [3:0]),
        .S({\FSM_onehot_state[12]_i_11_n_0 ,\FSM_onehot_state[12]_i_12_n_0 ,\FSM_onehot_state[12]_i_13_n_0 ,\FSM_onehot_state[12]_i_14_n_0 }));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[1] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[2] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[3] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[4]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[4] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[5]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[5] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[6]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[6] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[7]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[7] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[8]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[8] ),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\FSM_onehot_state[9]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg_n_0_[9] ),
        .R(1'b0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1706 ID_reg_r1_0_63_0_2
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r1_0_63_0_2_n_0),
        .DOB(ID_reg_r1_0_63_0_2_n_1),
        .DOC(ID_reg_r1_0_63_0_2_n_2),
        .DOD(NLW_ID_reg_r1_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hEAEEEAAA)) 
    ID_reg_r1_0_63_0_2_i_1
       (.I0(ID_reg_r1_0_63_0_2_i_11_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(ID_reg_r1_0_63_0_2_i_12_n_0),
        .I3(ID_reg_r1_0_63_0_2_i_13_n_7),
        .I4(ID_reg_r1_0_63_0_2_i_14_n_0),
        .O(ID[0]));
  LUT4 #(
    .INIT(16'hF888)) 
    ID_reg_r1_0_63_0_2_i_10
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(\i_reg_n_0_[0] ),
        .I2(\FSM_onehot_state_reg_n_0_[6] ),
        .I3(ID_reg_r1_0_63_0_2_i_34_n_0),
        .O(p_6_in[0]));
  LUT4 #(
    .INIT(16'hE400)) 
    ID_reg_r1_0_63_0_2_i_11
       (.I0(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I1(p_1_out[0]),
        .I2(symbols_tab_reg_r2_0_63_6_7_n_0),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_11_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEBAAAAA)) 
    ID_reg_r1_0_63_0_2_i_12
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp1[0]),
        .I3(p_3_out[0]),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_0_2_i_12_n_0));
  CARRY4 ID_reg_r1_0_63_0_2_i_13
       (.CI(1'b0),
        .CO({ID_reg_r1_0_63_0_2_i_13_n_0,ID_reg_r1_0_63_0_2_i_13_n_1,ID_reg_r1_0_63_0_2_i_13_n_2,ID_reg_r1_0_63_0_2_i_13_n_3}),
        .CYINIT(1'b1),
        .DI(p_5_out[3:0]),
        .O({ID_reg_r1_0_63_0_2_i_13_n_4,ID_reg_r1_0_63_0_2_i_13_n_5,ID_reg_r1_0_63_0_2_i_13_n_6,ID_reg_r1_0_63_0_2_i_13_n_7}),
        .S({ID_reg_r1_0_63_0_2_i_37_n_0,ID_reg_r1_0_63_0_2_i_38_n_0,ID_reg_r1_0_63_0_2_i_39_n_0,ID_reg_r1_0_63_0_2_i_40_n_0}));
  LUT5 #(
    .INIT(32'hFFFFAC00)) 
    ID_reg_r1_0_63_0_2_i_14
       (.I0(p_3_out[0]),
        .I1(temp1[0]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_0_2_i_14_n_0));
  LUT4 #(
    .INIT(16'hE400)) 
    ID_reg_r1_0_63_0_2_i_15
       (.I0(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I1(p_1_out[1]),
        .I2(symbols_tab_reg_r2_0_63_6_7_n_1),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_15_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEBAAAAA)) 
    ID_reg_r1_0_63_0_2_i_16
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp1[1]),
        .I3(p_3_out[1]),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_0_2_i_16_n_0));
  LUT5 #(
    .INIT(32'hFFFFAC00)) 
    ID_reg_r1_0_63_0_2_i_17
       (.I0(p_3_out[1]),
        .I1(temp1[1]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_0_2_i_17_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_0_2_i_18
       (.I0(ID_reg_r2_192_255_0_2_n_2),
        .I1(ID_reg_r2_128_191_0_2_n_2),
        .I2(i_reg_rep__0__1[7]),
        .I3(ID_reg_r2_64_127_0_2_n_2),
        .I4(i_reg_rep__0__1[6]),
        .I5(ID_reg_r2_0_63_0_2_n_2),
        .O(p_1_out[2]));
  CARRY4 ID_reg_r1_0_63_0_2_i_19
       (.CI(ID_reg_r1_0_63_0_2_i_43_n_0),
        .CO({ID_reg_r1_0_63_0_2_i_19_n_0,ID_reg_r1_0_63_0_2_i_19_n_1,ID_reg_r1_0_63_0_2_i_19_n_2,ID_reg_r1_0_63_0_2_i_19_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_ID_reg_r1_0_63_0_2_i_19_O_UNCONNECTED[3:0]),
        .S({ID_reg_r1_0_63_0_2_i_44_n_0,ID_reg_r1_0_63_0_2_i_45_n_0,ID_reg_r1_0_63_0_2_i_46_n_0,ID_reg_r1_0_63_0_2_i_47_n_0}));
  LUT5 #(
    .INIT(32'hEAEEEAAA)) 
    ID_reg_r1_0_63_0_2_i_2
       (.I0(ID_reg_r1_0_63_0_2_i_15_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(ID_reg_r1_0_63_0_2_i_16_n_0),
        .I3(ID_reg_r1_0_63_0_2_i_13_n_6),
        .I4(ID_reg_r1_0_63_0_2_i_17_n_0),
        .O(ID[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEBA028A)) 
    ID_reg_r1_0_63_0_2_i_20
       (.I0(ID_reg_r1_0_63_0_2_i_48_n_0),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp1[2]),
        .I3(p_3_out[2]),
        .I4(ID_reg_r1_0_63_0_2_i_50_n_0),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_0_2_i_20_n_0));
  LUT5 #(
    .INIT(32'hFFFFAAA8)) 
    ID_reg_r1_0_63_0_2_i_21
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I2(ID_reg_r1_0_63_0_2_i_51_n_0),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I4(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_21_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    ID_reg_r1_0_63_0_2_i_22
       (.I0(ID_reg_r1_0_63_0_2_i_52_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I4(p_4_in[6]),
        .I5(ID_reg_r1_0_63_0_2_i_54_n_0),
        .O(p_6_in[6]));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    ID_reg_r1_0_63_0_2_i_23
       (.I0(ID_reg_r1_0_63_0_2_i_55_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I4(p_4_in[7]),
        .I5(ID_reg_r1_0_63_0_2_i_56_n_0),
        .O(p_6_in[7]));
  LUT2 #(
    .INIT(4'h8)) 
    ID_reg_r1_0_63_0_2_i_24
       (.I0(\i_reg_n_0_[5] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_24_n_0));
  LUT4 #(
    .INIT(16'hA820)) 
    ID_reg_r1_0_63_0_2_i_25
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(P_reg_r3_0_63_0_2_i_1_n_7),
        .I3(j[5]),
        .O(ID_reg_r1_0_63_0_2_i_25_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    ID_reg_r1_0_63_0_2_i_26
       (.I0(\i_reg_n_0_[4] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_26_n_0));
  LUT4 #(
    .INIT(16'hA820)) 
    ID_reg_r1_0_63_0_2_i_27
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(P_reg_r3_0_63_0_2_i_2_n_4),
        .I3(j[4]),
        .O(ID_reg_r1_0_63_0_2_i_27_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    ID_reg_r1_0_63_0_2_i_28
       (.I0(\i_reg_n_0_[3] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_28_n_0));
  LUT4 #(
    .INIT(16'hA820)) 
    ID_reg_r1_0_63_0_2_i_29
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(P_reg_r3_0_63_0_2_i_2_n_5),
        .I3(j[3]),
        .O(ID_reg_r1_0_63_0_2_i_29_n_0));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    ID_reg_r1_0_63_0_2_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(symbols_tab_reg_r2_0_63_6_7_n_2),
        .I2(p_1_out[2]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(\FSM_onehot_state_reg_n_0_[6] ),
        .I5(ID_reg_r1_0_63_0_2_i_20_n_0),
        .O(ID[2]));
  LUT2 #(
    .INIT(4'h8)) 
    ID_reg_r1_0_63_0_2_i_30
       (.I0(\i_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_30_n_0));
  LUT4 #(
    .INIT(16'hA820)) 
    ID_reg_r1_0_63_0_2_i_31
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(P_reg_r3_0_63_0_2_i_2_n_6),
        .I3(j[2]),
        .O(ID_reg_r1_0_63_0_2_i_31_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    ID_reg_r1_0_63_0_2_i_32
       (.I0(\i_reg_n_0_[1] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_32_n_0));
  LUT4 #(
    .INIT(16'hA820)) 
    ID_reg_r1_0_63_0_2_i_33
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(P_reg_r3_0_63_0_2_i_2_n_7),
        .I3(j[1]),
        .O(ID_reg_r1_0_63_0_2_i_33_n_0));
  LUT6 #(
    .INIT(64'hFFE0E0E0E0E0FFE0)) 
    ID_reg_r1_0_63_0_2_i_34
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(it[0]),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I4(\sorting_state_reg_n_0_[0] ),
        .I5(j[0]),
        .O(ID_reg_r1_0_63_0_2_i_34_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_0_2_i_35
       (.I0(ID_reg_r2_192_255_0_2_n_0),
        .I1(ID_reg_r2_128_191_0_2_n_0),
        .I2(i_reg_rep__0__1[7]),
        .I3(ID_reg_r2_64_127_0_2_n_0),
        .I4(i_reg_rep__0__1[6]),
        .I5(ID_reg_r2_0_63_0_2_n_0),
        .O(p_1_out[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_0_2_i_36
       (.I0(ID_reg_r5_192_255_0_2_n_0),
        .I1(ID_reg_r5_128_191_0_2_n_0),
        .I2(p_1_in[7]),
        .I3(ID_reg_r5_64_127_0_2_n_0),
        .I4(p_1_in[6]),
        .I5(ID_reg_r5_0_63_0_2_n_0),
        .O(p_3_out[0]));
  LUT2 #(
    .INIT(4'h6)) 
    ID_reg_r1_0_63_0_2_i_37
       (.I0(p_5_out[3]),
        .I1(it[3]),
        .O(ID_reg_r1_0_63_0_2_i_37_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ID_reg_r1_0_63_0_2_i_38
       (.I0(p_5_out[2]),
        .I1(it[2]),
        .O(ID_reg_r1_0_63_0_2_i_38_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ID_reg_r1_0_63_0_2_i_39
       (.I0(p_5_out[1]),
        .I1(it[1]),
        .O(ID_reg_r1_0_63_0_2_i_39_n_0));
  LUT3 #(
    .INIT(8'h02)) 
    ID_reg_r1_0_63_0_2_i_4
       (.I0(ID_reg_r1_0_63_0_2_i_21_n_0),
        .I1(p_6_in[6]),
        .I2(p_6_in[7]),
        .O(ID_reg_r1_0_63_0_2_i_4_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ID_reg_r1_0_63_0_2_i_40
       (.I0(p_5_out[0]),
        .I1(it[0]),
        .O(ID_reg_r1_0_63_0_2_i_40_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_0_2_i_41
       (.I0(ID_reg_r2_192_255_0_2_n_1),
        .I1(ID_reg_r2_128_191_0_2_n_1),
        .I2(i_reg_rep__0__1[7]),
        .I3(ID_reg_r2_64_127_0_2_n_1),
        .I4(i_reg_rep__0__1[6]),
        .I5(ID_reg_r2_0_63_0_2_n_1),
        .O(p_1_out[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_0_2_i_42
       (.I0(ID_reg_r5_192_255_0_2_n_1),
        .I1(ID_reg_r5_128_191_0_2_n_1),
        .I2(p_1_in[7]),
        .I3(ID_reg_r5_64_127_0_2_n_1),
        .I4(p_1_in[6]),
        .I5(ID_reg_r5_0_63_0_2_n_1),
        .O(p_3_out[1]));
  CARRY4 ID_reg_r1_0_63_0_2_i_43
       (.CI(ID_reg_r1_0_63_0_2_i_57_n_0),
        .CO({ID_reg_r1_0_63_0_2_i_43_n_0,ID_reg_r1_0_63_0_2_i_43_n_1,ID_reg_r1_0_63_0_2_i_43_n_2,ID_reg_r1_0_63_0_2_i_43_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_ID_reg_r1_0_63_0_2_i_43_O_UNCONNECTED[3:0]),
        .S({ID_reg_r1_0_63_0_2_i_58_n_0,ID_reg_r1_0_63_0_2_i_59_n_0,ID_reg_r1_0_63_0_2_i_60_n_0,ID_reg_r1_0_63_0_2_i_61_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_44
       (.I0(\i_reg_n_0_[30] ),
        .I1(\i_reg_n_0_[31] ),
        .O(ID_reg_r1_0_63_0_2_i_44_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_45
       (.I0(\i_reg_n_0_[28] ),
        .I1(\i_reg_n_0_[29] ),
        .O(ID_reg_r1_0_63_0_2_i_45_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_46
       (.I0(\i_reg_n_0_[26] ),
        .I1(\i_reg_n_0_[27] ),
        .O(ID_reg_r1_0_63_0_2_i_46_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_47
       (.I0(\i_reg_n_0_[24] ),
        .I1(\i_reg_n_0_[25] ),
        .O(ID_reg_r1_0_63_0_2_i_47_n_0));
  LUT3 #(
    .INIT(8'hF8)) 
    ID_reg_r1_0_63_0_2_i_48
       (.I0(ID_reg_r1_0_63_0_2_i_13_n_5),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(ID_reg_r1_0_63_0_2_i_48_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_0_2_i_49
       (.I0(ID_reg_r5_192_255_0_2_n_2),
        .I1(ID_reg_r5_128_191_0_2_n_2),
        .I2(p_1_in[7]),
        .I3(ID_reg_r5_64_127_0_2_n_2),
        .I4(p_1_in[6]),
        .I5(ID_reg_r5_0_63_0_2_n_2),
        .O(p_3_out[2]));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    ID_reg_r1_0_63_0_2_i_5
       (.I0(ID_reg_r1_0_63_0_2_i_24_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I4(p_4_in[5]),
        .I5(ID_reg_r1_0_63_0_2_i_25_n_0),
        .O(p_6_in[5]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    ID_reg_r1_0_63_0_2_i_50
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(ID_reg_r1_0_63_0_2_i_13_n_5),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(ID_reg_r1_0_63_0_2_i_50_n_0));
  LUT4 #(
    .INIT(16'h1400)) 
    ID_reg_r1_0_63_0_2_i_51
       (.I0(\sorting_state_reg_n_0_[2] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(ID_reg_r1_0_63_0_2_i_51_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    ID_reg_r1_0_63_0_2_i_52
       (.I0(\i_reg_n_0_[6] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_52_n_0));
  CARRY4 ID_reg_r1_0_63_0_2_i_53
       (.CI(ID_reg_r4_0_63_0_2_i_1_n_0),
        .CO({ID_reg_r1_0_63_0_2_i_53_n_0,ID_reg_r1_0_63_0_2_i_53_n_1,ID_reg_r1_0_63_0_2_i_53_n_2,ID_reg_r1_0_63_0_2_i_53_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({p_4_in__0[9:8],p_4_in[7:6]}),
        .S({ID_reg_r1_0_63_0_2_i_62_n_0,ID_reg_r1_0_63_0_2_i_63_n_0,ID_reg_r1_0_63_0_2_i_64_n_0,ID_reg_r1_0_63_0_2_i_65_n_0}));
  LUT4 #(
    .INIT(16'hA820)) 
    ID_reg_r1_0_63_0_2_i_54
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(P_reg_r3_0_63_0_2_i_1_n_6),
        .I3(j[6]),
        .O(ID_reg_r1_0_63_0_2_i_54_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    ID_reg_r1_0_63_0_2_i_55
       (.I0(\i_reg_n_0_[7] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_55_n_0));
  LUT4 #(
    .INIT(16'hA820)) 
    ID_reg_r1_0_63_0_2_i_56
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(j[7]),
        .O(ID_reg_r1_0_63_0_2_i_56_n_0));
  CARRY4 ID_reg_r1_0_63_0_2_i_57
       (.CI(ID_reg_r1_0_63_0_2_i_66_n_0),
        .CO({ID_reg_r1_0_63_0_2_i_57_n_0,ID_reg_r1_0_63_0_2_i_57_n_1,ID_reg_r1_0_63_0_2_i_57_n_2,ID_reg_r1_0_63_0_2_i_57_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_ID_reg_r1_0_63_0_2_i_57_O_UNCONNECTED[3:0]),
        .S({ID_reg_r1_0_63_0_2_i_67_n_0,ID_reg_r1_0_63_0_2_i_68_n_0,ID_reg_r1_0_63_0_2_i_69_n_0,ID_reg_r1_0_63_0_2_i_70_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_58
       (.I0(\i_reg_n_0_[22] ),
        .I1(\i_reg_n_0_[23] ),
        .O(ID_reg_r1_0_63_0_2_i_58_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_59
       (.I0(\i_reg_n_0_[20] ),
        .I1(\i_reg_n_0_[21] ),
        .O(ID_reg_r1_0_63_0_2_i_59_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    ID_reg_r1_0_63_0_2_i_6
       (.I0(ID_reg_r1_0_63_0_2_i_26_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I4(p_4_in[4]),
        .I5(ID_reg_r1_0_63_0_2_i_27_n_0),
        .O(p_6_in[4]));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_60
       (.I0(\i_reg_n_0_[18] ),
        .I1(\i_reg_n_0_[19] ),
        .O(ID_reg_r1_0_63_0_2_i_60_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_61
       (.I0(\i_reg_n_0_[16] ),
        .I1(\i_reg_n_0_[17] ),
        .O(ID_reg_r1_0_63_0_2_i_61_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    ID_reg_r1_0_63_0_2_i_62
       (.I0(it[9]),
        .O(ID_reg_r1_0_63_0_2_i_62_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    ID_reg_r1_0_63_0_2_i_63
       (.I0(it[8]),
        .O(ID_reg_r1_0_63_0_2_i_63_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    ID_reg_r1_0_63_0_2_i_64
       (.I0(it[7]),
        .O(ID_reg_r1_0_63_0_2_i_64_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    ID_reg_r1_0_63_0_2_i_65
       (.I0(it[6]),
        .O(ID_reg_r1_0_63_0_2_i_65_n_0));
  CARRY4 ID_reg_r1_0_63_0_2_i_66
       (.CI(1'b0),
        .CO({ID_reg_r1_0_63_0_2_i_66_n_0,ID_reg_r1_0_63_0_2_i_66_n_1,ID_reg_r1_0_63_0_2_i_66_n_2,ID_reg_r1_0_63_0_2_i_66_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,ID_reg_r1_0_63_0_2_i_71_n_0,1'b0,ID_reg_r1_0_63_0_2_i_72_n_0}),
        .O(NLW_ID_reg_r1_0_63_0_2_i_66_O_UNCONNECTED[3:0]),
        .S({ID_reg_r1_0_63_0_2_i_73_n_0,ID_reg_r1_0_63_0_2_i_74_n_0,ID_reg_r1_0_63_0_2_i_75_n_0,ID_reg_r1_0_63_0_2_i_76_n_0}));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_67
       (.I0(\i_reg_n_0_[14] ),
        .I1(\i_reg_n_0_[15] ),
        .O(ID_reg_r1_0_63_0_2_i_67_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_68
       (.I0(\i_reg_n_0_[12] ),
        .I1(\i_reg_n_0_[13] ),
        .O(ID_reg_r1_0_63_0_2_i_68_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_69
       (.I0(\i_reg_n_0_[10] ),
        .I1(\i_reg_n_0_[11] ),
        .O(ID_reg_r1_0_63_0_2_i_69_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    ID_reg_r1_0_63_0_2_i_7
       (.I0(ID_reg_r1_0_63_0_2_i_28_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I4(p_4_in[3]),
        .I5(ID_reg_r1_0_63_0_2_i_29_n_0),
        .O(p_6_in[3]));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_70
       (.I0(\i_reg_n_0_[8] ),
        .I1(\i_reg_n_0_[9] ),
        .O(ID_reg_r1_0_63_0_2_i_70_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    ID_reg_r1_0_63_0_2_i_71
       (.I0(\i_reg_n_0_[4] ),
        .I1(\i_reg_n_0_[5] ),
        .O(ID_reg_r1_0_63_0_2_i_71_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r1_0_63_0_2_i_72
       (.I0(\i_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_0_2_i_72_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_73
       (.I0(\i_reg_n_0_[6] ),
        .I1(\i_reg_n_0_[7] ),
        .O(ID_reg_r1_0_63_0_2_i_73_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    ID_reg_r1_0_63_0_2_i_74
       (.I0(\i_reg_n_0_[4] ),
        .I1(\i_reg_n_0_[5] ),
        .O(ID_reg_r1_0_63_0_2_i_74_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ID_reg_r1_0_63_0_2_i_75
       (.I0(\i_reg_n_0_[2] ),
        .I1(\i_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_0_2_i_75_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    ID_reg_r1_0_63_0_2_i_76
       (.I0(\i_reg_n_0_[1] ),
        .I1(\i_reg_n_0_[0] ),
        .O(ID_reg_r1_0_63_0_2_i_76_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    ID_reg_r1_0_63_0_2_i_8
       (.I0(ID_reg_r1_0_63_0_2_i_30_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I4(p_4_in[2]),
        .I5(ID_reg_r1_0_63_0_2_i_31_n_0),
        .O(p_6_in[2]));
  LUT6 #(
    .INIT(64'hEEEEAEAEEEEEAEAA)) 
    ID_reg_r1_0_63_0_2_i_9
       (.I0(ID_reg_r1_0_63_0_2_i_32_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(it[1]),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I4(ID_reg_r1_0_63_0_2_i_33_n_0),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(p_6_in[1]));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1707 ID_reg_r1_0_63_27_29
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r1_0_63_27_29_n_0),
        .DOB(ID_reg_r1_0_63_27_29_n_1),
        .DOC(ID_reg_r1_0_63_27_29_n_2),
        .DOD(NLW_ID_reg_r1_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_UNIQ_BASE_ ID_reg_r1_0_63_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r1_0_63_31_31_n_0),
        .DPRA0(position_reg_rep__0__0[0]),
        .DPRA1(position_reg_rep__0__0[1]),
        .DPRA2(position_reg_rep__0__0[2]),
        .DPRA3(position_reg_rep__0__0[3]),
        .DPRA4(position_reg_rep__0__0[4]),
        .DPRA5(position_reg_rep__0__0[5]),
        .SPO(NLW_ID_reg_r1_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1708 ID_reg_r1_0_63_3_5
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r1_0_63_3_5_n_0),
        .DOB(ID_reg_r1_0_63_3_5_n_1),
        .DOC(ID_reg_r1_0_63_3_5_n_2),
        .DOD(NLW_ID_reg_r1_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hEAEEEAAA)) 
    ID_reg_r1_0_63_3_5_i_1
       (.I0(ID_reg_r1_0_63_3_5_i_4_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(ID_reg_r1_0_63_3_5_i_5_n_0),
        .I3(ID_reg_r1_0_63_0_2_i_13_n_4),
        .I4(ID_reg_r1_0_63_3_5_i_6_n_0),
        .O(ID[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEBA028A)) 
    ID_reg_r1_0_63_3_5_i_10
       (.I0(ID_reg_r1_0_63_3_5_i_16_n_0),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp1[5]),
        .I3(p_3_out[5]),
        .I4(ID_reg_r1_0_63_3_5_i_18_n_0),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_3_5_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_3_5_i_11
       (.I0(ID_reg_r2_192_255_3_5_n_0),
        .I1(ID_reg_r2_128_191_3_5_n_0),
        .I2(i_reg_rep__0__1[7]),
        .I3(ID_reg_r2_64_127_3_5_n_0),
        .I4(i_reg_rep__0__1[6]),
        .I5(ID_reg_r2_0_63_3_5_n_0),
        .O(p_1_out[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_3_5_i_12
       (.I0(ID_reg_r5_192_255_3_5_n_0),
        .I1(ID_reg_r5_128_191_3_5_n_0),
        .I2(p_1_in[7]),
        .I3(ID_reg_r5_64_127_3_5_n_0),
        .I4(p_1_in[6]),
        .I5(ID_reg_r5_0_63_3_5_n_0),
        .O(p_3_out[3]));
  LUT3 #(
    .INIT(8'hF8)) 
    ID_reg_r1_0_63_3_5_i_13
       (.I0(ID_reg_r1_0_63_3_5_i_19_n_7),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(ID_reg_r1_0_63_3_5_i_13_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_3_5_i_14
       (.I0(ID_reg_r5_192_255_3_5_n_1),
        .I1(ID_reg_r5_128_191_3_5_n_1),
        .I2(p_1_in[7]),
        .I3(ID_reg_r5_64_127_3_5_n_1),
        .I4(p_1_in[6]),
        .I5(ID_reg_r5_0_63_3_5_n_1),
        .O(p_3_out[4]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    ID_reg_r1_0_63_3_5_i_15
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(ID_reg_r1_0_63_3_5_i_19_n_7),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(ID_reg_r1_0_63_3_5_i_15_n_0));
  LUT3 #(
    .INIT(8'hF8)) 
    ID_reg_r1_0_63_3_5_i_16
       (.I0(ID_reg_r1_0_63_3_5_i_19_n_6),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(ID_reg_r1_0_63_3_5_i_16_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_3_5_i_17
       (.I0(ID_reg_r5_192_255_3_5_n_2),
        .I1(ID_reg_r5_128_191_3_5_n_2),
        .I2(p_1_in[7]),
        .I3(ID_reg_r5_64_127_3_5_n_2),
        .I4(p_1_in[6]),
        .I5(ID_reg_r5_0_63_3_5_n_2),
        .O(p_3_out[5]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    ID_reg_r1_0_63_3_5_i_18
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(ID_reg_r1_0_63_3_5_i_19_n_6),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(ID_reg_r1_0_63_3_5_i_18_n_0));
  CARRY4 ID_reg_r1_0_63_3_5_i_19
       (.CI(ID_reg_r1_0_63_0_2_i_13_n_0),
        .CO({NLW_ID_reg_r1_0_63_3_5_i_19_CO_UNCONNECTED[3],ID_reg_r1_0_63_3_5_i_19_n_1,ID_reg_r1_0_63_3_5_i_19_n_2,ID_reg_r1_0_63_3_5_i_19_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,p_5_out[6:4]}),
        .O({ID_reg_r1_0_63_3_5_i_19_n_4,ID_reg_r1_0_63_3_5_i_19_n_5,ID_reg_r1_0_63_3_5_i_19_n_6,ID_reg_r1_0_63_3_5_i_19_n_7}),
        .S({ID_reg_r1_0_63_3_5_i_20_n_0,ID_reg_r1_0_63_3_5_i_21_n_0,ID_reg_r1_0_63_3_5_i_22_n_0,ID_reg_r1_0_63_3_5_i_23_n_0}));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    ID_reg_r1_0_63_3_5_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(symbols_tab_reg_r2_0_63_3_5_n_1),
        .I2(p_1_out[4]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(\FSM_onehot_state_reg_n_0_[6] ),
        .I5(ID_reg_r1_0_63_3_5_i_8_n_0),
        .O(ID[4]));
  LUT2 #(
    .INIT(4'h6)) 
    ID_reg_r1_0_63_3_5_i_20
       (.I0(p_5_out[7]),
        .I1(it[7]),
        .O(ID_reg_r1_0_63_3_5_i_20_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ID_reg_r1_0_63_3_5_i_21
       (.I0(p_5_out[6]),
        .I1(it[6]),
        .O(ID_reg_r1_0_63_3_5_i_21_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ID_reg_r1_0_63_3_5_i_22
       (.I0(p_5_out[5]),
        .I1(it[5]),
        .O(ID_reg_r1_0_63_3_5_i_22_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ID_reg_r1_0_63_3_5_i_23
       (.I0(p_5_out[4]),
        .I1(it[4]),
        .O(ID_reg_r1_0_63_3_5_i_23_n_0));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    ID_reg_r1_0_63_3_5_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(symbols_tab_reg_r2_0_63_3_5_n_2),
        .I2(p_1_out[5]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(\FSM_onehot_state_reg_n_0_[6] ),
        .I5(ID_reg_r1_0_63_3_5_i_10_n_0),
        .O(ID[5]));
  LUT4 #(
    .INIT(16'hE400)) 
    ID_reg_r1_0_63_3_5_i_4
       (.I0(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I1(p_1_out[3]),
        .I2(symbols_tab_reg_r2_0_63_3_5_n_0),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .O(ID_reg_r1_0_63_3_5_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEBAAAAA)) 
    ID_reg_r1_0_63_3_5_i_5
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp1[3]),
        .I3(p_3_out[3]),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_3_5_i_5_n_0));
  LUT5 #(
    .INIT(32'hFFFFAC00)) 
    ID_reg_r1_0_63_3_5_i_6
       (.I0(p_3_out[3]),
        .I1(temp1[3]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_3_5_i_6_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_3_5_i_7
       (.I0(ID_reg_r2_192_255_3_5_n_1),
        .I1(ID_reg_r2_128_191_3_5_n_1),
        .I2(i_reg_rep__0__1[7]),
        .I3(ID_reg_r2_64_127_3_5_n_1),
        .I4(i_reg_rep__0__1[6]),
        .I5(ID_reg_r2_0_63_3_5_n_1),
        .O(p_1_out[4]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEBA028A)) 
    ID_reg_r1_0_63_3_5_i_8
       (.I0(ID_reg_r1_0_63_3_5_i_13_n_0),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp1[4]),
        .I3(p_3_out[4]),
        .I4(ID_reg_r1_0_63_3_5_i_15_n_0),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_3_5_i_8_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_3_5_i_9
       (.I0(ID_reg_r2_192_255_3_5_n_2),
        .I1(ID_reg_r2_128_191_3_5_n_2),
        .I2(i_reg_rep__0__1[7]),
        .I3(ID_reg_r2_64_127_3_5_n_2),
        .I4(i_reg_rep__0__1[6]),
        .I5(ID_reg_r2_0_63_3_5_n_2),
        .O(p_1_out[5]));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1709 ID_reg_r1_0_63_6_8
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r1_0_63_6_8_n_0),
        .DOB(ID_reg_r1_0_63_6_8_n_1),
        .DOC(ID_reg_r1_0_63_6_8_n_2),
        .DOD(NLW_ID_reg_r1_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    ID_reg_r1_0_63_6_8_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(symbols_tab_reg_r2_0_63_6_7_n_0),
        .I2(p_1_out[6]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(\FSM_onehot_state_reg_n_0_[6] ),
        .I5(ID_reg_r1_0_63_6_8_i_4_n_0),
        .O(ID[6]));
  LUT3 #(
    .INIT(8'hF8)) 
    ID_reg_r1_0_63_6_8_i_10
       (.I0(ID_reg_r1_0_63_3_5_i_19_n_4),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(ID_reg_r1_0_63_6_8_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_6_8_i_11
       (.I0(ID_reg_r5_192_255_6_8_n_1),
        .I1(ID_reg_r5_128_191_6_8_n_1),
        .I2(p_1_in[7]),
        .I3(ID_reg_r5_64_127_6_8_n_1),
        .I4(p_1_in[6]),
        .I5(ID_reg_r5_0_63_6_8_n_1),
        .O(p_3_out[7]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    ID_reg_r1_0_63_6_8_i_12
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(ID_reg_r1_0_63_3_5_i_19_n_4),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(ID_reg_r1_0_63_6_8_i_12_n_0));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    ID_reg_r1_0_63_6_8_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(symbols_tab_reg_r2_0_63_6_7_n_1),
        .I2(p_1_out[7]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(\FSM_onehot_state_reg_n_0_[6] ),
        .I5(ID_reg_r1_0_63_6_8_i_6_n_0),
        .O(ID[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_6_8_i_3
       (.I0(ID_reg_r2_192_255_6_8_n_0),
        .I1(ID_reg_r2_128_191_6_8_n_0),
        .I2(i_reg_rep__0__1[7]),
        .I3(ID_reg_r2_64_127_6_8_n_0),
        .I4(i_reg_rep__0__1[6]),
        .I5(ID_reg_r2_0_63_6_8_n_0),
        .O(p_1_out[6]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEBA028A)) 
    ID_reg_r1_0_63_6_8_i_4
       (.I0(ID_reg_r1_0_63_6_8_i_7_n_0),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp1[6]),
        .I3(p_3_out[6]),
        .I4(ID_reg_r1_0_63_6_8_i_9_n_0),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_6_8_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_6_8_i_5
       (.I0(ID_reg_r2_192_255_6_8_n_1),
        .I1(ID_reg_r2_128_191_6_8_n_1),
        .I2(i_reg_rep__0__1[7]),
        .I3(ID_reg_r2_64_127_6_8_n_1),
        .I4(i_reg_rep__0__1[6]),
        .I5(ID_reg_r2_0_63_6_8_n_1),
        .O(p_1_out[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEBA028A)) 
    ID_reg_r1_0_63_6_8_i_6
       (.I0(ID_reg_r1_0_63_6_8_i_10_n_0),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp1[7]),
        .I3(p_3_out[7]),
        .I4(ID_reg_r1_0_63_6_8_i_12_n_0),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(ID_reg_r1_0_63_6_8_i_6_n_0));
  LUT3 #(
    .INIT(8'hF8)) 
    ID_reg_r1_0_63_6_8_i_7
       (.I0(ID_reg_r1_0_63_3_5_i_19_n_5),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(ID_reg_r1_0_63_6_8_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ID_reg_r1_0_63_6_8_i_8
       (.I0(ID_reg_r5_192_255_6_8_n_0),
        .I1(ID_reg_r5_128_191_6_8_n_0),
        .I2(p_1_in[7]),
        .I3(ID_reg_r5_64_127_6_8_n_0),
        .I4(p_1_in[6]),
        .I5(ID_reg_r5_0_63_6_8_n_0),
        .O(p_3_out[6]));
  LUT4 #(
    .INIT(16'hFFEA)) 
    ID_reg_r1_0_63_6_8_i_9
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(ID_reg_r1_0_63_3_5_i_19_n_5),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .O(ID_reg_r1_0_63_6_8_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1710 ID_reg_r1_128_191_0_2
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r1_128_191_0_2_n_0),
        .DOB(ID_reg_r1_128_191_0_2_n_1),
        .DOC(ID_reg_r1_128_191_0_2_n_2),
        .DOD(NLW_ID_reg_r1_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    ID_reg_r1_128_191_0_2_i_1
       (.I0(p_6_in[6]),
        .I1(p_6_in[7]),
        .I2(ID_reg_r1_0_63_0_2_i_21_n_0),
        .O(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1711 ID_reg_r1_128_191_27_29
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r1_128_191_27_29_n_0),
        .DOB(ID_reg_r1_128_191_27_29_n_1),
        .DOC(ID_reg_r1_128_191_27_29_n_2),
        .DOD(NLW_ID_reg_r1_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1712 ID_reg_r1_128_191_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r1_128_191_31_31_n_0),
        .DPRA0(position_reg_rep__0__0[0]),
        .DPRA1(position_reg_rep__0__0[1]),
        .DPRA2(position_reg_rep__0__0[2]),
        .DPRA3(position_reg_rep__0__0[3]),
        .DPRA4(position_reg_rep__0__0[4]),
        .DPRA5(position_reg_rep__0__0[5]),
        .SPO(NLW_ID_reg_r1_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1713 ID_reg_r1_128_191_3_5
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r1_128_191_3_5_n_0),
        .DOB(ID_reg_r1_128_191_3_5_n_1),
        .DOC(ID_reg_r1_128_191_3_5_n_2),
        .DOD(NLW_ID_reg_r1_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1714 ID_reg_r1_128_191_6_8
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r1_128_191_6_8_n_0),
        .DOB(ID_reg_r1_128_191_6_8_n_1),
        .DOC(ID_reg_r1_128_191_6_8_n_2),
        .DOD(NLW_ID_reg_r1_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1715 ID_reg_r1_192_255_0_2
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r1_192_255_0_2_n_0),
        .DOB(ID_reg_r1_192_255_0_2_n_1),
        .DOC(ID_reg_r1_192_255_0_2_n_2),
        .DOD(NLW_ID_reg_r1_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    ID_reg_r1_192_255_0_2_i_1
       (.I0(ID_reg_r1_0_63_0_2_i_21_n_0),
        .I1(p_6_in[6]),
        .I2(p_6_in[7]),
        .O(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1716 ID_reg_r1_192_255_27_29
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r1_192_255_27_29_n_0),
        .DOB(ID_reg_r1_192_255_27_29_n_1),
        .DOC(ID_reg_r1_192_255_27_29_n_2),
        .DOD(NLW_ID_reg_r1_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1717 ID_reg_r1_192_255_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r1_192_255_31_31_n_0),
        .DPRA0(position_reg_rep__0__0[0]),
        .DPRA1(position_reg_rep__0__0[1]),
        .DPRA2(position_reg_rep__0__0[2]),
        .DPRA3(position_reg_rep__0__0[3]),
        .DPRA4(position_reg_rep__0__0[4]),
        .DPRA5(position_reg_rep__0__0[5]),
        .SPO(NLW_ID_reg_r1_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1718 ID_reg_r1_192_255_3_5
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r1_192_255_3_5_n_0),
        .DOB(ID_reg_r1_192_255_3_5_n_1),
        .DOC(ID_reg_r1_192_255_3_5_n_2),
        .DOD(NLW_ID_reg_r1_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1719 ID_reg_r1_192_255_6_8
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r1_192_255_6_8_n_0),
        .DOB(ID_reg_r1_192_255_6_8_n_1),
        .DOC(ID_reg_r1_192_255_6_8_n_2),
        .DOD(NLW_ID_reg_r1_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1720 ID_reg_r1_64_127_0_2
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r1_64_127_0_2_n_0),
        .DOB(ID_reg_r1_64_127_0_2_n_1),
        .DOC(ID_reg_r1_64_127_0_2_n_2),
        .DOD(NLW_ID_reg_r1_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    ID_reg_r1_64_127_0_2_i_1
       (.I0(p_6_in[7]),
        .I1(p_6_in[6]),
        .I2(ID_reg_r1_0_63_0_2_i_21_n_0),
        .O(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1721 ID_reg_r1_64_127_27_29
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r1_64_127_27_29_n_0),
        .DOB(ID_reg_r1_64_127_27_29_n_1),
        .DOC(ID_reg_r1_64_127_27_29_n_2),
        .DOD(NLW_ID_reg_r1_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1722 ID_reg_r1_64_127_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r1_64_127_31_31_n_0),
        .DPRA0(position_reg_rep__0__0[0]),
        .DPRA1(position_reg_rep__0__0[1]),
        .DPRA2(position_reg_rep__0__0[2]),
        .DPRA3(position_reg_rep__0__0[3]),
        .DPRA4(position_reg_rep__0__0[4]),
        .DPRA5(position_reg_rep__0__0[5]),
        .SPO(NLW_ID_reg_r1_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1723 ID_reg_r1_64_127_3_5
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r1_64_127_3_5_n_0),
        .DOB(ID_reg_r1_64_127_3_5_n_1),
        .DOC(ID_reg_r1_64_127_3_5_n_2),
        .DOD(NLW_ID_reg_r1_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1724 ID_reg_r1_64_127_6_8
       (.ADDRA(position_reg_rep__0__0[5:0]),
        .ADDRB(position_reg_rep__0__0[5:0]),
        .ADDRC(position_reg_rep__0__0[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r1_64_127_6_8_n_0),
        .DOB(ID_reg_r1_64_127_6_8_n_1),
        .DOC(ID_reg_r1_64_127_6_8_n_2),
        .DOD(NLW_ID_reg_r1_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1725 ID_reg_r2_0_63_0_2
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r2_0_63_0_2_n_0),
        .DOB(ID_reg_r2_0_63_0_2_n_1),
        .DOC(ID_reg_r2_0_63_0_2_n_2),
        .DOD(NLW_ID_reg_r2_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1726 ID_reg_r2_0_63_3_5
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r2_0_63_3_5_n_0),
        .DOB(ID_reg_r2_0_63_3_5_n_1),
        .DOC(ID_reg_r2_0_63_3_5_n_2),
        .DOD(NLW_ID_reg_r2_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1727 ID_reg_r2_0_63_6_8
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r2_0_63_6_8_n_0),
        .DOB(ID_reg_r2_0_63_6_8_n_1),
        .DOC(ID_reg_r2_0_63_6_8_n_2),
        .DOD(NLW_ID_reg_r2_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1728 ID_reg_r2_128_191_0_2
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r2_128_191_0_2_n_0),
        .DOB(ID_reg_r2_128_191_0_2_n_1),
        .DOC(ID_reg_r2_128_191_0_2_n_2),
        .DOD(NLW_ID_reg_r2_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1729 ID_reg_r2_128_191_3_5
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r2_128_191_3_5_n_0),
        .DOB(ID_reg_r2_128_191_3_5_n_1),
        .DOC(ID_reg_r2_128_191_3_5_n_2),
        .DOD(NLW_ID_reg_r2_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1730 ID_reg_r2_128_191_6_8
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r2_128_191_6_8_n_0),
        .DOB(ID_reg_r2_128_191_6_8_n_1),
        .DOC(ID_reg_r2_128_191_6_8_n_2),
        .DOD(NLW_ID_reg_r2_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1731 ID_reg_r2_192_255_0_2
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r2_192_255_0_2_n_0),
        .DOB(ID_reg_r2_192_255_0_2_n_1),
        .DOC(ID_reg_r2_192_255_0_2_n_2),
        .DOD(NLW_ID_reg_r2_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1732 ID_reg_r2_192_255_3_5
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r2_192_255_3_5_n_0),
        .DOB(ID_reg_r2_192_255_3_5_n_1),
        .DOC(ID_reg_r2_192_255_3_5_n_2),
        .DOD(NLW_ID_reg_r2_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1733 ID_reg_r2_192_255_6_8
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r2_192_255_6_8_n_0),
        .DOB(ID_reg_r2_192_255_6_8_n_1),
        .DOC(ID_reg_r2_192_255_6_8_n_2),
        .DOD(NLW_ID_reg_r2_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1734 ID_reg_r2_64_127_0_2
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r2_64_127_0_2_n_0),
        .DOB(ID_reg_r2_64_127_0_2_n_1),
        .DOC(ID_reg_r2_64_127_0_2_n_2),
        .DOD(NLW_ID_reg_r2_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1735 ID_reg_r2_64_127_3_5
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r2_64_127_3_5_n_0),
        .DOB(ID_reg_r2_64_127_3_5_n_1),
        .DOC(ID_reg_r2_64_127_3_5_n_2),
        .DOD(NLW_ID_reg_r2_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1736 ID_reg_r2_64_127_6_8
       (.ADDRA(i_reg_rep__0__1[5:0]),
        .ADDRB(i_reg_rep__0__1[5:0]),
        .ADDRC(i_reg_rep__0__1[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r2_64_127_6_8_n_0),
        .DOB(ID_reg_r2_64_127_6_8_n_1),
        .DOC(ID_reg_r2_64_127_6_8_n_2),
        .DOD(NLW_ID_reg_r2_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1737 ID_reg_r3_0_63_0_2
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r3_0_63_0_2_n_0),
        .DOB(ID_reg_r3_0_63_0_2_n_1),
        .DOC(ID_reg_r3_0_63_0_2_n_2),
        .DOD(NLW_ID_reg_r3_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  CARRY4 ID_reg_r3_0_63_0_2_i_1
       (.CI(ID_reg_r3_0_63_0_2_i_2_n_0),
        .CO({NLW_ID_reg_r3_0_63_0_2_i_1_CO_UNCONNECTED[3:2],ID_reg_r3_0_63_0_2_i_1_n_2,ID_reg_r3_0_63_0_2_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,tree_tab_length[6:5]}),
        .O({NLW_ID_reg_r3_0_63_0_2_i_1_O_UNCONNECTED[3],ID_reg_r3_0_63_0_2_i_1_n_5,ID_reg_r3_0_63_0_2_i_1_n_6,ID_reg_r3_0_63_0_2_i_1_n_7}),
        .S({1'b0,ID_reg_r3_0_63_0_2_i_4_n_0,ID_reg_r3_0_63_0_2_i_5_n_0,ID_reg_r3_0_63_0_2_i_6_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r3_0_63_0_2_i_10
       (.I0(tree_tab_length[1]),
        .O(ID_reg_r3_0_63_0_2_i_10_n_0));
  CARRY4 ID_reg_r3_0_63_0_2_i_2
       (.CI(1'b0),
        .CO({ID_reg_r3_0_63_0_2_i_2_n_0,ID_reg_r3_0_63_0_2_i_2_n_1,ID_reg_r3_0_63_0_2_i_2_n_2,ID_reg_r3_0_63_0_2_i_2_n_3}),
        .CYINIT(tree_tab_length[0]),
        .DI(tree_tab_length[4:1]),
        .O({ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7}),
        .S({ID_reg_r3_0_63_0_2_i_7_n_0,ID_reg_r3_0_63_0_2_i_8_n_0,ID_reg_r3_0_63_0_2_i_9_n_0,ID_reg_r3_0_63_0_2_i_10_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r3_0_63_0_2_i_3
       (.I0(tree_tab_length[0]),
        .O(ID_reg_r3_0_63_0_2_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r3_0_63_0_2_i_4
       (.I0(tree_tab_length[7]),
        .O(ID_reg_r3_0_63_0_2_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r3_0_63_0_2_i_5
       (.I0(tree_tab_length[6]),
        .O(ID_reg_r3_0_63_0_2_i_5_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r3_0_63_0_2_i_6
       (.I0(tree_tab_length[5]),
        .O(ID_reg_r3_0_63_0_2_i_6_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r3_0_63_0_2_i_7
       (.I0(tree_tab_length[4]),
        .O(ID_reg_r3_0_63_0_2_i_7_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r3_0_63_0_2_i_8
       (.I0(tree_tab_length[3]),
        .O(ID_reg_r3_0_63_0_2_i_8_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r3_0_63_0_2_i_9
       (.I0(tree_tab_length[2]),
        .O(ID_reg_r3_0_63_0_2_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1738 ID_reg_r3_0_63_27_29
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r3_0_63_27_29_n_0),
        .DOB(ID_reg_r3_0_63_27_29_n_1),
        .DOC(ID_reg_r3_0_63_27_29_n_2),
        .DOD(NLW_ID_reg_r3_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1739 ID_reg_r3_0_63_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r3_0_63_31_31_n_0),
        .DPRA0(ID_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(ID_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(ID_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(ID_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(ID_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(ID_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_ID_reg_r3_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1740 ID_reg_r3_0_63_3_5
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r3_0_63_3_5_n_0),
        .DOB(ID_reg_r3_0_63_3_5_n_1),
        .DOC(ID_reg_r3_0_63_3_5_n_2),
        .DOD(NLW_ID_reg_r3_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1741 ID_reg_r3_0_63_6_8
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r3_0_63_6_8_n_0),
        .DOB(ID_reg_r3_0_63_6_8_n_1),
        .DOC(ID_reg_r3_0_63_6_8_n_2),
        .DOD(NLW_ID_reg_r3_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1742 ID_reg_r3_128_191_0_2
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r3_128_191_0_2_n_0),
        .DOB(ID_reg_r3_128_191_0_2_n_1),
        .DOC(ID_reg_r3_128_191_0_2_n_2),
        .DOD(NLW_ID_reg_r3_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1743 ID_reg_r3_128_191_27_29
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r3_128_191_27_29_n_0),
        .DOB(ID_reg_r3_128_191_27_29_n_1),
        .DOC(ID_reg_r3_128_191_27_29_n_2),
        .DOD(NLW_ID_reg_r3_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1744 ID_reg_r3_128_191_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r3_128_191_31_31_n_0),
        .DPRA0(ID_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(ID_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(ID_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(ID_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(ID_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(ID_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_ID_reg_r3_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1745 ID_reg_r3_128_191_3_5
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r3_128_191_3_5_n_0),
        .DOB(ID_reg_r3_128_191_3_5_n_1),
        .DOC(ID_reg_r3_128_191_3_5_n_2),
        .DOD(NLW_ID_reg_r3_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1746 ID_reg_r3_128_191_6_8
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r3_128_191_6_8_n_0),
        .DOB(ID_reg_r3_128_191_6_8_n_1),
        .DOC(ID_reg_r3_128_191_6_8_n_2),
        .DOD(NLW_ID_reg_r3_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1747 ID_reg_r3_192_255_0_2
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r3_192_255_0_2_n_0),
        .DOB(ID_reg_r3_192_255_0_2_n_1),
        .DOC(ID_reg_r3_192_255_0_2_n_2),
        .DOD(NLW_ID_reg_r3_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1748 ID_reg_r3_192_255_27_29
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r3_192_255_27_29_n_0),
        .DOB(ID_reg_r3_192_255_27_29_n_1),
        .DOC(ID_reg_r3_192_255_27_29_n_2),
        .DOD(NLW_ID_reg_r3_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1749 ID_reg_r3_192_255_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r3_192_255_31_31_n_0),
        .DPRA0(ID_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(ID_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(ID_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(ID_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(ID_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(ID_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_ID_reg_r3_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1750 ID_reg_r3_192_255_3_5
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r3_192_255_3_5_n_0),
        .DOB(ID_reg_r3_192_255_3_5_n_1),
        .DOC(ID_reg_r3_192_255_3_5_n_2),
        .DOD(NLW_ID_reg_r3_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1751 ID_reg_r3_192_255_6_8
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r3_192_255_6_8_n_0),
        .DOB(ID_reg_r3_192_255_6_8_n_1),
        .DOC(ID_reg_r3_192_255_6_8_n_2),
        .DOD(NLW_ID_reg_r3_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1752 ID_reg_r3_64_127_0_2
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r3_64_127_0_2_n_0),
        .DOB(ID_reg_r3_64_127_0_2_n_1),
        .DOC(ID_reg_r3_64_127_0_2_n_2),
        .DOD(NLW_ID_reg_r3_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1753 ID_reg_r3_64_127_27_29
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r3_64_127_27_29_n_0),
        .DOB(ID_reg_r3_64_127_27_29_n_1),
        .DOC(ID_reg_r3_64_127_27_29_n_2),
        .DOD(NLW_ID_reg_r3_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1754 ID_reg_r3_64_127_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r3_64_127_31_31_n_0),
        .DPRA0(ID_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(ID_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(ID_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(ID_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(ID_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(ID_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_ID_reg_r3_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1755 ID_reg_r3_64_127_3_5
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r3_64_127_3_5_n_0),
        .DOB(ID_reg_r3_64_127_3_5_n_1),
        .DOC(ID_reg_r3_64_127_3_5_n_2),
        .DOD(NLW_ID_reg_r3_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1756 ID_reg_r3_64_127_6_8
       (.ADDRA({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({ID_reg_r3_0_63_0_2_i_1_n_7,ID_reg_r3_0_63_0_2_i_2_n_4,ID_reg_r3_0_63_0_2_i_2_n_5,ID_reg_r3_0_63_0_2_i_2_n_6,ID_reg_r3_0_63_0_2_i_2_n_7,ID_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r3_64_127_6_8_n_0),
        .DOB(ID_reg_r3_64_127_6_8_n_1),
        .DOC(ID_reg_r3_64_127_6_8_n_2),
        .DOD(NLW_ID_reg_r3_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1757 ID_reg_r4_0_63_0_2
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r4_0_63_0_2_n_0),
        .DOB(ID_reg_r4_0_63_0_2_n_1),
        .DOC(ID_reg_r4_0_63_0_2_n_2),
        .DOD(NLW_ID_reg_r4_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  CARRY4 ID_reg_r4_0_63_0_2_i_1
       (.CI(1'b0),
        .CO({ID_reg_r4_0_63_0_2_i_1_n_0,ID_reg_r4_0_63_0_2_i_1_n_1,ID_reg_r4_0_63_0_2_i_1_n_2,ID_reg_r4_0_63_0_2_i_1_n_3}),
        .CYINIT(it[1]),
        .DI({1'b1,1'b1,1'b0,1'b0}),
        .O(p_4_in[5:2]),
        .S({ID_reg_r4_0_63_0_2_i_3_n_0,ID_reg_r4_0_63_0_2_i_4_n_0,ID_reg_r4_0_63_0_2_i_5_n_0,ID_reg_r4_0_63_0_2_i_6_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r4_0_63_0_2_i_2
       (.I0(it[1]),
        .O(p_4_in[1]));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r4_0_63_0_2_i_3
       (.I0(it[5]),
        .O(ID_reg_r4_0_63_0_2_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    ID_reg_r4_0_63_0_2_i_4
       (.I0(it[4]),
        .O(ID_reg_r4_0_63_0_2_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    ID_reg_r4_0_63_0_2_i_5
       (.I0(it[3]),
        .O(ID_reg_r4_0_63_0_2_i_5_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    ID_reg_r4_0_63_0_2_i_6
       (.I0(it[2]),
        .O(ID_reg_r4_0_63_0_2_i_6_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1758 ID_reg_r4_0_63_27_29
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r4_0_63_27_29_n_0),
        .DOB(ID_reg_r4_0_63_27_29_n_1),
        .DOC(ID_reg_r4_0_63_27_29_n_2),
        .DOD(NLW_ID_reg_r4_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1759 ID_reg_r4_0_63_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r4_0_63_31_31_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_ID_reg_r4_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1760 ID_reg_r4_0_63_3_5
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r4_0_63_3_5_n_0),
        .DOB(ID_reg_r4_0_63_3_5_n_1),
        .DOC(ID_reg_r4_0_63_3_5_n_2),
        .DOD(NLW_ID_reg_r4_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1761 ID_reg_r4_0_63_6_8
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r4_0_63_6_8_n_0),
        .DOB(ID_reg_r4_0_63_6_8_n_1),
        .DOC(ID_reg_r4_0_63_6_8_n_2),
        .DOD(NLW_ID_reg_r4_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1762 ID_reg_r4_128_191_0_2
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r4_128_191_0_2_n_0),
        .DOB(ID_reg_r4_128_191_0_2_n_1),
        .DOC(ID_reg_r4_128_191_0_2_n_2),
        .DOD(NLW_ID_reg_r4_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1763 ID_reg_r4_128_191_27_29
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r4_128_191_27_29_n_0),
        .DOB(ID_reg_r4_128_191_27_29_n_1),
        .DOC(ID_reg_r4_128_191_27_29_n_2),
        .DOD(NLW_ID_reg_r4_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1764 ID_reg_r4_128_191_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r4_128_191_31_31_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_ID_reg_r4_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1765 ID_reg_r4_128_191_3_5
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r4_128_191_3_5_n_0),
        .DOB(ID_reg_r4_128_191_3_5_n_1),
        .DOC(ID_reg_r4_128_191_3_5_n_2),
        .DOD(NLW_ID_reg_r4_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1766 ID_reg_r4_128_191_6_8
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r4_128_191_6_8_n_0),
        .DOB(ID_reg_r4_128_191_6_8_n_1),
        .DOC(ID_reg_r4_128_191_6_8_n_2),
        .DOD(NLW_ID_reg_r4_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1767 ID_reg_r4_192_255_0_2
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r4_192_255_0_2_n_0),
        .DOB(ID_reg_r4_192_255_0_2_n_1),
        .DOC(ID_reg_r4_192_255_0_2_n_2),
        .DOD(NLW_ID_reg_r4_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1768 ID_reg_r4_192_255_27_29
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r4_192_255_27_29_n_0),
        .DOB(ID_reg_r4_192_255_27_29_n_1),
        .DOC(ID_reg_r4_192_255_27_29_n_2),
        .DOD(NLW_ID_reg_r4_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1769 ID_reg_r4_192_255_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r4_192_255_31_31_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_ID_reg_r4_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1770 ID_reg_r4_192_255_3_5
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r4_192_255_3_5_n_0),
        .DOB(ID_reg_r4_192_255_3_5_n_1),
        .DOC(ID_reg_r4_192_255_3_5_n_2),
        .DOD(NLW_ID_reg_r4_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1771 ID_reg_r4_192_255_6_8
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r4_192_255_6_8_n_0),
        .DOB(ID_reg_r4_192_255_6_8_n_1),
        .DOC(ID_reg_r4_192_255_6_8_n_2),
        .DOD(NLW_ID_reg_r4_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1772 ID_reg_r4_64_127_0_2
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r4_64_127_0_2_n_0),
        .DOB(ID_reg_r4_64_127_0_2_n_1),
        .DOC(ID_reg_r4_64_127_0_2_n_2),
        .DOD(NLW_ID_reg_r4_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1773 ID_reg_r4_64_127_27_29
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r4_64_127_27_29_n_0),
        .DOB(ID_reg_r4_64_127_27_29_n_1),
        .DOC(ID_reg_r4_64_127_27_29_n_2),
        .DOD(NLW_ID_reg_r4_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1774 ID_reg_r4_64_127_31_31
       (.A0(p_6_in[0]),
        .A1(p_6_in[1]),
        .A2(p_6_in[2]),
        .A3(p_6_in[3]),
        .A4(p_6_in[4]),
        .A5(p_6_in[5]),
        .D(1'b0),
        .DPO(ID_reg_r4_64_127_31_31_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_ID_reg_r4_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1775 ID_reg_r4_64_127_3_5
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r4_64_127_3_5_n_0),
        .DOB(ID_reg_r4_64_127_3_5_n_1),
        .DOC(ID_reg_r4_64_127_3_5_n_2),
        .DOD(NLW_ID_reg_r4_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1776 ID_reg_r4_64_127_6_8
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r4_64_127_6_8_n_0),
        .DOB(ID_reg_r4_64_127_6_8_n_1),
        .DOC(ID_reg_r4_64_127_6_8_n_2),
        .DOD(NLW_ID_reg_r4_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1777 ID_reg_r5_0_63_0_2
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r5_0_63_0_2_n_0),
        .DOB(ID_reg_r5_0_63_0_2_n_1),
        .DOC(ID_reg_r5_0_63_0_2_n_2),
        .DOD(NLW_ID_reg_r5_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  LUT3 #(
    .INIT(8'hAC)) 
    ID_reg_r5_0_63_0_2_i_1
       (.I0(P_reg_r3_0_63_0_2_i_1_n_7),
        .I1(j[5]),
        .I2(ID_reg_r5_0_63_0_2_i_7_n_0),
        .O(p_1_in[5]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    ID_reg_r5_0_63_0_2_i_10
       (.I0(temp0[6]),
        .I1(temp0[5]),
        .I2(temp0[8]),
        .I3(temp0[7]),
        .I4(ID_reg_r5_0_63_0_2_i_22_n_0),
        .O(ID_reg_r5_0_63_0_2_i_10_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    ID_reg_r5_0_63_0_2_i_11
       (.I0(ID_reg_r5_0_63_0_2_i_23_n_0),
        .I1(temp0[30]),
        .I2(temp0[29]),
        .I3(temp0[31]),
        .I4(ID_reg_r5_0_63_0_2_i_24_n_0),
        .I5(ID_reg_r5_0_63_0_2_i_25_n_0),
        .O(ID_reg_r5_0_63_0_2_i_11_n_0));
  CARRY4 ID_reg_r5_0_63_0_2_i_12
       (.CI(ID_reg_r5_0_63_0_2_i_26_n_0),
        .CO({ID_reg_r5_0_63_0_2_i_12_n_0,ID_reg_r5_0_63_0_2_i_12_n_1,ID_reg_r5_0_63_0_2_i_12_n_2,ID_reg_r5_0_63_0_2_i_12_n_3}),
        .CYINIT(1'b0),
        .DI({ID_reg_r5_0_63_0_2_i_27_n_0,ID_reg_r5_0_63_0_2_i_28_n_0,ID_reg_r5_0_63_0_2_i_29_n_0,ID_reg_r5_0_63_0_2_i_30_n_0}),
        .O(NLW_ID_reg_r5_0_63_0_2_i_12_O_UNCONNECTED[3:0]),
        .S({ID_reg_r5_0_63_0_2_i_31_n_0,ID_reg_r5_0_63_0_2_i_32_n_0,ID_reg_r5_0_63_0_2_i_33_n_0,ID_reg_r5_0_63_0_2_i_34_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_13
       (.I0(temp0[30]),
        .I1(sorting_state3[30]),
        .I2(sorting_state3[31]),
        .I3(temp0[31]),
        .O(ID_reg_r5_0_63_0_2_i_13_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_14
       (.I0(temp0[28]),
        .I1(sorting_state3[28]),
        .I2(sorting_state3[29]),
        .I3(temp0[29]),
        .O(ID_reg_r5_0_63_0_2_i_14_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_15
       (.I0(temp0[26]),
        .I1(sorting_state3[26]),
        .I2(sorting_state3[27]),
        .I3(temp0[27]),
        .O(ID_reg_r5_0_63_0_2_i_15_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_16
       (.I0(temp0[24]),
        .I1(sorting_state3[24]),
        .I2(sorting_state3[25]),
        .I3(temp0[25]),
        .O(ID_reg_r5_0_63_0_2_i_16_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_17
       (.I0(temp0[30]),
        .I1(sorting_state3[30]),
        .I2(temp0[31]),
        .I3(sorting_state3[31]),
        .O(ID_reg_r5_0_63_0_2_i_17_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_18
       (.I0(temp0[28]),
        .I1(sorting_state3[28]),
        .I2(temp0[29]),
        .I3(sorting_state3[29]),
        .O(ID_reg_r5_0_63_0_2_i_18_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_19
       (.I0(temp0[26]),
        .I1(sorting_state3[26]),
        .I2(temp0[27]),
        .I3(sorting_state3[27]),
        .O(ID_reg_r5_0_63_0_2_i_19_n_0));
  LUT3 #(
    .INIT(8'hAC)) 
    ID_reg_r5_0_63_0_2_i_2
       (.I0(P_reg_r3_0_63_0_2_i_2_n_4),
        .I1(j[4]),
        .I2(ID_reg_r5_0_63_0_2_i_7_n_0),
        .O(p_1_in[4]));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_20
       (.I0(temp0[24]),
        .I1(sorting_state3[24]),
        .I2(temp0[25]),
        .I3(sorting_state3[25]),
        .O(ID_reg_r5_0_63_0_2_i_20_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ID_reg_r5_0_63_0_2_i_21
       (.I0(temp0[11]),
        .I1(temp0[12]),
        .I2(temp0[9]),
        .I3(temp0[10]),
        .O(ID_reg_r5_0_63_0_2_i_21_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ID_reg_r5_0_63_0_2_i_22
       (.I0(temp0[3]),
        .I1(temp0[4]),
        .I2(temp0[1]),
        .I3(temp0[2]),
        .O(ID_reg_r5_0_63_0_2_i_22_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ID_reg_r5_0_63_0_2_i_23
       (.I0(temp0[27]),
        .I1(temp0[28]),
        .I2(temp0[25]),
        .I3(temp0[26]),
        .O(ID_reg_r5_0_63_0_2_i_23_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ID_reg_r5_0_63_0_2_i_24
       (.I0(temp0[19]),
        .I1(temp0[20]),
        .I2(temp0[17]),
        .I3(temp0[18]),
        .O(ID_reg_r5_0_63_0_2_i_24_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ID_reg_r5_0_63_0_2_i_25
       (.I0(temp0[23]),
        .I1(temp0[24]),
        .I2(temp0[21]),
        .I3(temp0[22]),
        .O(ID_reg_r5_0_63_0_2_i_25_n_0));
  CARRY4 ID_reg_r5_0_63_0_2_i_26
       (.CI(ID_reg_r5_0_63_0_2_i_35_n_0),
        .CO({ID_reg_r5_0_63_0_2_i_26_n_0,ID_reg_r5_0_63_0_2_i_26_n_1,ID_reg_r5_0_63_0_2_i_26_n_2,ID_reg_r5_0_63_0_2_i_26_n_3}),
        .CYINIT(1'b0),
        .DI({ID_reg_r5_0_63_0_2_i_36_n_0,ID_reg_r5_0_63_0_2_i_37_n_0,ID_reg_r5_0_63_0_2_i_38_n_0,ID_reg_r5_0_63_0_2_i_39_n_0}),
        .O(NLW_ID_reg_r5_0_63_0_2_i_26_O_UNCONNECTED[3:0]),
        .S({ID_reg_r5_0_63_0_2_i_40_n_0,ID_reg_r5_0_63_0_2_i_41_n_0,ID_reg_r5_0_63_0_2_i_42_n_0,ID_reg_r5_0_63_0_2_i_43_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_27
       (.I0(temp0[22]),
        .I1(sorting_state3[22]),
        .I2(sorting_state3[23]),
        .I3(temp0[23]),
        .O(ID_reg_r5_0_63_0_2_i_27_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_28
       (.I0(temp0[20]),
        .I1(sorting_state3[20]),
        .I2(sorting_state3[21]),
        .I3(temp0[21]),
        .O(ID_reg_r5_0_63_0_2_i_28_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_29
       (.I0(temp0[18]),
        .I1(sorting_state3[18]),
        .I2(sorting_state3[19]),
        .I3(temp0[19]),
        .O(ID_reg_r5_0_63_0_2_i_29_n_0));
  LUT3 #(
    .INIT(8'hAC)) 
    ID_reg_r5_0_63_0_2_i_3
       (.I0(P_reg_r3_0_63_0_2_i_2_n_5),
        .I1(j[3]),
        .I2(ID_reg_r5_0_63_0_2_i_7_n_0),
        .O(p_1_in[3]));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_30
       (.I0(temp0[16]),
        .I1(sorting_state3[16]),
        .I2(sorting_state3[17]),
        .I3(temp0[17]),
        .O(ID_reg_r5_0_63_0_2_i_30_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_31
       (.I0(temp0[22]),
        .I1(sorting_state3[22]),
        .I2(temp0[23]),
        .I3(sorting_state3[23]),
        .O(ID_reg_r5_0_63_0_2_i_31_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_32
       (.I0(temp0[20]),
        .I1(sorting_state3[20]),
        .I2(temp0[21]),
        .I3(sorting_state3[21]),
        .O(ID_reg_r5_0_63_0_2_i_32_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_33
       (.I0(temp0[18]),
        .I1(sorting_state3[18]),
        .I2(temp0[19]),
        .I3(sorting_state3[19]),
        .O(ID_reg_r5_0_63_0_2_i_33_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_34
       (.I0(temp0[16]),
        .I1(sorting_state3[16]),
        .I2(temp0[17]),
        .I3(sorting_state3[17]),
        .O(ID_reg_r5_0_63_0_2_i_34_n_0));
  CARRY4 ID_reg_r5_0_63_0_2_i_35
       (.CI(1'b0),
        .CO({ID_reg_r5_0_63_0_2_i_35_n_0,ID_reg_r5_0_63_0_2_i_35_n_1,ID_reg_r5_0_63_0_2_i_35_n_2,ID_reg_r5_0_63_0_2_i_35_n_3}),
        .CYINIT(1'b1),
        .DI({ID_reg_r5_0_63_0_2_i_44_n_0,ID_reg_r5_0_63_0_2_i_45_n_0,ID_reg_r5_0_63_0_2_i_46_n_0,ID_reg_r5_0_63_0_2_i_47_n_0}),
        .O(NLW_ID_reg_r5_0_63_0_2_i_35_O_UNCONNECTED[3:0]),
        .S({ID_reg_r5_0_63_0_2_i_48_n_0,ID_reg_r5_0_63_0_2_i_49_n_0,ID_reg_r5_0_63_0_2_i_50_n_0,ID_reg_r5_0_63_0_2_i_51_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_36
       (.I0(temp0[14]),
        .I1(sorting_state3[14]),
        .I2(sorting_state3[15]),
        .I3(temp0[15]),
        .O(ID_reg_r5_0_63_0_2_i_36_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_37
       (.I0(temp0[12]),
        .I1(sorting_state3[12]),
        .I2(sorting_state3[13]),
        .I3(temp0[13]),
        .O(ID_reg_r5_0_63_0_2_i_37_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_38
       (.I0(temp0[10]),
        .I1(sorting_state3[10]),
        .I2(sorting_state3[11]),
        .I3(temp0[11]),
        .O(ID_reg_r5_0_63_0_2_i_38_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_39
       (.I0(temp0[8]),
        .I1(sorting_state3[8]),
        .I2(sorting_state3[9]),
        .I3(temp0[9]),
        .O(ID_reg_r5_0_63_0_2_i_39_n_0));
  LUT3 #(
    .INIT(8'hAC)) 
    ID_reg_r5_0_63_0_2_i_4
       (.I0(P_reg_r3_0_63_0_2_i_2_n_6),
        .I1(j[2]),
        .I2(ID_reg_r5_0_63_0_2_i_7_n_0),
        .O(p_1_in[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_40
       (.I0(temp0[14]),
        .I1(sorting_state3[14]),
        .I2(temp0[15]),
        .I3(sorting_state3[15]),
        .O(ID_reg_r5_0_63_0_2_i_40_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_41
       (.I0(temp0[12]),
        .I1(sorting_state3[12]),
        .I2(temp0[13]),
        .I3(sorting_state3[13]),
        .O(ID_reg_r5_0_63_0_2_i_41_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_42
       (.I0(temp0[10]),
        .I1(sorting_state3[10]),
        .I2(temp0[11]),
        .I3(sorting_state3[11]),
        .O(ID_reg_r5_0_63_0_2_i_42_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_43
       (.I0(temp0[8]),
        .I1(sorting_state3[8]),
        .I2(temp0[9]),
        .I3(sorting_state3[9]),
        .O(ID_reg_r5_0_63_0_2_i_43_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_44
       (.I0(temp0[6]),
        .I1(sorting_state3[6]),
        .I2(sorting_state3[7]),
        .I3(temp0[7]),
        .O(ID_reg_r5_0_63_0_2_i_44_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_45
       (.I0(temp0[4]),
        .I1(sorting_state3[4]),
        .I2(sorting_state3[5]),
        .I3(temp0[5]),
        .O(ID_reg_r5_0_63_0_2_i_45_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_46
       (.I0(temp0[2]),
        .I1(sorting_state3[2]),
        .I2(sorting_state3[3]),
        .I3(temp0[3]),
        .O(ID_reg_r5_0_63_0_2_i_46_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    ID_reg_r5_0_63_0_2_i_47
       (.I0(temp0[0]),
        .I1(sorting_state3[0]),
        .I2(sorting_state3[1]),
        .I3(temp0[1]),
        .O(ID_reg_r5_0_63_0_2_i_47_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_48
       (.I0(temp0[6]),
        .I1(sorting_state3[6]),
        .I2(temp0[7]),
        .I3(sorting_state3[7]),
        .O(ID_reg_r5_0_63_0_2_i_48_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_49
       (.I0(temp0[4]),
        .I1(sorting_state3[4]),
        .I2(temp0[5]),
        .I3(sorting_state3[5]),
        .O(ID_reg_r5_0_63_0_2_i_49_n_0));
  LUT3 #(
    .INIT(8'hAC)) 
    ID_reg_r5_0_63_0_2_i_5
       (.I0(P_reg_r3_0_63_0_2_i_2_n_7),
        .I1(j[1]),
        .I2(ID_reg_r5_0_63_0_2_i_7_n_0),
        .O(p_1_in[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_50
       (.I0(temp0[2]),
        .I1(sorting_state3[2]),
        .I2(temp0[3]),
        .I3(sorting_state3[3]),
        .O(ID_reg_r5_0_63_0_2_i_50_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ID_reg_r5_0_63_0_2_i_51
       (.I0(temp0[0]),
        .I1(sorting_state3[0]),
        .I2(temp0[1]),
        .I3(sorting_state3[1]),
        .O(ID_reg_r5_0_63_0_2_i_51_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    ID_reg_r5_0_63_0_2_i_6
       (.I0(j[0]),
        .I1(ID_reg_r5_0_63_0_2_i_7_n_0),
        .O(p_1_in[0]));
  LUT4 #(
    .INIT(16'hAAA8)) 
    ID_reg_r5_0_63_0_2_i_7
       (.I0(ID_reg_r5_0_63_0_2_i_8_n_0),
        .I1(ID_reg_r5_0_63_0_2_i_9_n_0),
        .I2(ID_reg_r5_0_63_0_2_i_10_n_0),
        .I3(ID_reg_r5_0_63_0_2_i_11_n_0),
        .O(ID_reg_r5_0_63_0_2_i_7_n_0));
  CARRY4 ID_reg_r5_0_63_0_2_i_8
       (.CI(ID_reg_r5_0_63_0_2_i_12_n_0),
        .CO({ID_reg_r5_0_63_0_2_i_8_n_0,ID_reg_r5_0_63_0_2_i_8_n_1,ID_reg_r5_0_63_0_2_i_8_n_2,ID_reg_r5_0_63_0_2_i_8_n_3}),
        .CYINIT(1'b0),
        .DI({ID_reg_r5_0_63_0_2_i_13_n_0,ID_reg_r5_0_63_0_2_i_14_n_0,ID_reg_r5_0_63_0_2_i_15_n_0,ID_reg_r5_0_63_0_2_i_16_n_0}),
        .O(NLW_ID_reg_r5_0_63_0_2_i_8_O_UNCONNECTED[3:0]),
        .S({ID_reg_r5_0_63_0_2_i_17_n_0,ID_reg_r5_0_63_0_2_i_18_n_0,ID_reg_r5_0_63_0_2_i_19_n_0,ID_reg_r5_0_63_0_2_i_20_n_0}));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    ID_reg_r5_0_63_0_2_i_9
       (.I0(temp0[14]),
        .I1(temp0[13]),
        .I2(temp0[16]),
        .I3(temp0[15]),
        .I4(ID_reg_r5_0_63_0_2_i_21_n_0),
        .O(ID_reg_r5_0_63_0_2_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1778 ID_reg_r5_0_63_3_5
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r5_0_63_3_5_n_0),
        .DOB(ID_reg_r5_0_63_3_5_n_1),
        .DOC(ID_reg_r5_0_63_3_5_n_2),
        .DOD(NLW_ID_reg_r5_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1779 ID_reg_r5_0_63_6_8
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r5_0_63_6_8_n_0),
        .DOB(ID_reg_r5_0_63_6_8_n_1),
        .DOC(ID_reg_r5_0_63_6_8_n_2),
        .DOD(NLW_ID_reg_r5_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1780 ID_reg_r5_128_191_0_2
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r5_128_191_0_2_n_0),
        .DOB(ID_reg_r5_128_191_0_2_n_1),
        .DOC(ID_reg_r5_128_191_0_2_n_2),
        .DOD(NLW_ID_reg_r5_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1781 ID_reg_r5_128_191_3_5
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r5_128_191_3_5_n_0),
        .DOB(ID_reg_r5_128_191_3_5_n_1),
        .DOC(ID_reg_r5_128_191_3_5_n_2),
        .DOD(NLW_ID_reg_r5_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1782 ID_reg_r5_128_191_6_8
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r5_128_191_6_8_n_0),
        .DOB(ID_reg_r5_128_191_6_8_n_1),
        .DOC(ID_reg_r5_128_191_6_8_n_2),
        .DOD(NLW_ID_reg_r5_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1783 ID_reg_r5_192_255_0_2
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r5_192_255_0_2_n_0),
        .DOB(ID_reg_r5_192_255_0_2_n_1),
        .DOC(ID_reg_r5_192_255_0_2_n_2),
        .DOD(NLW_ID_reg_r5_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1784 ID_reg_r5_192_255_3_5
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r5_192_255_3_5_n_0),
        .DOB(ID_reg_r5_192_255_3_5_n_1),
        .DOC(ID_reg_r5_192_255_3_5_n_2),
        .DOD(NLW_ID_reg_r5_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1785 ID_reg_r5_192_255_6_8
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r5_192_255_6_8_n_0),
        .DOB(ID_reg_r5_192_255_6_8_n_1),
        .DOC(ID_reg_r5_192_255_6_8_n_2),
        .DOD(NLW_ID_reg_r5_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1786 ID_reg_r5_64_127_0_2
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r5_64_127_0_2_n_0),
        .DOB(ID_reg_r5_64_127_0_2_n_1),
        .DOC(ID_reg_r5_64_127_0_2_n_2),
        .DOD(NLW_ID_reg_r5_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1787 ID_reg_r5_64_127_3_5
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r5_64_127_3_5_n_0),
        .DOB(ID_reg_r5_64_127_3_5_n_1),
        .DOC(ID_reg_r5_64_127_3_5_n_2),
        .DOD(NLW_ID_reg_r5_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1788 ID_reg_r5_64_127_6_8
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r5_64_127_6_8_n_0),
        .DOB(ID_reg_r5_64_127_6_8_n_1),
        .DOC(ID_reg_r5_64_127_6_8_n_2),
        .DOD(NLW_ID_reg_r5_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1789 ID_reg_r6_0_63_0_2
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r6_0_63_0_2_n_0),
        .DOB(ID_reg_r6_0_63_0_2_n_1),
        .DOC(ID_reg_r6_0_63_0_2_n_2),
        .DOD(NLW_ID_reg_r6_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1790 ID_reg_r6_0_63_3_5
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r6_0_63_3_5_n_0),
        .DOB(ID_reg_r6_0_63_3_5_n_1),
        .DOC(ID_reg_r6_0_63_3_5_n_2),
        .DOD(NLW_ID_reg_r6_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1791 ID_reg_r6_0_63_6_8
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r6_0_63_6_8_n_0),
        .DOB(ID_reg_r6_0_63_6_8_n_1),
        .DOC(ID_reg_r6_0_63_6_8_n_2),
        .DOD(NLW_ID_reg_r6_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1792 ID_reg_r6_128_191_0_2
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r6_128_191_0_2_n_0),
        .DOB(ID_reg_r6_128_191_0_2_n_1),
        .DOC(ID_reg_r6_128_191_0_2_n_2),
        .DOD(NLW_ID_reg_r6_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1793 ID_reg_r6_128_191_3_5
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r6_128_191_3_5_n_0),
        .DOB(ID_reg_r6_128_191_3_5_n_1),
        .DOC(ID_reg_r6_128_191_3_5_n_2),
        .DOD(NLW_ID_reg_r6_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1794 ID_reg_r6_128_191_6_8
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r6_128_191_6_8_n_0),
        .DOB(ID_reg_r6_128_191_6_8_n_1),
        .DOC(ID_reg_r6_128_191_6_8_n_2),
        .DOD(NLW_ID_reg_r6_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1795 ID_reg_r6_192_255_0_2
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r6_192_255_0_2_n_0),
        .DOB(ID_reg_r6_192_255_0_2_n_1),
        .DOC(ID_reg_r6_192_255_0_2_n_2),
        .DOD(NLW_ID_reg_r6_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1796 ID_reg_r6_192_255_3_5
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r6_192_255_3_5_n_0),
        .DOB(ID_reg_r6_192_255_3_5_n_1),
        .DOC(ID_reg_r6_192_255_3_5_n_2),
        .DOD(NLW_ID_reg_r6_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1797 ID_reg_r6_192_255_6_8
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r6_192_255_6_8_n_0),
        .DOB(ID_reg_r6_192_255_6_8_n_1),
        .DOC(ID_reg_r6_192_255_6_8_n_2),
        .DOD(NLW_ID_reg_r6_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1798 ID_reg_r6_64_127_0_2
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[0]),
        .DIB(ID[1]),
        .DIC(ID[2]),
        .DID(1'b0),
        .DOA(ID_reg_r6_64_127_0_2_n_0),
        .DOB(ID_reg_r6_64_127_0_2_n_1),
        .DOC(ID_reg_r6_64_127_0_2_n_2),
        .DOD(NLW_ID_reg_r6_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1799 ID_reg_r6_64_127_3_5
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[3]),
        .DIB(ID[4]),
        .DIC(ID[5]),
        .DID(1'b0),
        .DOA(ID_reg_r6_64_127_3_5_n_0),
        .DOB(ID_reg_r6_64_127_3_5_n_1),
        .DOC(ID_reg_r6_64_127_3_5_n_2),
        .DOD(NLW_ID_reg_r6_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1800 ID_reg_r6_64_127_6_8
       (.ADDRA(j_reg_rep__2[5:0]),
        .ADDRB(j_reg_rep__2[5:0]),
        .ADDRC(j_reg_rep__2[5:0]),
        .ADDRD(p_6_in[5:0]),
        .DIA(ID[6]),
        .DIB(ID[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(ID_reg_r6_64_127_6_8_n_0),
        .DOB(ID_reg_r6_64_127_6_8_n_1),
        .DOC(ID_reg_r6_64_127_6_8_n_2),
        .DOD(NLW_ID_reg_r6_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(ID_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1801 Link_reg_r1_0_63_0_2
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_0_63_0_2_n_0),
        .DOB(Link_reg_r1_0_63_0_2_n_1),
        .DOC(Link_reg_r1_0_63_0_2_n_2),
        .DOD(NLW_Link_reg_r1_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    Link_reg_r1_0_63_0_2_i_1
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(Link_reg_r1_0_63_0_2_i_11_n_0),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I4(p_5_out[0]),
        .O(Link_reg_r1_0_63_0_2_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFC00CEAAEEAAE)) 
    Link_reg_r1_0_63_0_2_i_10
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(j[0]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I5(\counter_reg_n_0_[0] ),
        .O(p_3_in[0]));
  LUT3 #(
    .INIT(8'hAC)) 
    Link_reg_r1_0_63_0_2_i_11
       (.I0(Link_reg_r1_0_63_0_2_i_25_n_0),
        .I1(temp2[0]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_0_2_i_11_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_0_2_i_12
       (.I0(ID_reg_r4_192_255_0_2_n_0),
        .I1(ID_reg_r4_128_191_0_2_n_0),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_0_2_n_0),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_0_2_n_0),
        .O(p_5_out[0]));
  LUT3 #(
    .INIT(8'hAC)) 
    Link_reg_r1_0_63_0_2_i_13
       (.I0(Link_reg_r1_0_63_0_2_i_26_n_0),
        .I1(temp2[1]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_0_2_i_13_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_0_2_i_14
       (.I0(ID_reg_r4_192_255_0_2_n_1),
        .I1(ID_reg_r4_128_191_0_2_n_1),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_0_2_n_1),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_0_2_n_1),
        .O(p_5_out[1]));
  LUT3 #(
    .INIT(8'hAC)) 
    Link_reg_r1_0_63_0_2_i_15
       (.I0(Link_reg_r1_0_63_0_2_i_27_n_0),
        .I1(temp2[2]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_0_2_i_15_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_0_2_i_16
       (.I0(ID_reg_r4_192_255_0_2_n_2),
        .I1(ID_reg_r4_128_191_0_2_n_2),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_0_2_n_2),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_0_2_n_2),
        .O(p_5_out[2]));
  LUT2 #(
    .INIT(4'h8)) 
    Link_reg_r1_0_63_0_2_i_17
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(Link_reg_r1_0_63_0_2_i_28_n_0),
        .O(Link));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    Link_reg_r1_0_63_0_2_i_18
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(j[6]),
        .I2(P_reg_r3_0_63_0_2_i_1_n_6),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I5(\counter_reg_n_0_[6] ),
        .O(Link_reg_r1_0_63_0_2_i_18_n_0));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    Link_reg_r1_0_63_0_2_i_19
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(j[7]),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I5(\counter_reg_n_0_[7] ),
        .O(Link_reg_r1_0_63_0_2_i_19_n_0));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    Link_reg_r1_0_63_0_2_i_2
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(Link_reg_r1_0_63_0_2_i_13_n_0),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I4(p_5_out[1]),
        .O(Link_reg_r1_0_63_0_2_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    Link_reg_r1_0_63_0_2_i_20
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(j[5]),
        .I2(P_reg_r3_0_63_0_2_i_1_n_7),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I5(\counter_reg_n_0_[5] ),
        .O(Link_reg_r1_0_63_0_2_i_20_n_0));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    Link_reg_r1_0_63_0_2_i_21
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(j[4]),
        .I2(P_reg_r3_0_63_0_2_i_2_n_4),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I5(\counter_reg_n_0_[4] ),
        .O(Link_reg_r1_0_63_0_2_i_21_n_0));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    Link_reg_r1_0_63_0_2_i_22
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(j[3]),
        .I2(P_reg_r3_0_63_0_2_i_2_n_5),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I5(\counter_reg_n_0_[3] ),
        .O(Link_reg_r1_0_63_0_2_i_22_n_0));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    Link_reg_r1_0_63_0_2_i_23
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(j[2]),
        .I2(P_reg_r3_0_63_0_2_i_2_n_6),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I5(\counter_reg_n_0_[2] ),
        .O(Link_reg_r1_0_63_0_2_i_23_n_0));
  LUT6 #(
    .INIT(64'hFFFF88A088A088A0)) 
    Link_reg_r1_0_63_0_2_i_24
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(j[1]),
        .I2(P_reg_r3_0_63_0_2_i_2_n_7),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I5(\counter_reg_n_0_[1] ),
        .O(Link_reg_r1_0_63_0_2_i_24_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_0_2_i_25
       (.I0(Link_reg_r3_192_255_0_2_n_0),
        .I1(Link_reg_r3_128_191_0_2_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_0_2_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_0_2_n_0),
        .O(Link_reg_r1_0_63_0_2_i_25_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_0_2_i_26
       (.I0(Link_reg_r3_192_255_0_2_n_1),
        .I1(Link_reg_r3_128_191_0_2_n_1),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_0_2_n_1),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_0_2_n_1),
        .O(Link_reg_r1_0_63_0_2_i_26_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_0_2_i_27
       (.I0(Link_reg_r3_192_255_0_2_n_2),
        .I1(Link_reg_r3_128_191_0_2_n_2),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_0_2_n_2),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_0_2_n_2),
        .O(Link_reg_r1_0_63_0_2_i_27_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFABBAAAAA)) 
    Link_reg_r1_0_63_0_2_i_28
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I1(\sorting_state_reg_n_0_[2] ),
        .I2(\sorting_state_reg_n_0_[0] ),
        .I3(\sorting_state_reg_n_0_[1] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .O(Link_reg_r1_0_63_0_2_i_28_n_0));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    Link_reg_r1_0_63_0_2_i_3
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(Link_reg_r1_0_63_0_2_i_15_n_0),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I4(p_5_out[2]),
        .O(Link_reg_r1_0_63_0_2_i_3_n_0));
  LUT6 #(
    .INIT(64'h00000000000A002A)) 
    Link_reg_r1_0_63_0_2_i_4
       (.I0(Link),
        .I1(P_reg_r6_0_63_0_2_i_1_n_6),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(Link_reg_r1_0_63_0_2_i_18_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_5),
        .I5(Link_reg_r1_0_63_0_2_i_19_n_0),
        .O(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT3 #(
    .INIT(8'hF8)) 
    Link_reg_r1_0_63_0_2_i_5
       (.I0(P_reg_r6_0_63_0_2_i_1_n_7),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I2(Link_reg_r1_0_63_0_2_i_20_n_0),
        .O(p_3_in[5]));
  LUT3 #(
    .INIT(8'hF8)) 
    Link_reg_r1_0_63_0_2_i_6
       (.I0(P_reg_r6_0_63_0_2_i_2_n_4),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I2(Link_reg_r1_0_63_0_2_i_21_n_0),
        .O(p_3_in[4]));
  LUT3 #(
    .INIT(8'hF8)) 
    Link_reg_r1_0_63_0_2_i_7
       (.I0(P_reg_r6_0_63_0_2_i_2_n_5),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I2(Link_reg_r1_0_63_0_2_i_22_n_0),
        .O(p_3_in[3]));
  LUT3 #(
    .INIT(8'hF8)) 
    Link_reg_r1_0_63_0_2_i_8
       (.I0(P_reg_r6_0_63_0_2_i_2_n_6),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I2(Link_reg_r1_0_63_0_2_i_23_n_0),
        .O(p_3_in[2]));
  LUT3 #(
    .INIT(8'hF8)) 
    Link_reg_r1_0_63_0_2_i_9
       (.I0(P_reg_r6_0_63_0_2_i_2_n_7),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I2(Link_reg_r1_0_63_0_2_i_24_n_0),
        .O(p_3_in[1]));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1802 Link_reg_r1_0_63_12_14
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_0_63_12_14_n_0),
        .DOB(Link_reg_r1_0_63_12_14_n_1),
        .DOC(Link_reg_r1_0_63_12_14_n_2),
        .DOD(NLW_Link_reg_r1_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_12_14_i_1
       (.I0(Link_reg_r1_0_63_9_11_i_4_n_0),
        .I1(Link_reg_r1_0_63_12_14_i_4_n_0),
        .I2(temp2[12]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_6_n_0),
        .O(Link_reg_r1_0_63_12_14_i_1_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_12_14_i_2
       (.I0(Link_reg_r1_0_63_9_11_i_7_n_0),
        .I1(Link_reg_r1_0_63_12_14_i_5_n_0),
        .I2(temp2[13]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_9_n_0),
        .O(Link_reg_r1_0_63_12_14_i_2_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_12_14_i_3
       (.I0(Link_reg_r1_0_63_9_11_i_10_n_0),
        .I1(Link_reg_r1_0_63_12_14_i_6_n_0),
        .I2(temp2[14]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_12_n_0),
        .O(Link_reg_r1_0_63_12_14_i_3_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_12_14_i_4
       (.I0(Link_reg_r3_192_255_12_14_n_0),
        .I1(Link_reg_r3_128_191_12_14_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_12_14_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_12_14_n_0),
        .O(Link_reg_r1_0_63_12_14_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_12_14_i_5
       (.I0(Link_reg_r3_192_255_12_14_n_1),
        .I1(Link_reg_r3_128_191_12_14_n_1),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_12_14_n_1),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_12_14_n_1),
        .O(Link_reg_r1_0_63_12_14_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_12_14_i_6
       (.I0(Link_reg_r3_192_255_12_14_n_2),
        .I1(Link_reg_r3_128_191_12_14_n_2),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_12_14_n_2),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_12_14_n_2),
        .O(Link_reg_r1_0_63_12_14_i_6_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1803 Link_reg_r1_0_63_15_17
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_0_63_15_17_n_0),
        .DOB(Link_reg_r1_0_63_15_17_n_1),
        .DOC(Link_reg_r1_0_63_15_17_n_2),
        .DOD(NLW_Link_reg_r1_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_15_17_i_1
       (.I0(Link_reg_r1_0_63_9_11_i_4_n_0),
        .I1(Link_reg_r1_0_63_15_17_i_4_n_0),
        .I2(temp2[15]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_6_n_0),
        .O(Link_reg_r1_0_63_15_17_i_1_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_15_17_i_2
       (.I0(Link_reg_r1_0_63_9_11_i_7_n_0),
        .I1(Link_reg_r1_0_63_15_17_i_5_n_0),
        .I2(temp2[16]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_9_n_0),
        .O(Link_reg_r1_0_63_15_17_i_2_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_15_17_i_3
       (.I0(Link_reg_r1_0_63_9_11_i_10_n_0),
        .I1(Link_reg_r1_0_63_15_17_i_6_n_0),
        .I2(temp2[17]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_12_n_0),
        .O(Link_reg_r1_0_63_15_17_i_3_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_15_17_i_4
       (.I0(Link_reg_r3_192_255_15_17_n_0),
        .I1(Link_reg_r3_128_191_15_17_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_15_17_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_15_17_n_0),
        .O(Link_reg_r1_0_63_15_17_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_15_17_i_5
       (.I0(Link_reg_r3_192_255_15_17_n_1),
        .I1(Link_reg_r3_128_191_15_17_n_1),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_15_17_n_1),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_15_17_n_1),
        .O(Link_reg_r1_0_63_15_17_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_15_17_i_6
       (.I0(Link_reg_r3_192_255_15_17_n_2),
        .I1(Link_reg_r3_128_191_15_17_n_2),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_15_17_n_2),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_15_17_n_2),
        .O(Link_reg_r1_0_63_15_17_i_6_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1804 Link_reg_r1_0_63_18_20
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_0_63_18_20_n_0),
        .DOB(Link_reg_r1_0_63_18_20_n_1),
        .DOC(Link_reg_r1_0_63_18_20_n_2),
        .DOD(NLW_Link_reg_r1_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_18_20_i_1
       (.I0(Link_reg_r1_0_63_9_11_i_4_n_0),
        .I1(Link_reg_r1_0_63_18_20_i_4_n_0),
        .I2(temp2[18]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_6_n_0),
        .O(Link_reg_r1_0_63_18_20_i_1_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_18_20_i_2
       (.I0(Link_reg_r1_0_63_9_11_i_7_n_0),
        .I1(Link_reg_r1_0_63_18_20_i_5_n_0),
        .I2(temp2[19]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_9_n_0),
        .O(Link_reg_r1_0_63_18_20_i_2_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_18_20_i_3
       (.I0(Link_reg_r1_0_63_9_11_i_10_n_0),
        .I1(Link_reg_r1_0_63_18_20_i_6_n_0),
        .I2(temp2[20]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_12_n_0),
        .O(Link_reg_r1_0_63_18_20_i_3_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_18_20_i_4
       (.I0(Link_reg_r3_192_255_18_20_n_0),
        .I1(Link_reg_r3_128_191_18_20_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_18_20_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_18_20_n_0),
        .O(Link_reg_r1_0_63_18_20_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_18_20_i_5
       (.I0(Link_reg_r3_192_255_18_20_n_1),
        .I1(Link_reg_r3_128_191_18_20_n_1),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_18_20_n_1),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_18_20_n_1),
        .O(Link_reg_r1_0_63_18_20_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_18_20_i_6
       (.I0(Link_reg_r3_192_255_18_20_n_2),
        .I1(Link_reg_r3_128_191_18_20_n_2),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_18_20_n_2),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_18_20_n_2),
        .O(Link_reg_r1_0_63_18_20_i_6_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1805 Link_reg_r1_0_63_21_23
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_0_63_21_23_n_0),
        .DOB(Link_reg_r1_0_63_21_23_n_1),
        .DOC(Link_reg_r1_0_63_21_23_n_2),
        .DOD(NLW_Link_reg_r1_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_21_23_i_1
       (.I0(Link_reg_r1_0_63_9_11_i_4_n_0),
        .I1(Link_reg_r1_0_63_21_23_i_4_n_0),
        .I2(temp2[21]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_6_n_0),
        .O(Link_reg_r1_0_63_21_23_i_1_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_21_23_i_2
       (.I0(Link_reg_r1_0_63_9_11_i_7_n_0),
        .I1(Link_reg_r1_0_63_21_23_i_5_n_0),
        .I2(temp2[22]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_9_n_0),
        .O(Link_reg_r1_0_63_21_23_i_2_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_21_23_i_3
       (.I0(Link_reg_r1_0_63_9_11_i_10_n_0),
        .I1(Link_reg_r1_0_63_21_23_i_6_n_0),
        .I2(temp2[23]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_12_n_0),
        .O(Link_reg_r1_0_63_21_23_i_3_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_21_23_i_4
       (.I0(Link_reg_r3_192_255_21_23_n_0),
        .I1(Link_reg_r3_128_191_21_23_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_21_23_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_21_23_n_0),
        .O(Link_reg_r1_0_63_21_23_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_21_23_i_5
       (.I0(Link_reg_r3_192_255_21_23_n_1),
        .I1(Link_reg_r3_128_191_21_23_n_1),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_21_23_n_1),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_21_23_n_1),
        .O(Link_reg_r1_0_63_21_23_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_21_23_i_6
       (.I0(Link_reg_r3_192_255_21_23_n_2),
        .I1(Link_reg_r3_128_191_21_23_n_2),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_21_23_n_2),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_21_23_n_2),
        .O(Link_reg_r1_0_63_21_23_i_6_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1806 Link_reg_r1_0_63_24_26
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_0_63_24_26_n_0),
        .DOB(Link_reg_r1_0_63_24_26_n_1),
        .DOC(Link_reg_r1_0_63_24_26_n_2),
        .DOD(NLW_Link_reg_r1_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_24_26_i_1
       (.I0(Link_reg_r1_0_63_9_11_i_4_n_0),
        .I1(Link_reg_r1_0_63_24_26_i_4_n_0),
        .I2(temp2[24]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_6_n_0),
        .O(Link_reg_r1_0_63_24_26_i_1_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_24_26_i_2
       (.I0(Link_reg_r1_0_63_9_11_i_7_n_0),
        .I1(Link_reg_r1_0_63_24_26_i_5_n_0),
        .I2(temp2[25]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_9_n_0),
        .O(Link_reg_r1_0_63_24_26_i_2_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_24_26_i_3
       (.I0(Link_reg_r1_0_63_9_11_i_10_n_0),
        .I1(Link_reg_r1_0_63_24_26_i_6_n_0),
        .I2(temp2[26]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_12_n_0),
        .O(Link_reg_r1_0_63_24_26_i_3_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_24_26_i_4
       (.I0(Link_reg_r3_192_255_24_26_n_0),
        .I1(Link_reg_r3_128_191_24_26_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_24_26_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_24_26_n_0),
        .O(Link_reg_r1_0_63_24_26_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_24_26_i_5
       (.I0(Link_reg_r3_192_255_24_26_n_1),
        .I1(Link_reg_r3_128_191_24_26_n_1),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_24_26_n_1),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_24_26_n_1),
        .O(Link_reg_r1_0_63_24_26_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_24_26_i_6
       (.I0(Link_reg_r3_192_255_24_26_n_2),
        .I1(Link_reg_r3_128_191_24_26_n_2),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_24_26_n_2),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_24_26_n_2),
        .O(Link_reg_r1_0_63_24_26_i_6_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1807 Link_reg_r1_0_63_27_29
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_0_63_27_29_n_0),
        .DOB(Link_reg_r1_0_63_27_29_n_1),
        .DOC(Link_reg_r1_0_63_27_29_n_2),
        .DOD(NLW_Link_reg_r1_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_27_29_i_1
       (.I0(Link_reg_r1_0_63_9_11_i_4_n_0),
        .I1(Link_reg_r1_0_63_27_29_i_4_n_0),
        .I2(temp2[27]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_6_n_0),
        .O(Link_reg_r1_0_63_27_29_i_1_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_27_29_i_2
       (.I0(Link_reg_r1_0_63_9_11_i_7_n_0),
        .I1(Link_reg_r1_0_63_27_29_i_5_n_0),
        .I2(temp2[28]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_9_n_0),
        .O(Link_reg_r1_0_63_27_29_i_2_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_27_29_i_3
       (.I0(Link_reg_r1_0_63_9_11_i_10_n_0),
        .I1(Link_reg_r1_0_63_27_29_i_6_n_0),
        .I2(temp2[29]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_12_n_0),
        .O(Link_reg_r1_0_63_27_29_i_3_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_27_29_i_4
       (.I0(Link_reg_r3_192_255_27_29_n_0),
        .I1(Link_reg_r3_128_191_27_29_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_27_29_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_27_29_n_0),
        .O(Link_reg_r1_0_63_27_29_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_27_29_i_5
       (.I0(Link_reg_r3_192_255_27_29_n_1),
        .I1(Link_reg_r3_128_191_27_29_n_1),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_27_29_n_1),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_27_29_n_1),
        .O(Link_reg_r1_0_63_27_29_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_27_29_i_6
       (.I0(Link_reg_r3_192_255_27_29_n_2),
        .I1(Link_reg_r3_128_191_27_29_n_2),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_27_29_n_2),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_27_29_n_2),
        .O(Link_reg_r1_0_63_27_29_i_6_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1808 Link_reg_r1_0_63_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r1_0_63_30_30_n_0),
        .DPRA0(position_reg_rep__2[0]),
        .DPRA1(position_reg_rep__2[1]),
        .DPRA2(position_reg_rep__2[2]),
        .DPRA3(position_reg_rep__2[3]),
        .DPRA4(position_reg_rep__2[4]),
        .DPRA5(position_reg_rep__2[5]),
        .SPO(NLW_Link_reg_r1_0_63_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT6 #(
    .INIT(64'hBBAF88A088A088A0)) 
    Link_reg_r1_0_63_30_30_i_1
       (.I0(Link_reg_r1_0_63_30_30_i_2_n_0),
        .I1(Link_reg_r1_0_63_30_30_i_3_n_0),
        .I2(temp2[30]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_30_30_i_4_n_0),
        .I5(p_5_out[31]),
        .O(Link_reg_r1_0_63_30_30_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFE0)) 
    Link_reg_r1_0_63_30_30_i_2
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I2(p_5_out[31]),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_30_30_i_2_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_30_30_i_3
       (.I0(Link_reg_r3_192_255_30_30_n_0),
        .I1(Link_reg_r3_128_191_30_30_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_30_30_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_30_30_n_0),
        .O(Link_reg_r1_0_63_30_30_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    Link_reg_r1_0_63_30_30_i_4
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .O(Link_reg_r1_0_63_30_30_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_30_30_i_5
       (.I0(ID_reg_r4_192_255_31_31_n_0),
        .I1(ID_reg_r4_128_191_31_31_n_0),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_31_31_n_0),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_31_31_n_0),
        .O(p_5_out[31]));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1809 Link_reg_r1_0_63_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r1_0_63_31_31_n_0),
        .DPRA0(position_reg_rep__2[0]),
        .DPRA1(position_reg_rep__2[1]),
        .DPRA2(position_reg_rep__2[2]),
        .DPRA3(position_reg_rep__2[3]),
        .DPRA4(position_reg_rep__2[4]),
        .DPRA5(position_reg_rep__2[5]),
        .SPO(NLW_Link_reg_r1_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT6 #(
    .INIT(64'hBBAF88A088A088A0)) 
    Link_reg_r1_0_63_31_31_i_1
       (.I0(Link_reg_r1_0_63_30_30_i_2_n_0),
        .I1(Link_reg_r1_0_63_31_31_i_2_n_0),
        .I2(temp2[31]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_30_30_i_4_n_0),
        .I5(p_5_out[31]),
        .O(Link_reg_r1_0_63_31_31_i_1_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_31_31_i_2
       (.I0(Link_reg_r3_192_255_31_31_n_0),
        .I1(Link_reg_r3_128_191_31_31_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_31_31_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_31_31_n_0),
        .O(Link_reg_r1_0_63_31_31_i_2_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1810 Link_reg_r1_0_63_3_5
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_0_63_3_5_n_0),
        .DOB(Link_reg_r1_0_63_3_5_n_1),
        .DOC(Link_reg_r1_0_63_3_5_n_2),
        .DOD(NLW_Link_reg_r1_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    Link_reg_r1_0_63_3_5_i_1
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(Link_reg_r1_0_63_3_5_i_4_n_0),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I4(p_5_out[3]),
        .O(Link_reg_r1_0_63_3_5_i_1_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_3_5_i_10
       (.I0(Link_reg_r3_192_255_3_5_n_0),
        .I1(Link_reg_r3_128_191_3_5_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_3_5_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_3_5_n_0),
        .O(Link_reg_r1_0_63_3_5_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_3_5_i_11
       (.I0(Link_reg_r3_192_255_3_5_n_1),
        .I1(Link_reg_r3_128_191_3_5_n_1),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_3_5_n_1),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_3_5_n_1),
        .O(Link_reg_r1_0_63_3_5_i_11_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_3_5_i_12
       (.I0(Link_reg_r3_192_255_3_5_n_2),
        .I1(Link_reg_r3_128_191_3_5_n_2),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_3_5_n_2),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_3_5_n_2),
        .O(Link_reg_r1_0_63_3_5_i_12_n_0));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    Link_reg_r1_0_63_3_5_i_2
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(Link_reg_r1_0_63_3_5_i_6_n_0),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I4(p_5_out[4]),
        .O(Link_reg_r1_0_63_3_5_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    Link_reg_r1_0_63_3_5_i_3
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(Link_reg_r1_0_63_3_5_i_8_n_0),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I4(p_5_out[5]),
        .O(Link_reg_r1_0_63_3_5_i_3_n_0));
  LUT3 #(
    .INIT(8'hAC)) 
    Link_reg_r1_0_63_3_5_i_4
       (.I0(Link_reg_r1_0_63_3_5_i_10_n_0),
        .I1(temp2[3]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_3_5_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_3_5_i_5
       (.I0(ID_reg_r4_192_255_3_5_n_0),
        .I1(ID_reg_r4_128_191_3_5_n_0),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_3_5_n_0),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_3_5_n_0),
        .O(p_5_out[3]));
  LUT3 #(
    .INIT(8'hAC)) 
    Link_reg_r1_0_63_3_5_i_6
       (.I0(Link_reg_r1_0_63_3_5_i_11_n_0),
        .I1(temp2[4]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_3_5_i_6_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_3_5_i_7
       (.I0(ID_reg_r4_192_255_3_5_n_1),
        .I1(ID_reg_r4_128_191_3_5_n_1),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_3_5_n_1),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_3_5_n_1),
        .O(p_5_out[4]));
  LUT3 #(
    .INIT(8'hAC)) 
    Link_reg_r1_0_63_3_5_i_8
       (.I0(Link_reg_r1_0_63_3_5_i_12_n_0),
        .I1(temp2[5]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_3_5_i_8_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_3_5_i_9
       (.I0(ID_reg_r4_192_255_3_5_n_2),
        .I1(ID_reg_r4_128_191_3_5_n_2),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_3_5_n_2),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_3_5_n_2),
        .O(p_5_out[5]));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1811 Link_reg_r1_0_63_6_8
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_0_63_6_8_n_0),
        .DOB(Link_reg_r1_0_63_6_8_n_1),
        .DOC(Link_reg_r1_0_63_6_8_n_2),
        .DOD(NLW_Link_reg_r1_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    Link_reg_r1_0_63_6_8_i_1
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(Link_reg_r1_0_63_6_8_i_4_n_0),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I4(p_5_out[6]),
        .O(Link_reg_r1_0_63_6_8_i_1_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_6_8_i_10
       (.I0(Link_reg_r3_192_255_6_8_n_0),
        .I1(Link_reg_r3_128_191_6_8_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_6_8_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_6_8_n_0),
        .O(Link_reg_r1_0_63_6_8_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_6_8_i_11
       (.I0(Link_reg_r3_192_255_6_8_n_1),
        .I1(Link_reg_r3_128_191_6_8_n_1),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_6_8_n_1),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_6_8_n_1),
        .O(Link_reg_r1_0_63_6_8_i_11_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_6_8_i_12
       (.I0(Link_reg_r3_192_255_6_8_n_2),
        .I1(Link_reg_r3_128_191_6_8_n_2),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_6_8_n_2),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_6_8_n_2),
        .O(Link_reg_r1_0_63_6_8_i_12_n_0));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    Link_reg_r1_0_63_6_8_i_2
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(Link_reg_r1_0_63_6_8_i_6_n_0),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I4(p_5_out[7]),
        .O(Link_reg_r1_0_63_6_8_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFF88888)) 
    Link_reg_r1_0_63_6_8_i_3
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(Link_reg_r1_0_63_6_8_i_8_n_0),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I4(p_5_out[8]),
        .O(Link_reg_r1_0_63_6_8_i_3_n_0));
  LUT3 #(
    .INIT(8'hAC)) 
    Link_reg_r1_0_63_6_8_i_4
       (.I0(Link_reg_r1_0_63_6_8_i_10_n_0),
        .I1(temp2[6]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_6_8_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_6_8_i_5
       (.I0(ID_reg_r4_192_255_6_8_n_0),
        .I1(ID_reg_r4_128_191_6_8_n_0),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_6_8_n_0),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_6_8_n_0),
        .O(p_5_out[6]));
  LUT3 #(
    .INIT(8'hAC)) 
    Link_reg_r1_0_63_6_8_i_6
       (.I0(Link_reg_r1_0_63_6_8_i_11_n_0),
        .I1(temp2[7]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_6_8_i_6_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_6_8_i_7
       (.I0(ID_reg_r4_192_255_6_8_n_1),
        .I1(ID_reg_r4_128_191_6_8_n_1),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_6_8_n_1),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_6_8_n_1),
        .O(p_5_out[7]));
  LUT3 #(
    .INIT(8'hAC)) 
    Link_reg_r1_0_63_6_8_i_8
       (.I0(Link_reg_r1_0_63_6_8_i_12_n_0),
        .I1(temp2[8]),
        .I2(\sorting_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_6_8_i_8_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_6_8_i_9
       (.I0(ID_reg_r4_192_255_6_8_n_2),
        .I1(ID_reg_r4_128_191_6_8_n_2),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_6_8_n_2),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_6_8_n_2),
        .O(p_5_out[8]));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1812 Link_reg_r1_0_63_9_11
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_0_63_9_11_n_0),
        .DOB(Link_reg_r1_0_63_9_11_n_1),
        .DOC(Link_reg_r1_0_63_9_11_n_2),
        .DOD(NLW_Link_reg_r1_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_9_11_i_1
       (.I0(Link_reg_r1_0_63_9_11_i_4_n_0),
        .I1(Link_reg_r1_0_63_9_11_i_5_n_0),
        .I2(temp2[9]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_6_n_0),
        .O(Link_reg_r1_0_63_9_11_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFE0)) 
    Link_reg_r1_0_63_9_11_i_10
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I2(p_5_out[29]),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_9_11_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_9_11_i_11
       (.I0(Link_reg_r3_192_255_9_11_n_2),
        .I1(Link_reg_r3_128_191_9_11_n_2),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_9_11_n_2),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_9_11_n_2),
        .O(Link_reg_r1_0_63_9_11_i_11_n_0));
  LUT3 #(
    .INIT(8'hE0)) 
    Link_reg_r1_0_63_9_11_i_12
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I2(p_5_out[29]),
        .O(Link_reg_r1_0_63_9_11_i_12_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_9_11_i_13
       (.I0(ID_reg_r4_192_255_27_29_n_0),
        .I1(ID_reg_r4_128_191_27_29_n_0),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_27_29_n_0),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_27_29_n_0),
        .O(p_5_out[27]));
  LUT6 #(
    .INIT(64'hACACACACACACACCC)) 
    Link_reg_r1_0_63_9_11_i_14
       (.I0(P_reg_r3_0_63_0_2_i_1_n_5),
        .I1(j[7]),
        .I2(ID_reg_r5_0_63_0_2_i_8_n_0),
        .I3(ID_reg_r5_0_63_0_2_i_9_n_0),
        .I4(ID_reg_r5_0_63_0_2_i_10_n_0),
        .I5(ID_reg_r5_0_63_0_2_i_11_n_0),
        .O(p_1_in[7]));
  LUT6 #(
    .INIT(64'hACACACACACACACCC)) 
    Link_reg_r1_0_63_9_11_i_15
       (.I0(P_reg_r3_0_63_0_2_i_1_n_6),
        .I1(j[6]),
        .I2(ID_reg_r5_0_63_0_2_i_8_n_0),
        .I3(ID_reg_r5_0_63_0_2_i_9_n_0),
        .I4(ID_reg_r5_0_63_0_2_i_10_n_0),
        .I5(ID_reg_r5_0_63_0_2_i_11_n_0),
        .O(p_1_in[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_9_11_i_16
       (.I0(ID_reg_r4_192_255_27_29_n_1),
        .I1(ID_reg_r4_128_191_27_29_n_1),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_27_29_n_1),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_27_29_n_1),
        .O(p_5_out[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_9_11_i_17
       (.I0(ID_reg_r4_192_255_27_29_n_2),
        .I1(ID_reg_r4_128_191_27_29_n_2),
        .I2(p_4_in[7]),
        .I3(ID_reg_r4_64_127_27_29_n_2),
        .I4(p_4_in[6]),
        .I5(ID_reg_r4_0_63_27_29_n_2),
        .O(p_5_out[29]));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_9_11_i_2
       (.I0(Link_reg_r1_0_63_9_11_i_7_n_0),
        .I1(Link_reg_r1_0_63_9_11_i_8_n_0),
        .I2(temp2[10]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_9_n_0),
        .O(Link_reg_r1_0_63_9_11_i_2_n_0));
  LUT5 #(
    .INIT(32'hBBAF88A0)) 
    Link_reg_r1_0_63_9_11_i_3
       (.I0(Link_reg_r1_0_63_9_11_i_10_n_0),
        .I1(Link_reg_r1_0_63_9_11_i_11_n_0),
        .I2(temp2[11]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(Link_reg_r1_0_63_9_11_i_12_n_0),
        .O(Link_reg_r1_0_63_9_11_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFE0)) 
    Link_reg_r1_0_63_9_11_i_4
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I2(p_5_out[27]),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_9_11_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_9_11_i_5
       (.I0(Link_reg_r3_192_255_9_11_n_0),
        .I1(Link_reg_r3_128_191_9_11_n_0),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_9_11_n_0),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_9_11_n_0),
        .O(Link_reg_r1_0_63_9_11_i_5_n_0));
  LUT3 #(
    .INIT(8'hE0)) 
    Link_reg_r1_0_63_9_11_i_6
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I2(p_5_out[27]),
        .O(Link_reg_r1_0_63_9_11_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFE0)) 
    Link_reg_r1_0_63_9_11_i_7
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I2(p_5_out[28]),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(Link_reg_r1_0_63_9_11_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    Link_reg_r1_0_63_9_11_i_8
       (.I0(Link_reg_r3_192_255_9_11_n_1),
        .I1(Link_reg_r3_128_191_9_11_n_1),
        .I2(p_1_in[7]),
        .I3(Link_reg_r3_64_127_9_11_n_1),
        .I4(p_1_in[6]),
        .I5(Link_reg_r3_0_63_9_11_n_1),
        .O(Link_reg_r1_0_63_9_11_i_8_n_0));
  LUT3 #(
    .INIT(8'hE0)) 
    Link_reg_r1_0_63_9_11_i_9
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I2(p_5_out[28]),
        .O(Link_reg_r1_0_63_9_11_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1813 Link_reg_r1_128_191_0_2
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_128_191_0_2_n_0),
        .DOB(Link_reg_r1_128_191_0_2_n_1),
        .DOC(Link_reg_r1_128_191_0_2_n_2),
        .DOD(NLW_Link_reg_r1_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  LUT6 #(
    .INIT(64'h1155100000000000)) 
    Link_reg_r1_128_191_0_2_i_1
       (.I0(Link_reg_r1_0_63_0_2_i_18_n_0),
        .I1(P_reg_r6_0_63_0_2_i_1_n_6),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I4(Link_reg_r1_0_63_0_2_i_19_n_0),
        .I5(Link),
        .O(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1814 Link_reg_r1_128_191_12_14
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_128_191_12_14_n_0),
        .DOB(Link_reg_r1_128_191_12_14_n_1),
        .DOC(Link_reg_r1_128_191_12_14_n_2),
        .DOD(NLW_Link_reg_r1_128_191_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1815 Link_reg_r1_128_191_15_17
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_128_191_15_17_n_0),
        .DOB(Link_reg_r1_128_191_15_17_n_1),
        .DOC(Link_reg_r1_128_191_15_17_n_2),
        .DOD(NLW_Link_reg_r1_128_191_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1816 Link_reg_r1_128_191_18_20
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_128_191_18_20_n_0),
        .DOB(Link_reg_r1_128_191_18_20_n_1),
        .DOC(Link_reg_r1_128_191_18_20_n_2),
        .DOD(NLW_Link_reg_r1_128_191_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1817 Link_reg_r1_128_191_21_23
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_128_191_21_23_n_0),
        .DOB(Link_reg_r1_128_191_21_23_n_1),
        .DOC(Link_reg_r1_128_191_21_23_n_2),
        .DOD(NLW_Link_reg_r1_128_191_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1818 Link_reg_r1_128_191_24_26
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_128_191_24_26_n_0),
        .DOB(Link_reg_r1_128_191_24_26_n_1),
        .DOC(Link_reg_r1_128_191_24_26_n_2),
        .DOD(NLW_Link_reg_r1_128_191_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1819 Link_reg_r1_128_191_27_29
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_128_191_27_29_n_0),
        .DOB(Link_reg_r1_128_191_27_29_n_1),
        .DOC(Link_reg_r1_128_191_27_29_n_2),
        .DOD(NLW_Link_reg_r1_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1820 Link_reg_r1_128_191_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r1_128_191_30_30_n_0),
        .DPRA0(position_reg_rep__2[0]),
        .DPRA1(position_reg_rep__2[1]),
        .DPRA2(position_reg_rep__2[2]),
        .DPRA3(position_reg_rep__2[3]),
        .DPRA4(position_reg_rep__2[4]),
        .DPRA5(position_reg_rep__2[5]),
        .SPO(NLW_Link_reg_r1_128_191_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1821 Link_reg_r1_128_191_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r1_128_191_31_31_n_0),
        .DPRA0(position_reg_rep__2[0]),
        .DPRA1(position_reg_rep__2[1]),
        .DPRA2(position_reg_rep__2[2]),
        .DPRA3(position_reg_rep__2[3]),
        .DPRA4(position_reg_rep__2[4]),
        .DPRA5(position_reg_rep__2[5]),
        .SPO(NLW_Link_reg_r1_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1822 Link_reg_r1_128_191_3_5
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_128_191_3_5_n_0),
        .DOB(Link_reg_r1_128_191_3_5_n_1),
        .DOC(Link_reg_r1_128_191_3_5_n_2),
        .DOD(NLW_Link_reg_r1_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1823 Link_reg_r1_128_191_6_8
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_128_191_6_8_n_0),
        .DOB(Link_reg_r1_128_191_6_8_n_1),
        .DOC(Link_reg_r1_128_191_6_8_n_2),
        .DOD(NLW_Link_reg_r1_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1824 Link_reg_r1_128_191_9_11
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_128_191_9_11_n_0),
        .DOB(Link_reg_r1_128_191_9_11_n_1),
        .DOC(Link_reg_r1_128_191_9_11_n_2),
        .DOD(NLW_Link_reg_r1_128_191_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1825 Link_reg_r1_192_255_0_2
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_192_255_0_2_n_0),
        .DOB(Link_reg_r1_192_255_0_2_n_1),
        .DOC(Link_reg_r1_192_255_0_2_n_2),
        .DOD(NLW_Link_reg_r1_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  LUT6 #(
    .INIT(64'hAA80AA80A0800000)) 
    Link_reg_r1_192_255_0_2_i_1
       (.I0(Link),
        .I1(P_reg_r6_0_63_0_2_i_1_n_6),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I3(Link_reg_r1_0_63_0_2_i_18_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_5),
        .I5(Link_reg_r1_0_63_0_2_i_19_n_0),
        .O(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1826 Link_reg_r1_192_255_12_14
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_192_255_12_14_n_0),
        .DOB(Link_reg_r1_192_255_12_14_n_1),
        .DOC(Link_reg_r1_192_255_12_14_n_2),
        .DOD(NLW_Link_reg_r1_192_255_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1827 Link_reg_r1_192_255_15_17
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_192_255_15_17_n_0),
        .DOB(Link_reg_r1_192_255_15_17_n_1),
        .DOC(Link_reg_r1_192_255_15_17_n_2),
        .DOD(NLW_Link_reg_r1_192_255_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1828 Link_reg_r1_192_255_18_20
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_192_255_18_20_n_0),
        .DOB(Link_reg_r1_192_255_18_20_n_1),
        .DOC(Link_reg_r1_192_255_18_20_n_2),
        .DOD(NLW_Link_reg_r1_192_255_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1829 Link_reg_r1_192_255_21_23
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_192_255_21_23_n_0),
        .DOB(Link_reg_r1_192_255_21_23_n_1),
        .DOC(Link_reg_r1_192_255_21_23_n_2),
        .DOD(NLW_Link_reg_r1_192_255_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1830 Link_reg_r1_192_255_24_26
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_192_255_24_26_n_0),
        .DOB(Link_reg_r1_192_255_24_26_n_1),
        .DOC(Link_reg_r1_192_255_24_26_n_2),
        .DOD(NLW_Link_reg_r1_192_255_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1831 Link_reg_r1_192_255_27_29
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_192_255_27_29_n_0),
        .DOB(Link_reg_r1_192_255_27_29_n_1),
        .DOC(Link_reg_r1_192_255_27_29_n_2),
        .DOD(NLW_Link_reg_r1_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1832 Link_reg_r1_192_255_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r1_192_255_30_30_n_0),
        .DPRA0(position_reg_rep__2[0]),
        .DPRA1(position_reg_rep__2[1]),
        .DPRA2(position_reg_rep__2[2]),
        .DPRA3(position_reg_rep__2[3]),
        .DPRA4(position_reg_rep__2[4]),
        .DPRA5(position_reg_rep__2[5]),
        .SPO(NLW_Link_reg_r1_192_255_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1833 Link_reg_r1_192_255_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r1_192_255_31_31_n_0),
        .DPRA0(position_reg_rep__2[0]),
        .DPRA1(position_reg_rep__2[1]),
        .DPRA2(position_reg_rep__2[2]),
        .DPRA3(position_reg_rep__2[3]),
        .DPRA4(position_reg_rep__2[4]),
        .DPRA5(position_reg_rep__2[5]),
        .SPO(NLW_Link_reg_r1_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1834 Link_reg_r1_192_255_3_5
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_192_255_3_5_n_0),
        .DOB(Link_reg_r1_192_255_3_5_n_1),
        .DOC(Link_reg_r1_192_255_3_5_n_2),
        .DOD(NLW_Link_reg_r1_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1835 Link_reg_r1_192_255_6_8
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_192_255_6_8_n_0),
        .DOB(Link_reg_r1_192_255_6_8_n_1),
        .DOC(Link_reg_r1_192_255_6_8_n_2),
        .DOD(NLW_Link_reg_r1_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1836 Link_reg_r1_192_255_9_11
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_192_255_9_11_n_0),
        .DOB(Link_reg_r1_192_255_9_11_n_1),
        .DOC(Link_reg_r1_192_255_9_11_n_2),
        .DOD(NLW_Link_reg_r1_192_255_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1837 Link_reg_r1_64_127_0_2
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_64_127_0_2_n_0),
        .DOB(Link_reg_r1_64_127_0_2_n_1),
        .DOC(Link_reg_r1_64_127_0_2_n_2),
        .DOD(NLW_Link_reg_r1_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  LUT6 #(
    .INIT(64'h1155100000000000)) 
    Link_reg_r1_64_127_0_2_i_1
       (.I0(Link_reg_r1_0_63_0_2_i_19_n_0),
        .I1(P_reg_r6_0_63_0_2_i_1_n_5),
        .I2(P_reg_r6_0_63_0_2_i_1_n_6),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I4(Link_reg_r1_0_63_0_2_i_18_n_0),
        .I5(Link),
        .O(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1838 Link_reg_r1_64_127_12_14
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_64_127_12_14_n_0),
        .DOB(Link_reg_r1_64_127_12_14_n_1),
        .DOC(Link_reg_r1_64_127_12_14_n_2),
        .DOD(NLW_Link_reg_r1_64_127_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1839 Link_reg_r1_64_127_15_17
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_64_127_15_17_n_0),
        .DOB(Link_reg_r1_64_127_15_17_n_1),
        .DOC(Link_reg_r1_64_127_15_17_n_2),
        .DOD(NLW_Link_reg_r1_64_127_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1840 Link_reg_r1_64_127_18_20
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_64_127_18_20_n_0),
        .DOB(Link_reg_r1_64_127_18_20_n_1),
        .DOC(Link_reg_r1_64_127_18_20_n_2),
        .DOD(NLW_Link_reg_r1_64_127_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1841 Link_reg_r1_64_127_21_23
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_64_127_21_23_n_0),
        .DOB(Link_reg_r1_64_127_21_23_n_1),
        .DOC(Link_reg_r1_64_127_21_23_n_2),
        .DOD(NLW_Link_reg_r1_64_127_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1842 Link_reg_r1_64_127_24_26
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_64_127_24_26_n_0),
        .DOB(Link_reg_r1_64_127_24_26_n_1),
        .DOC(Link_reg_r1_64_127_24_26_n_2),
        .DOD(NLW_Link_reg_r1_64_127_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1843 Link_reg_r1_64_127_27_29
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_64_127_27_29_n_0),
        .DOB(Link_reg_r1_64_127_27_29_n_1),
        .DOC(Link_reg_r1_64_127_27_29_n_2),
        .DOD(NLW_Link_reg_r1_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1844 Link_reg_r1_64_127_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r1_64_127_30_30_n_0),
        .DPRA0(position_reg_rep__2[0]),
        .DPRA1(position_reg_rep__2[1]),
        .DPRA2(position_reg_rep__2[2]),
        .DPRA3(position_reg_rep__2[3]),
        .DPRA4(position_reg_rep__2[4]),
        .DPRA5(position_reg_rep__2[5]),
        .SPO(NLW_Link_reg_r1_64_127_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1845 Link_reg_r1_64_127_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r1_64_127_31_31_n_0),
        .DPRA0(position_reg_rep__2[0]),
        .DPRA1(position_reg_rep__2[1]),
        .DPRA2(position_reg_rep__2[2]),
        .DPRA3(position_reg_rep__2[3]),
        .DPRA4(position_reg_rep__2[4]),
        .DPRA5(position_reg_rep__2[5]),
        .SPO(NLW_Link_reg_r1_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1846 Link_reg_r1_64_127_3_5
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_64_127_3_5_n_0),
        .DOB(Link_reg_r1_64_127_3_5_n_1),
        .DOC(Link_reg_r1_64_127_3_5_n_2),
        .DOD(NLW_Link_reg_r1_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1847 Link_reg_r1_64_127_6_8
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_64_127_6_8_n_0),
        .DOB(Link_reg_r1_64_127_6_8_n_1),
        .DOC(Link_reg_r1_64_127_6_8_n_2),
        .DOD(NLW_Link_reg_r1_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1848 Link_reg_r1_64_127_9_11
       (.ADDRA(position_reg_rep__2[5:0]),
        .ADDRB(position_reg_rep__2[5:0]),
        .ADDRC(position_reg_rep__2[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r1_64_127_9_11_n_0),
        .DOB(Link_reg_r1_64_127_9_11_n_1),
        .DOC(Link_reg_r1_64_127_9_11_n_2),
        .DOD(NLW_Link_reg_r1_64_127_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1849 Link_reg_r2_0_63_0_2
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_0_63_0_2_n_0),
        .DOB(Link_reg_r2_0_63_0_2_n_1),
        .DOC(Link_reg_r2_0_63_0_2_n_2),
        .DOD(NLW_Link_reg_r2_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1850 Link_reg_r2_0_63_12_14
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_0_63_12_14_n_0),
        .DOB(Link_reg_r2_0_63_12_14_n_1),
        .DOC(Link_reg_r2_0_63_12_14_n_2),
        .DOD(NLW_Link_reg_r2_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1851 Link_reg_r2_0_63_15_17
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_0_63_15_17_n_0),
        .DOB(Link_reg_r2_0_63_15_17_n_1),
        .DOC(Link_reg_r2_0_63_15_17_n_2),
        .DOD(NLW_Link_reg_r2_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1852 Link_reg_r2_0_63_18_20
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_0_63_18_20_n_0),
        .DOB(Link_reg_r2_0_63_18_20_n_1),
        .DOC(Link_reg_r2_0_63_18_20_n_2),
        .DOD(NLW_Link_reg_r2_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1853 Link_reg_r2_0_63_21_23
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_0_63_21_23_n_0),
        .DOB(Link_reg_r2_0_63_21_23_n_1),
        .DOC(Link_reg_r2_0_63_21_23_n_2),
        .DOD(NLW_Link_reg_r2_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1854 Link_reg_r2_0_63_24_26
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_0_63_24_26_n_0),
        .DOB(Link_reg_r2_0_63_24_26_n_1),
        .DOC(Link_reg_r2_0_63_24_26_n_2),
        .DOD(NLW_Link_reg_r2_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1855 Link_reg_r2_0_63_27_29
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_0_63_27_29_n_0),
        .DOB(Link_reg_r2_0_63_27_29_n_1),
        .DOC(Link_reg_r2_0_63_27_29_n_2),
        .DOD(NLW_Link_reg_r2_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1856 Link_reg_r2_0_63_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r2_0_63_30_30_n_0),
        .DPRA0(\j_reg_rep[0]__0_n_0 ),
        .DPRA1(\j_reg_rep[1]__0_n_0 ),
        .DPRA2(\j_reg_rep[2]__0_n_0 ),
        .DPRA3(\j_reg_rep[3]__0_n_0 ),
        .DPRA4(\j_reg_rep[4]__0_n_0 ),
        .DPRA5(\j_reg_rep[5]__0_n_0 ),
        .SPO(NLW_Link_reg_r2_0_63_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1857 Link_reg_r2_0_63_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r2_0_63_31_31_n_0),
        .DPRA0(\j_reg_rep[0]__0_n_0 ),
        .DPRA1(\j_reg_rep[1]__0_n_0 ),
        .DPRA2(\j_reg_rep[2]__0_n_0 ),
        .DPRA3(\j_reg_rep[3]__0_n_0 ),
        .DPRA4(\j_reg_rep[4]__0_n_0 ),
        .DPRA5(\j_reg_rep[5]__0_n_0 ),
        .SPO(NLW_Link_reg_r2_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1858 Link_reg_r2_0_63_3_5
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_0_63_3_5_n_0),
        .DOB(Link_reg_r2_0_63_3_5_n_1),
        .DOC(Link_reg_r2_0_63_3_5_n_2),
        .DOD(NLW_Link_reg_r2_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1859 Link_reg_r2_0_63_6_8
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_0_63_6_8_n_0),
        .DOB(Link_reg_r2_0_63_6_8_n_1),
        .DOC(Link_reg_r2_0_63_6_8_n_2),
        .DOD(NLW_Link_reg_r2_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1860 Link_reg_r2_0_63_9_11
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_0_63_9_11_n_0),
        .DOB(Link_reg_r2_0_63_9_11_n_1),
        .DOC(Link_reg_r2_0_63_9_11_n_2),
        .DOD(NLW_Link_reg_r2_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1861 Link_reg_r2_128_191_0_2
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_128_191_0_2_n_0),
        .DOB(Link_reg_r2_128_191_0_2_n_1),
        .DOC(Link_reg_r2_128_191_0_2_n_2),
        .DOD(NLW_Link_reg_r2_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1862 Link_reg_r2_128_191_12_14
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_128_191_12_14_n_0),
        .DOB(Link_reg_r2_128_191_12_14_n_1),
        .DOC(Link_reg_r2_128_191_12_14_n_2),
        .DOD(NLW_Link_reg_r2_128_191_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1863 Link_reg_r2_128_191_15_17
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_128_191_15_17_n_0),
        .DOB(Link_reg_r2_128_191_15_17_n_1),
        .DOC(Link_reg_r2_128_191_15_17_n_2),
        .DOD(NLW_Link_reg_r2_128_191_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1864 Link_reg_r2_128_191_18_20
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_128_191_18_20_n_0),
        .DOB(Link_reg_r2_128_191_18_20_n_1),
        .DOC(Link_reg_r2_128_191_18_20_n_2),
        .DOD(NLW_Link_reg_r2_128_191_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1865 Link_reg_r2_128_191_21_23
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_128_191_21_23_n_0),
        .DOB(Link_reg_r2_128_191_21_23_n_1),
        .DOC(Link_reg_r2_128_191_21_23_n_2),
        .DOD(NLW_Link_reg_r2_128_191_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1866 Link_reg_r2_128_191_24_26
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_128_191_24_26_n_0),
        .DOB(Link_reg_r2_128_191_24_26_n_1),
        .DOC(Link_reg_r2_128_191_24_26_n_2),
        .DOD(NLW_Link_reg_r2_128_191_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1867 Link_reg_r2_128_191_27_29
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_128_191_27_29_n_0),
        .DOB(Link_reg_r2_128_191_27_29_n_1),
        .DOC(Link_reg_r2_128_191_27_29_n_2),
        .DOD(NLW_Link_reg_r2_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1868 Link_reg_r2_128_191_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r2_128_191_30_30_n_0),
        .DPRA0(\j_reg_rep[0]__0_n_0 ),
        .DPRA1(\j_reg_rep[1]__0_n_0 ),
        .DPRA2(\j_reg_rep[2]__0_n_0 ),
        .DPRA3(\j_reg_rep[3]__0_n_0 ),
        .DPRA4(\j_reg_rep[4]__0_n_0 ),
        .DPRA5(\j_reg_rep[5]__0_n_0 ),
        .SPO(NLW_Link_reg_r2_128_191_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1869 Link_reg_r2_128_191_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r2_128_191_31_31_n_0),
        .DPRA0(\j_reg_rep[0]__0_n_0 ),
        .DPRA1(\j_reg_rep[1]__0_n_0 ),
        .DPRA2(\j_reg_rep[2]__0_n_0 ),
        .DPRA3(\j_reg_rep[3]__0_n_0 ),
        .DPRA4(\j_reg_rep[4]__0_n_0 ),
        .DPRA5(\j_reg_rep[5]__0_n_0 ),
        .SPO(NLW_Link_reg_r2_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1870 Link_reg_r2_128_191_3_5
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_128_191_3_5_n_0),
        .DOB(Link_reg_r2_128_191_3_5_n_1),
        .DOC(Link_reg_r2_128_191_3_5_n_2),
        .DOD(NLW_Link_reg_r2_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1871 Link_reg_r2_128_191_6_8
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_128_191_6_8_n_0),
        .DOB(Link_reg_r2_128_191_6_8_n_1),
        .DOC(Link_reg_r2_128_191_6_8_n_2),
        .DOD(NLW_Link_reg_r2_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1872 Link_reg_r2_128_191_9_11
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_128_191_9_11_n_0),
        .DOB(Link_reg_r2_128_191_9_11_n_1),
        .DOC(Link_reg_r2_128_191_9_11_n_2),
        .DOD(NLW_Link_reg_r2_128_191_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1873 Link_reg_r2_192_255_0_2
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_192_255_0_2_n_0),
        .DOB(Link_reg_r2_192_255_0_2_n_1),
        .DOC(Link_reg_r2_192_255_0_2_n_2),
        .DOD(NLW_Link_reg_r2_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1874 Link_reg_r2_192_255_12_14
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_192_255_12_14_n_0),
        .DOB(Link_reg_r2_192_255_12_14_n_1),
        .DOC(Link_reg_r2_192_255_12_14_n_2),
        .DOD(NLW_Link_reg_r2_192_255_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1875 Link_reg_r2_192_255_15_17
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_192_255_15_17_n_0),
        .DOB(Link_reg_r2_192_255_15_17_n_1),
        .DOC(Link_reg_r2_192_255_15_17_n_2),
        .DOD(NLW_Link_reg_r2_192_255_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1876 Link_reg_r2_192_255_18_20
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_192_255_18_20_n_0),
        .DOB(Link_reg_r2_192_255_18_20_n_1),
        .DOC(Link_reg_r2_192_255_18_20_n_2),
        .DOD(NLW_Link_reg_r2_192_255_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1877 Link_reg_r2_192_255_21_23
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_192_255_21_23_n_0),
        .DOB(Link_reg_r2_192_255_21_23_n_1),
        .DOC(Link_reg_r2_192_255_21_23_n_2),
        .DOD(NLW_Link_reg_r2_192_255_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1878 Link_reg_r2_192_255_24_26
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_192_255_24_26_n_0),
        .DOB(Link_reg_r2_192_255_24_26_n_1),
        .DOC(Link_reg_r2_192_255_24_26_n_2),
        .DOD(NLW_Link_reg_r2_192_255_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1879 Link_reg_r2_192_255_27_29
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_192_255_27_29_n_0),
        .DOB(Link_reg_r2_192_255_27_29_n_1),
        .DOC(Link_reg_r2_192_255_27_29_n_2),
        .DOD(NLW_Link_reg_r2_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1880 Link_reg_r2_192_255_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r2_192_255_30_30_n_0),
        .DPRA0(\j_reg_rep[0]__0_n_0 ),
        .DPRA1(\j_reg_rep[1]__0_n_0 ),
        .DPRA2(\j_reg_rep[2]__0_n_0 ),
        .DPRA3(\j_reg_rep[3]__0_n_0 ),
        .DPRA4(\j_reg_rep[4]__0_n_0 ),
        .DPRA5(\j_reg_rep[5]__0_n_0 ),
        .SPO(NLW_Link_reg_r2_192_255_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1881 Link_reg_r2_192_255_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r2_192_255_31_31_n_0),
        .DPRA0(\j_reg_rep[0]__0_n_0 ),
        .DPRA1(\j_reg_rep[1]__0_n_0 ),
        .DPRA2(\j_reg_rep[2]__0_n_0 ),
        .DPRA3(\j_reg_rep[3]__0_n_0 ),
        .DPRA4(\j_reg_rep[4]__0_n_0 ),
        .DPRA5(\j_reg_rep[5]__0_n_0 ),
        .SPO(NLW_Link_reg_r2_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1882 Link_reg_r2_192_255_3_5
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_192_255_3_5_n_0),
        .DOB(Link_reg_r2_192_255_3_5_n_1),
        .DOC(Link_reg_r2_192_255_3_5_n_2),
        .DOD(NLW_Link_reg_r2_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1883 Link_reg_r2_192_255_6_8
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_192_255_6_8_n_0),
        .DOB(Link_reg_r2_192_255_6_8_n_1),
        .DOC(Link_reg_r2_192_255_6_8_n_2),
        .DOD(NLW_Link_reg_r2_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1884 Link_reg_r2_192_255_9_11
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_192_255_9_11_n_0),
        .DOB(Link_reg_r2_192_255_9_11_n_1),
        .DOC(Link_reg_r2_192_255_9_11_n_2),
        .DOD(NLW_Link_reg_r2_192_255_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1885 Link_reg_r2_64_127_0_2
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_64_127_0_2_n_0),
        .DOB(Link_reg_r2_64_127_0_2_n_1),
        .DOC(Link_reg_r2_64_127_0_2_n_2),
        .DOD(NLW_Link_reg_r2_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1886 Link_reg_r2_64_127_12_14
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_64_127_12_14_n_0),
        .DOB(Link_reg_r2_64_127_12_14_n_1),
        .DOC(Link_reg_r2_64_127_12_14_n_2),
        .DOD(NLW_Link_reg_r2_64_127_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1887 Link_reg_r2_64_127_15_17
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_64_127_15_17_n_0),
        .DOB(Link_reg_r2_64_127_15_17_n_1),
        .DOC(Link_reg_r2_64_127_15_17_n_2),
        .DOD(NLW_Link_reg_r2_64_127_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1888 Link_reg_r2_64_127_18_20
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_64_127_18_20_n_0),
        .DOB(Link_reg_r2_64_127_18_20_n_1),
        .DOC(Link_reg_r2_64_127_18_20_n_2),
        .DOD(NLW_Link_reg_r2_64_127_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1889 Link_reg_r2_64_127_21_23
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_64_127_21_23_n_0),
        .DOB(Link_reg_r2_64_127_21_23_n_1),
        .DOC(Link_reg_r2_64_127_21_23_n_2),
        .DOD(NLW_Link_reg_r2_64_127_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1890 Link_reg_r2_64_127_24_26
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_64_127_24_26_n_0),
        .DOB(Link_reg_r2_64_127_24_26_n_1),
        .DOC(Link_reg_r2_64_127_24_26_n_2),
        .DOD(NLW_Link_reg_r2_64_127_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1891 Link_reg_r2_64_127_27_29
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_64_127_27_29_n_0),
        .DOB(Link_reg_r2_64_127_27_29_n_1),
        .DOC(Link_reg_r2_64_127_27_29_n_2),
        .DOD(NLW_Link_reg_r2_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1892 Link_reg_r2_64_127_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r2_64_127_30_30_n_0),
        .DPRA0(\j_reg_rep[0]__0_n_0 ),
        .DPRA1(\j_reg_rep[1]__0_n_0 ),
        .DPRA2(\j_reg_rep[2]__0_n_0 ),
        .DPRA3(\j_reg_rep[3]__0_n_0 ),
        .DPRA4(\j_reg_rep[4]__0_n_0 ),
        .DPRA5(\j_reg_rep[5]__0_n_0 ),
        .SPO(NLW_Link_reg_r2_64_127_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1893 Link_reg_r2_64_127_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r2_64_127_31_31_n_0),
        .DPRA0(\j_reg_rep[0]__0_n_0 ),
        .DPRA1(\j_reg_rep[1]__0_n_0 ),
        .DPRA2(\j_reg_rep[2]__0_n_0 ),
        .DPRA3(\j_reg_rep[3]__0_n_0 ),
        .DPRA4(\j_reg_rep[4]__0_n_0 ),
        .DPRA5(\j_reg_rep[5]__0_n_0 ),
        .SPO(NLW_Link_reg_r2_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1894 Link_reg_r2_64_127_3_5
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_64_127_3_5_n_0),
        .DOB(Link_reg_r2_64_127_3_5_n_1),
        .DOC(Link_reg_r2_64_127_3_5_n_2),
        .DOD(NLW_Link_reg_r2_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1895 Link_reg_r2_64_127_6_8
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_64_127_6_8_n_0),
        .DOB(Link_reg_r2_64_127_6_8_n_1),
        .DOC(Link_reg_r2_64_127_6_8_n_2),
        .DOD(NLW_Link_reg_r2_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1896 Link_reg_r2_64_127_9_11
       (.ADDRA({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRB({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRC({\j_reg_rep[5]__0_n_0 ,\j_reg_rep[4]__0_n_0 ,\j_reg_rep[3]__0_n_0 ,\j_reg_rep[2]__0_n_0 ,\j_reg_rep[1]__0_n_0 ,\j_reg_rep[0]__0_n_0 }),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r2_64_127_9_11_n_0),
        .DOB(Link_reg_r2_64_127_9_11_n_1),
        .DOC(Link_reg_r2_64_127_9_11_n_2),
        .DOD(NLW_Link_reg_r2_64_127_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1897 Link_reg_r3_0_63_0_2
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_0_63_0_2_n_0),
        .DOB(Link_reg_r3_0_63_0_2_n_1),
        .DOC(Link_reg_r3_0_63_0_2_n_2),
        .DOD(NLW_Link_reg_r3_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1898 Link_reg_r3_0_63_12_14
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_0_63_12_14_n_0),
        .DOB(Link_reg_r3_0_63_12_14_n_1),
        .DOC(Link_reg_r3_0_63_12_14_n_2),
        .DOD(NLW_Link_reg_r3_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1899 Link_reg_r3_0_63_15_17
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_0_63_15_17_n_0),
        .DOB(Link_reg_r3_0_63_15_17_n_1),
        .DOC(Link_reg_r3_0_63_15_17_n_2),
        .DOD(NLW_Link_reg_r3_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1900 Link_reg_r3_0_63_18_20
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_0_63_18_20_n_0),
        .DOB(Link_reg_r3_0_63_18_20_n_1),
        .DOC(Link_reg_r3_0_63_18_20_n_2),
        .DOD(NLW_Link_reg_r3_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1901 Link_reg_r3_0_63_21_23
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_0_63_21_23_n_0),
        .DOB(Link_reg_r3_0_63_21_23_n_1),
        .DOC(Link_reg_r3_0_63_21_23_n_2),
        .DOD(NLW_Link_reg_r3_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1902 Link_reg_r3_0_63_24_26
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_0_63_24_26_n_0),
        .DOB(Link_reg_r3_0_63_24_26_n_1),
        .DOC(Link_reg_r3_0_63_24_26_n_2),
        .DOD(NLW_Link_reg_r3_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1903 Link_reg_r3_0_63_27_29
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_0_63_27_29_n_0),
        .DOB(Link_reg_r3_0_63_27_29_n_1),
        .DOC(Link_reg_r3_0_63_27_29_n_2),
        .DOD(NLW_Link_reg_r3_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1904 Link_reg_r3_0_63_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r3_0_63_30_30_n_0),
        .DPRA0(p_1_in[0]),
        .DPRA1(p_1_in[1]),
        .DPRA2(p_1_in[2]),
        .DPRA3(p_1_in[3]),
        .DPRA4(p_1_in[4]),
        .DPRA5(p_1_in[5]),
        .SPO(NLW_Link_reg_r3_0_63_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1905 Link_reg_r3_0_63_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r3_0_63_31_31_n_0),
        .DPRA0(p_1_in[0]),
        .DPRA1(p_1_in[1]),
        .DPRA2(p_1_in[2]),
        .DPRA3(p_1_in[3]),
        .DPRA4(p_1_in[4]),
        .DPRA5(p_1_in[5]),
        .SPO(NLW_Link_reg_r3_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1906 Link_reg_r3_0_63_3_5
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_0_63_3_5_n_0),
        .DOB(Link_reg_r3_0_63_3_5_n_1),
        .DOC(Link_reg_r3_0_63_3_5_n_2),
        .DOD(NLW_Link_reg_r3_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1907 Link_reg_r3_0_63_6_8
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_0_63_6_8_n_0),
        .DOB(Link_reg_r3_0_63_6_8_n_1),
        .DOC(Link_reg_r3_0_63_6_8_n_2),
        .DOD(NLW_Link_reg_r3_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1908 Link_reg_r3_0_63_9_11
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_0_63_9_11_n_0),
        .DOB(Link_reg_r3_0_63_9_11_n_1),
        .DOC(Link_reg_r3_0_63_9_11_n_2),
        .DOD(NLW_Link_reg_r3_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1909 Link_reg_r3_128_191_0_2
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_128_191_0_2_n_0),
        .DOB(Link_reg_r3_128_191_0_2_n_1),
        .DOC(Link_reg_r3_128_191_0_2_n_2),
        .DOD(NLW_Link_reg_r3_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1910 Link_reg_r3_128_191_12_14
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_128_191_12_14_n_0),
        .DOB(Link_reg_r3_128_191_12_14_n_1),
        .DOC(Link_reg_r3_128_191_12_14_n_2),
        .DOD(NLW_Link_reg_r3_128_191_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1911 Link_reg_r3_128_191_15_17
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_128_191_15_17_n_0),
        .DOB(Link_reg_r3_128_191_15_17_n_1),
        .DOC(Link_reg_r3_128_191_15_17_n_2),
        .DOD(NLW_Link_reg_r3_128_191_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1912 Link_reg_r3_128_191_18_20
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_128_191_18_20_n_0),
        .DOB(Link_reg_r3_128_191_18_20_n_1),
        .DOC(Link_reg_r3_128_191_18_20_n_2),
        .DOD(NLW_Link_reg_r3_128_191_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1913 Link_reg_r3_128_191_21_23
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_128_191_21_23_n_0),
        .DOB(Link_reg_r3_128_191_21_23_n_1),
        .DOC(Link_reg_r3_128_191_21_23_n_2),
        .DOD(NLW_Link_reg_r3_128_191_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1914 Link_reg_r3_128_191_24_26
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_128_191_24_26_n_0),
        .DOB(Link_reg_r3_128_191_24_26_n_1),
        .DOC(Link_reg_r3_128_191_24_26_n_2),
        .DOD(NLW_Link_reg_r3_128_191_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1915 Link_reg_r3_128_191_27_29
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_128_191_27_29_n_0),
        .DOB(Link_reg_r3_128_191_27_29_n_1),
        .DOC(Link_reg_r3_128_191_27_29_n_2),
        .DOD(NLW_Link_reg_r3_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1916 Link_reg_r3_128_191_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r3_128_191_30_30_n_0),
        .DPRA0(p_1_in[0]),
        .DPRA1(p_1_in[1]),
        .DPRA2(p_1_in[2]),
        .DPRA3(p_1_in[3]),
        .DPRA4(p_1_in[4]),
        .DPRA5(p_1_in[5]),
        .SPO(NLW_Link_reg_r3_128_191_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1917 Link_reg_r3_128_191_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r3_128_191_31_31_n_0),
        .DPRA0(p_1_in[0]),
        .DPRA1(p_1_in[1]),
        .DPRA2(p_1_in[2]),
        .DPRA3(p_1_in[3]),
        .DPRA4(p_1_in[4]),
        .DPRA5(p_1_in[5]),
        .SPO(NLW_Link_reg_r3_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1918 Link_reg_r3_128_191_3_5
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_128_191_3_5_n_0),
        .DOB(Link_reg_r3_128_191_3_5_n_1),
        .DOC(Link_reg_r3_128_191_3_5_n_2),
        .DOD(NLW_Link_reg_r3_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1919 Link_reg_r3_128_191_6_8
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_128_191_6_8_n_0),
        .DOB(Link_reg_r3_128_191_6_8_n_1),
        .DOC(Link_reg_r3_128_191_6_8_n_2),
        .DOD(NLW_Link_reg_r3_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1920 Link_reg_r3_128_191_9_11
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_128_191_9_11_n_0),
        .DOB(Link_reg_r3_128_191_9_11_n_1),
        .DOC(Link_reg_r3_128_191_9_11_n_2),
        .DOD(NLW_Link_reg_r3_128_191_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1921 Link_reg_r3_192_255_0_2
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_192_255_0_2_n_0),
        .DOB(Link_reg_r3_192_255_0_2_n_1),
        .DOC(Link_reg_r3_192_255_0_2_n_2),
        .DOD(NLW_Link_reg_r3_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1922 Link_reg_r3_192_255_12_14
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_192_255_12_14_n_0),
        .DOB(Link_reg_r3_192_255_12_14_n_1),
        .DOC(Link_reg_r3_192_255_12_14_n_2),
        .DOD(NLW_Link_reg_r3_192_255_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1923 Link_reg_r3_192_255_15_17
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_192_255_15_17_n_0),
        .DOB(Link_reg_r3_192_255_15_17_n_1),
        .DOC(Link_reg_r3_192_255_15_17_n_2),
        .DOD(NLW_Link_reg_r3_192_255_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1924 Link_reg_r3_192_255_18_20
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_192_255_18_20_n_0),
        .DOB(Link_reg_r3_192_255_18_20_n_1),
        .DOC(Link_reg_r3_192_255_18_20_n_2),
        .DOD(NLW_Link_reg_r3_192_255_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1925 Link_reg_r3_192_255_21_23
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_192_255_21_23_n_0),
        .DOB(Link_reg_r3_192_255_21_23_n_1),
        .DOC(Link_reg_r3_192_255_21_23_n_2),
        .DOD(NLW_Link_reg_r3_192_255_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1926 Link_reg_r3_192_255_24_26
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_192_255_24_26_n_0),
        .DOB(Link_reg_r3_192_255_24_26_n_1),
        .DOC(Link_reg_r3_192_255_24_26_n_2),
        .DOD(NLW_Link_reg_r3_192_255_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1927 Link_reg_r3_192_255_27_29
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_192_255_27_29_n_0),
        .DOB(Link_reg_r3_192_255_27_29_n_1),
        .DOC(Link_reg_r3_192_255_27_29_n_2),
        .DOD(NLW_Link_reg_r3_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1928 Link_reg_r3_192_255_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r3_192_255_30_30_n_0),
        .DPRA0(p_1_in[0]),
        .DPRA1(p_1_in[1]),
        .DPRA2(p_1_in[2]),
        .DPRA3(p_1_in[3]),
        .DPRA4(p_1_in[4]),
        .DPRA5(p_1_in[5]),
        .SPO(NLW_Link_reg_r3_192_255_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1929 Link_reg_r3_192_255_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r3_192_255_31_31_n_0),
        .DPRA0(p_1_in[0]),
        .DPRA1(p_1_in[1]),
        .DPRA2(p_1_in[2]),
        .DPRA3(p_1_in[3]),
        .DPRA4(p_1_in[4]),
        .DPRA5(p_1_in[5]),
        .SPO(NLW_Link_reg_r3_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1930 Link_reg_r3_192_255_3_5
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_192_255_3_5_n_0),
        .DOB(Link_reg_r3_192_255_3_5_n_1),
        .DOC(Link_reg_r3_192_255_3_5_n_2),
        .DOD(NLW_Link_reg_r3_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1931 Link_reg_r3_192_255_6_8
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_192_255_6_8_n_0),
        .DOB(Link_reg_r3_192_255_6_8_n_1),
        .DOC(Link_reg_r3_192_255_6_8_n_2),
        .DOD(NLW_Link_reg_r3_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1932 Link_reg_r3_192_255_9_11
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_192_255_9_11_n_0),
        .DOB(Link_reg_r3_192_255_9_11_n_1),
        .DOC(Link_reg_r3_192_255_9_11_n_2),
        .DOD(NLW_Link_reg_r3_192_255_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1933 Link_reg_r3_64_127_0_2
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(Link_reg_r1_0_63_0_2_i_2_n_0),
        .DIC(Link_reg_r1_0_63_0_2_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_64_127_0_2_n_0),
        .DOB(Link_reg_r3_64_127_0_2_n_1),
        .DOC(Link_reg_r3_64_127_0_2_n_2),
        .DOD(NLW_Link_reg_r3_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1934 Link_reg_r3_64_127_12_14
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_12_14_i_1_n_0),
        .DIB(Link_reg_r1_0_63_12_14_i_2_n_0),
        .DIC(Link_reg_r1_0_63_12_14_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_64_127_12_14_n_0),
        .DOB(Link_reg_r3_64_127_12_14_n_1),
        .DOC(Link_reg_r3_64_127_12_14_n_2),
        .DOD(NLW_Link_reg_r3_64_127_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1935 Link_reg_r3_64_127_15_17
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_15_17_i_1_n_0),
        .DIB(Link_reg_r1_0_63_15_17_i_2_n_0),
        .DIC(Link_reg_r1_0_63_15_17_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_64_127_15_17_n_0),
        .DOB(Link_reg_r3_64_127_15_17_n_1),
        .DOC(Link_reg_r3_64_127_15_17_n_2),
        .DOD(NLW_Link_reg_r3_64_127_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1936 Link_reg_r3_64_127_18_20
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_18_20_i_1_n_0),
        .DIB(Link_reg_r1_0_63_18_20_i_2_n_0),
        .DIC(Link_reg_r1_0_63_18_20_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_64_127_18_20_n_0),
        .DOB(Link_reg_r3_64_127_18_20_n_1),
        .DOC(Link_reg_r3_64_127_18_20_n_2),
        .DOD(NLW_Link_reg_r3_64_127_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1937 Link_reg_r3_64_127_21_23
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_21_23_i_1_n_0),
        .DIB(Link_reg_r1_0_63_21_23_i_2_n_0),
        .DIC(Link_reg_r1_0_63_21_23_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_64_127_21_23_n_0),
        .DOB(Link_reg_r3_64_127_21_23_n_1),
        .DOC(Link_reg_r3_64_127_21_23_n_2),
        .DOD(NLW_Link_reg_r3_64_127_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1938 Link_reg_r3_64_127_24_26
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_24_26_i_1_n_0),
        .DIB(Link_reg_r1_0_63_24_26_i_2_n_0),
        .DIC(Link_reg_r1_0_63_24_26_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_64_127_24_26_n_0),
        .DOB(Link_reg_r3_64_127_24_26_n_1),
        .DOC(Link_reg_r3_64_127_24_26_n_2),
        .DOD(NLW_Link_reg_r3_64_127_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1939 Link_reg_r3_64_127_27_29
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_27_29_i_1_n_0),
        .DIB(Link_reg_r1_0_63_27_29_i_2_n_0),
        .DIC(Link_reg_r1_0_63_27_29_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_64_127_27_29_n_0),
        .DOB(Link_reg_r3_64_127_27_29_n_1),
        .DOC(Link_reg_r3_64_127_27_29_n_2),
        .DOD(NLW_Link_reg_r3_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1940 Link_reg_r3_64_127_30_30
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_30_30_i_1_n_0),
        .DPO(Link_reg_r3_64_127_30_30_n_0),
        .DPRA0(p_1_in[0]),
        .DPRA1(p_1_in[1]),
        .DPRA2(p_1_in[2]),
        .DPRA3(p_1_in[3]),
        .DPRA4(p_1_in[4]),
        .DPRA5(p_1_in[5]),
        .SPO(NLW_Link_reg_r3_64_127_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1941 Link_reg_r3_64_127_31_31
       (.A0(p_3_in[0]),
        .A1(p_3_in[1]),
        .A2(p_3_in[2]),
        .A3(p_3_in[3]),
        .A4(p_3_in[4]),
        .A5(p_3_in[5]),
        .D(Link_reg_r1_0_63_31_31_i_1_n_0),
        .DPO(Link_reg_r3_64_127_31_31_n_0),
        .DPRA0(p_1_in[0]),
        .DPRA1(p_1_in[1]),
        .DPRA2(p_1_in[2]),
        .DPRA3(p_1_in[3]),
        .DPRA4(p_1_in[4]),
        .DPRA5(p_1_in[5]),
        .SPO(NLW_Link_reg_r3_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1942 Link_reg_r3_64_127_3_5
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_3_5_i_1_n_0),
        .DIB(Link_reg_r1_0_63_3_5_i_2_n_0),
        .DIC(Link_reg_r1_0_63_3_5_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_64_127_3_5_n_0),
        .DOB(Link_reg_r3_64_127_3_5_n_1),
        .DOC(Link_reg_r3_64_127_3_5_n_2),
        .DOD(NLW_Link_reg_r3_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1943 Link_reg_r3_64_127_6_8
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_6_8_i_1_n_0),
        .DIB(Link_reg_r1_0_63_6_8_i_2_n_0),
        .DIC(Link_reg_r1_0_63_6_8_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_64_127_6_8_n_0),
        .DOB(Link_reg_r3_64_127_6_8_n_1),
        .DOC(Link_reg_r3_64_127_6_8_n_2),
        .DOD(NLW_Link_reg_r3_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1944 Link_reg_r3_64_127_9_11
       (.ADDRA(p_1_in[5:0]),
        .ADDRB(p_1_in[5:0]),
        .ADDRC(p_1_in[5:0]),
        .ADDRD(p_3_in),
        .DIA(Link_reg_r1_0_63_9_11_i_1_n_0),
        .DIB(Link_reg_r1_0_63_9_11_i_2_n_0),
        .DIC(Link_reg_r1_0_63_9_11_i_3_n_0),
        .DID(1'b0),
        .DOA(Link_reg_r3_64_127_9_11_n_0),
        .DOB(Link_reg_r3_64_127_9_11_n_1),
        .DOC(Link_reg_r3_64_127_9_11_n_2),
        .DOD(NLW_Link_reg_r3_64_127_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(Link_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1945 P_reg_r1_0_63_0_2
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r1_0_63_0_2_n_0),
        .DOB(P_reg_r1_0_63_0_2_n_1),
        .DOC(P_reg_r1_0_63_0_2_n_2),
        .DOD(NLW_P_reg_r1_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hEEEEEAAA)) 
    P_reg_r1_0_63_0_2_i_1
       (.I0(P_reg_r1_0_63_0_2_i_11_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(P_reg_r1_0_63_0_2_i_12_n_0),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_0_2_i_13_n_0),
        .O(P[0]));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    P_reg_r1_0_63_0_2_i_10
       (.I0(P_reg_r1_0_63_0_2_i_26_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(it[0]),
        .I5(P_reg_r1_0_63_0_2_i_27_n_0),
        .O(p_8_in[0]));
  LUT4 #(
    .INIT(16'hE400)) 
    P_reg_r1_0_63_0_2_i_11
       (.I0(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I1(p_2_out[0]),
        .I2(probabilities_tab_reg_n_15),
        .I3(\FSM_onehot_state_reg_n_0_[3] ),
        .O(P_reg_r1_0_63_0_2_i_11_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_12
       (.I0(P_reg_r4_192_255_0_2_n_0),
        .I1(P_reg_r4_128_191_0_2_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_0_2_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_0_2_n_0),
        .O(P_reg_r1_0_63_0_2_i_12_n_0));
  LUT4 #(
    .INIT(16'hFFF8)) 
    P_reg_r1_0_63_0_2_i_13
       (.I0(P_reg_r1_0_63_0_2_i_29_n_7),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_0_2_i_30_n_0),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .O(P_reg_r1_0_63_0_2_i_13_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_14
       (.I0(P_reg_r7_192_255_0_2_n_1),
        .I1(P_reg_r7_128_191_0_2_n_1),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_0_2_n_1),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_0_2_n_1),
        .O(p_2_out[1]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_0_2_i_15
       (.I0(P_reg_r1_0_63_0_2_i_31_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_0_2_i_29_n_6),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_0_2_i_32_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_0_2_i_15_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_16
       (.I0(P_reg_r7_192_255_0_2_n_2),
        .I1(P_reg_r7_128_191_0_2_n_2),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_0_2_n_2),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_0_2_n_2),
        .O(p_2_out[2]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_0_2_i_17
       (.I0(P_reg_r1_0_63_0_2_i_33_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_0_2_i_29_n_5),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_0_2_i_34_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_0_2_i_17_n_0));
  LUT5 #(
    .INIT(32'hFFFFAAA8)) 
    P_reg_r1_0_63_0_2_i_18
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(Link_reg_r1_0_63_0_2_i_28_n_0),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(\FSM_onehot_state_reg_n_0_[3] ),
        .O(P_reg_r1_0_63_0_2_i_18_n_0));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    P_reg_r1_0_63_0_2_i_19
       (.I0(ID_reg_r1_0_63_0_2_i_52_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(p_4_in[6]),
        .I5(P_reg_r1_0_63_0_2_i_35_n_0),
        .O(p_8_in[6]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_0_2_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_14),
        .I2(p_2_out[1]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_0_2_i_15_n_0),
        .O(P[1]));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    P_reg_r1_0_63_0_2_i_20
       (.I0(ID_reg_r1_0_63_0_2_i_55_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(p_4_in[7]),
        .I5(P_reg_r1_0_63_0_2_i_36_n_0),
        .O(p_8_in[7]));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    P_reg_r1_0_63_0_2_i_21
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\counter_reg_n_0_[5] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I3(P_reg_r6_0_63_0_2_i_1_n_7),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I5(Link_reg_r1_0_63_0_2_i_20_n_0),
        .O(P_reg_r1_0_63_0_2_i_21_n_0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    P_reg_r1_0_63_0_2_i_22
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\counter_reg_n_0_[4] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I3(P_reg_r6_0_63_0_2_i_2_n_4),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I5(Link_reg_r1_0_63_0_2_i_21_n_0),
        .O(P_reg_r1_0_63_0_2_i_22_n_0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    P_reg_r1_0_63_0_2_i_23
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\counter_reg_n_0_[3] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I3(P_reg_r6_0_63_0_2_i_2_n_5),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I5(Link_reg_r1_0_63_0_2_i_22_n_0),
        .O(P_reg_r1_0_63_0_2_i_23_n_0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    P_reg_r1_0_63_0_2_i_24
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\counter_reg_n_0_[2] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I3(P_reg_r6_0_63_0_2_i_2_n_6),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I5(Link_reg_r1_0_63_0_2_i_23_n_0),
        .O(P_reg_r1_0_63_0_2_i_24_n_0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    P_reg_r1_0_63_0_2_i_25
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\counter_reg_n_0_[1] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I3(P_reg_r6_0_63_0_2_i_2_n_7),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I5(Link_reg_r1_0_63_0_2_i_24_n_0),
        .O(P_reg_r1_0_63_0_2_i_25_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    P_reg_r1_0_63_0_2_i_26
       (.I0(\i_reg_n_0_[0] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .O(P_reg_r1_0_63_0_2_i_26_n_0));
  LUT6 #(
    .INIT(64'hFFFFC88CEAAEEAAE)) 
    P_reg_r1_0_63_0_2_i_27
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(j[0]),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I5(\counter_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_0_2_i_27_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_28
       (.I0(P_reg_r7_192_255_0_2_n_0),
        .I1(P_reg_r7_128_191_0_2_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_0_2_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_0_2_n_0),
        .O(p_2_out[0]));
  CARRY4 P_reg_r1_0_63_0_2_i_29
       (.CI(1'b0),
        .CO({P_reg_r1_0_63_0_2_i_29_n_0,P_reg_r1_0_63_0_2_i_29_n_1,P_reg_r1_0_63_0_2_i_29_n_2,P_reg_r1_0_63_0_2_i_29_n_3}),
        .CYINIT(1'b0),
        .DI({P_reg_r1_0_63_0_2_i_37_n_0,P_reg_r1_0_63_0_2_i_38_n_0,P_reg_r1_0_63_0_2_i_39_n_0,P_reg_r1_0_63_0_2_i_40_n_0}),
        .O({P_reg_r1_0_63_0_2_i_29_n_4,P_reg_r1_0_63_0_2_i_29_n_5,P_reg_r1_0_63_0_2_i_29_n_6,P_reg_r1_0_63_0_2_i_29_n_7}),
        .S({P_reg_r1_0_63_0_2_i_41_n_0,P_reg_r1_0_63_0_2_i_42_n_0,P_reg_r1_0_63_0_2_i_43_n_0,P_reg_r1_0_63_0_2_i_44_n_0}));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_0_2_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_13),
        .I2(p_2_out[2]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_0_2_i_17_n_0),
        .O(P[2]));
  LUT6 #(
    .INIT(64'hA8A8A8202020A820)) 
    P_reg_r1_0_63_0_2_i_30
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp[0]),
        .I3(temp0[0]),
        .I4(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I5(sorting_state3[0]),
        .O(P_reg_r1_0_63_0_2_i_30_n_0));
  LUT6 #(
    .INIT(64'hA8A8A8202020A820)) 
    P_reg_r1_0_63_0_2_i_31
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp[1]),
        .I3(temp0[1]),
        .I4(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I5(sorting_state3[1]),
        .O(P_reg_r1_0_63_0_2_i_31_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_32
       (.I0(P_reg_r4_192_255_0_2_n_1),
        .I1(P_reg_r4_128_191_0_2_n_1),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_0_2_n_1),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_0_2_n_1),
        .O(P_reg_r1_0_63_0_2_i_32_n_0));
  LUT6 #(
    .INIT(64'hA8A8A8202020A820)) 
    P_reg_r1_0_63_0_2_i_33
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp[2]),
        .I3(temp0[2]),
        .I4(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I5(sorting_state3[2]),
        .O(P_reg_r1_0_63_0_2_i_33_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_34
       (.I0(P_reg_r4_192_255_0_2_n_2),
        .I1(P_reg_r4_128_191_0_2_n_2),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_0_2_n_2),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_0_2_n_2),
        .O(P_reg_r1_0_63_0_2_i_34_n_0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    P_reg_r1_0_63_0_2_i_35
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\counter_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I3(P_reg_r6_0_63_0_2_i_1_n_6),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I5(Link_reg_r1_0_63_0_2_i_18_n_0),
        .O(P_reg_r1_0_63_0_2_i_35_n_0));
  LUT6 #(
    .INIT(64'hFFEAFFFFFFEA0000)) 
    P_reg_r1_0_63_0_2_i_36
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\counter_reg_n_0_[7] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[4] ),
        .I3(P_reg_r6_0_63_0_2_i_1_n_5),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[5] ),
        .I5(Link_reg_r1_0_63_0_2_i_19_n_0),
        .O(P_reg_r1_0_63_0_2_i_36_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_37
       (.I0(P_reg_r5_192_255_3_5_n_0),
        .I1(P_reg_r5_128_191_3_5_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_3_5_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_3_5_n_0),
        .O(P_reg_r1_0_63_0_2_i_37_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_38
       (.I0(P_reg_r5_192_255_0_2_n_2),
        .I1(P_reg_r5_128_191_0_2_n_2),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_0_2_n_2),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_0_2_n_2),
        .O(P_reg_r1_0_63_0_2_i_38_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_39
       (.I0(P_reg_r5_192_255_0_2_n_1),
        .I1(P_reg_r5_128_191_0_2_n_1),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_0_2_n_1),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_0_2_n_1),
        .O(P_reg_r1_0_63_0_2_i_39_n_0));
  LUT3 #(
    .INIT(8'h02)) 
    P_reg_r1_0_63_0_2_i_4
       (.I0(P_reg_r1_0_63_0_2_i_18_n_0),
        .I1(p_8_in[6]),
        .I2(p_8_in[7]),
        .O(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_40
       (.I0(P_reg_r5_192_255_0_2_n_0),
        .I1(P_reg_r5_128_191_0_2_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_0_2_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_0_2_n_0),
        .O(P_reg_r1_0_63_0_2_i_40_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_0_2_i_41
       (.I0(P_reg_r1_0_63_0_2_i_37_n_0),
        .I1(p_7_out[3]),
        .O(P_reg_r1_0_63_0_2_i_41_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_0_2_i_42
       (.I0(P_reg_r1_0_63_0_2_i_38_n_0),
        .I1(p_7_out[2]),
        .O(P_reg_r1_0_63_0_2_i_42_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_0_2_i_43
       (.I0(P_reg_r1_0_63_0_2_i_39_n_0),
        .I1(p_7_out[1]),
        .O(P_reg_r1_0_63_0_2_i_43_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_0_2_i_44
       (.I0(P_reg_r1_0_63_0_2_i_40_n_0),
        .I1(p_7_out[0]),
        .O(P_reg_r1_0_63_0_2_i_44_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_45
       (.I0(P_reg_r3_192_255_0_2_n_0),
        .I1(P_reg_r3_128_191_0_2_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_0_2_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_0_2_n_0),
        .O(sorting_state3[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_46
       (.I0(P_reg_r3_192_255_0_2_n_1),
        .I1(P_reg_r3_128_191_0_2_n_1),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_0_2_n_1),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_0_2_n_1),
        .O(sorting_state3[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_47
       (.I0(P_reg_r3_192_255_0_2_n_2),
        .I1(P_reg_r3_128_191_0_2_n_2),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_0_2_n_2),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_0_2_n_2),
        .O(sorting_state3[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_48
       (.I0(P_reg_r6_192_255_3_5_n_0),
        .I1(P_reg_r6_128_191_3_5_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_3_5_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_3_5_n_0),
        .O(p_7_out[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_49
       (.I0(P_reg_r6_192_255_0_2_n_2),
        .I1(P_reg_r6_128_191_0_2_n_2),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_0_2_n_2),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_0_2_n_2),
        .O(p_7_out[2]));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    P_reg_r1_0_63_0_2_i_5
       (.I0(ID_reg_r1_0_63_0_2_i_24_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(p_4_in[5]),
        .I5(P_reg_r1_0_63_0_2_i_21_n_0),
        .O(p_8_in[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_50
       (.I0(P_reg_r6_192_255_0_2_n_1),
        .I1(P_reg_r6_128_191_0_2_n_1),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_0_2_n_1),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_0_2_n_1),
        .O(p_7_out[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_0_2_i_51
       (.I0(P_reg_r6_192_255_0_2_n_0),
        .I1(P_reg_r6_128_191_0_2_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_0_2_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_0_2_n_0),
        .O(p_7_out[0]));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    P_reg_r1_0_63_0_2_i_6
       (.I0(ID_reg_r1_0_63_0_2_i_26_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(p_4_in[4]),
        .I5(P_reg_r1_0_63_0_2_i_22_n_0),
        .O(p_8_in[4]));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    P_reg_r1_0_63_0_2_i_7
       (.I0(ID_reg_r1_0_63_0_2_i_28_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(p_4_in[3]),
        .I5(P_reg_r1_0_63_0_2_i_23_n_0),
        .O(p_8_in[3]));
  LUT6 #(
    .INIT(64'hEEEEEEEEEEEAAAAA)) 
    P_reg_r1_0_63_0_2_i_8
       (.I0(ID_reg_r1_0_63_0_2_i_30_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(p_4_in[2]),
        .I5(P_reg_r1_0_63_0_2_i_24_n_0),
        .O(p_8_in[2]));
  LUT6 #(
    .INIT(64'hEEEEAEAEEEEEAEAA)) 
    P_reg_r1_0_63_0_2_i_9
       (.I0(ID_reg_r1_0_63_0_2_i_32_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(it[1]),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I4(P_reg_r1_0_63_0_2_i_25_n_0),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .O(p_8_in[1]));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1946 P_reg_r1_0_63_12_14
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r1_0_63_12_14_n_0),
        .DOB(P_reg_r1_0_63_12_14_n_1),
        .DOC(P_reg_r1_0_63_12_14_n_2),
        .DOD(NLW_P_reg_r1_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_12_14_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_3),
        .I2(p_2_out[12]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_12_14_i_5_n_0),
        .O(P[12]));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_12_14_i_10
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[12]),
        .I2(temp0[12]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[12]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_12_14_i_10_n_0));
  CARRY4 P_reg_r1_0_63_12_14_i_11
       (.CI(P_reg_r1_0_63_6_8_i_15_n_0),
        .CO({P_reg_r1_0_63_12_14_i_11_n_0,P_reg_r1_0_63_12_14_i_11_n_1,P_reg_r1_0_63_12_14_i_11_n_2,P_reg_r1_0_63_12_14_i_11_n_3}),
        .CYINIT(1'b0),
        .DI({P_reg_r1_0_63_12_14_i_18_n_0,P_reg_r1_0_63_12_14_i_19_n_0,P_reg_r1_0_63_12_14_i_20_n_0,P_reg_r1_0_63_12_14_i_21_n_0}),
        .O({P_reg_r1_0_63_12_14_i_11_n_4,P_reg_r1_0_63_12_14_i_11_n_5,P_reg_r1_0_63_12_14_i_11_n_6,P_reg_r1_0_63_12_14_i_11_n_7}),
        .S({P_reg_r1_0_63_12_14_i_22_n_0,P_reg_r1_0_63_12_14_i_23_n_0,P_reg_r1_0_63_12_14_i_24_n_0,P_reg_r1_0_63_12_14_i_25_n_0}));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_12
       (.I0(P_reg_r4_192_255_12_14_n_0),
        .I1(P_reg_r4_128_191_12_14_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_12_14_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_12_14_n_0),
        .O(P_reg_r1_0_63_12_14_i_12_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_12_14_i_13
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[13]),
        .I2(temp0[13]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[13]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_12_14_i_13_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_14
       (.I0(P_reg_r4_192_255_12_14_n_1),
        .I1(P_reg_r4_128_191_12_14_n_1),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_12_14_n_1),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_12_14_n_1),
        .O(P_reg_r1_0_63_12_14_i_14_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_12_14_i_15
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[14]),
        .I2(temp0[14]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[14]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_12_14_i_15_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_16
       (.I0(P_reg_r4_192_255_12_14_n_2),
        .I1(P_reg_r4_128_191_12_14_n_2),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_12_14_n_2),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_12_14_n_2),
        .O(P_reg_r1_0_63_12_14_i_16_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_17
       (.I0(P_reg_r3_192_255_12_14_n_0),
        .I1(P_reg_r3_128_191_12_14_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_12_14_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_12_14_n_0),
        .O(sorting_state3[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_18
       (.I0(P_reg_r5_192_255_15_17_n_0),
        .I1(P_reg_r5_128_191_15_17_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_15_17_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_15_17_n_0),
        .O(P_reg_r1_0_63_12_14_i_18_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_19
       (.I0(P_reg_r5_192_255_12_14_n_2),
        .I1(P_reg_r5_128_191_12_14_n_2),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_12_14_n_2),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_12_14_n_2),
        .O(P_reg_r1_0_63_12_14_i_19_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_12_14_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_2),
        .I2(p_2_out[13]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_12_14_i_7_n_0),
        .O(P[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_20
       (.I0(P_reg_r5_192_255_12_14_n_1),
        .I1(P_reg_r5_128_191_12_14_n_1),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_12_14_n_1),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_12_14_n_1),
        .O(P_reg_r1_0_63_12_14_i_20_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_21
       (.I0(P_reg_r5_192_255_12_14_n_0),
        .I1(P_reg_r5_128_191_12_14_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_12_14_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_12_14_n_0),
        .O(P_reg_r1_0_63_12_14_i_21_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_12_14_i_22
       (.I0(P_reg_r1_0_63_12_14_i_18_n_0),
        .I1(p_7_out[15]),
        .O(P_reg_r1_0_63_12_14_i_22_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_12_14_i_23
       (.I0(P_reg_r1_0_63_12_14_i_19_n_0),
        .I1(p_7_out[14]),
        .O(P_reg_r1_0_63_12_14_i_23_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_12_14_i_24
       (.I0(P_reg_r1_0_63_12_14_i_20_n_0),
        .I1(p_7_out[13]),
        .O(P_reg_r1_0_63_12_14_i_24_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_12_14_i_25
       (.I0(P_reg_r1_0_63_12_14_i_21_n_0),
        .I1(p_7_out[12]),
        .O(P_reg_r1_0_63_12_14_i_25_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_26
       (.I0(P_reg_r3_192_255_12_14_n_1),
        .I1(P_reg_r3_128_191_12_14_n_1),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_12_14_n_1),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_12_14_n_1),
        .O(sorting_state3[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_27
       (.I0(P_reg_r3_192_255_12_14_n_2),
        .I1(P_reg_r3_128_191_12_14_n_2),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_12_14_n_2),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_12_14_n_2),
        .O(sorting_state3[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_28
       (.I0(P_reg_r6_192_255_15_17_n_0),
        .I1(P_reg_r6_128_191_15_17_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_15_17_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_15_17_n_0),
        .O(p_7_out[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_29
       (.I0(P_reg_r6_192_255_12_14_n_2),
        .I1(P_reg_r6_128_191_12_14_n_2),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_12_14_n_2),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_12_14_n_2),
        .O(p_7_out[14]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_12_14_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_1),
        .I2(p_2_out[14]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_12_14_i_9_n_0),
        .O(P[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_30
       (.I0(P_reg_r6_192_255_12_14_n_1),
        .I1(P_reg_r6_128_191_12_14_n_1),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_12_14_n_1),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_12_14_n_1),
        .O(p_7_out[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_31
       (.I0(P_reg_r6_192_255_12_14_n_0),
        .I1(P_reg_r6_128_191_12_14_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_12_14_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_12_14_n_0),
        .O(p_7_out[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_4
       (.I0(P_reg_r7_192_255_12_14_n_0),
        .I1(P_reg_r7_128_191_12_14_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_12_14_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_12_14_n_0),
        .O(p_2_out[12]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_12_14_i_5
       (.I0(P_reg_r1_0_63_12_14_i_10_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_12_14_i_11_n_7),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_12_14_i_12_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_12_14_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_6
       (.I0(P_reg_r7_192_255_12_14_n_1),
        .I1(P_reg_r7_128_191_12_14_n_1),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_12_14_n_1),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_12_14_n_1),
        .O(p_2_out[13]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_12_14_i_7
       (.I0(P_reg_r1_0_63_12_14_i_13_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_12_14_i_11_n_6),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_12_14_i_14_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_12_14_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_12_14_i_8
       (.I0(P_reg_r7_192_255_12_14_n_2),
        .I1(P_reg_r7_128_191_12_14_n_2),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_12_14_n_2),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_12_14_n_2),
        .O(p_2_out[14]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_12_14_i_9
       (.I0(P_reg_r1_0_63_12_14_i_15_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_12_14_i_11_n_5),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_12_14_i_16_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_12_14_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1947 P_reg_r1_0_63_15_17
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r1_0_63_15_17_n_0),
        .DOB(P_reg_r1_0_63_15_17_n_1),
        .DOC(P_reg_r1_0_63_15_17_n_2),
        .DOD(NLW_P_reg_r1_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_15_17_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_0),
        .I2(p_2_out[15]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_15_17_i_5_n_0),
        .O(P[15]));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_15_17_i_10
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[15]),
        .I2(temp0[15]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[15]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_15_17_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_11
       (.I0(P_reg_r4_192_255_15_17_n_0),
        .I1(P_reg_r4_128_191_15_17_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_15_17_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_15_17_n_0),
        .O(P_reg_r1_0_63_15_17_i_11_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_15_17_i_12
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[16]),
        .I2(temp0[16]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[16]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_15_17_i_12_n_0));
  CARRY4 P_reg_r1_0_63_15_17_i_13
       (.CI(P_reg_r1_0_63_12_14_i_11_n_0),
        .CO({P_reg_r1_0_63_15_17_i_13_n_0,P_reg_r1_0_63_15_17_i_13_n_1,P_reg_r1_0_63_15_17_i_13_n_2,P_reg_r1_0_63_15_17_i_13_n_3}),
        .CYINIT(1'b0),
        .DI({P_reg_r1_0_63_15_17_i_19_n_0,P_reg_r1_0_63_15_17_i_20_n_0,P_reg_r1_0_63_15_17_i_21_n_0,P_reg_r1_0_63_15_17_i_22_n_0}),
        .O({P_reg_r1_0_63_15_17_i_13_n_4,P_reg_r1_0_63_15_17_i_13_n_5,P_reg_r1_0_63_15_17_i_13_n_6,P_reg_r1_0_63_15_17_i_13_n_7}),
        .S({P_reg_r1_0_63_15_17_i_23_n_0,P_reg_r1_0_63_15_17_i_24_n_0,P_reg_r1_0_63_15_17_i_25_n_0,P_reg_r1_0_63_15_17_i_26_n_0}));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_14
       (.I0(P_reg_r4_192_255_15_17_n_1),
        .I1(P_reg_r4_128_191_15_17_n_1),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_15_17_n_1),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_15_17_n_1),
        .O(P_reg_r1_0_63_15_17_i_14_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_15_17_i_15
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[17]),
        .I2(temp0[17]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[17]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_15_17_i_15_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_16
       (.I0(P_reg_r4_192_255_15_17_n_2),
        .I1(P_reg_r4_128_191_15_17_n_2),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_15_17_n_2),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_15_17_n_2),
        .O(P_reg_r1_0_63_15_17_i_16_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_17
       (.I0(P_reg_r3_192_255_15_17_n_0),
        .I1(P_reg_r3_128_191_15_17_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_15_17_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_15_17_n_0),
        .O(sorting_state3[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_18
       (.I0(P_reg_r3_192_255_15_17_n_1),
        .I1(P_reg_r3_128_191_15_17_n_1),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_15_17_n_1),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_15_17_n_1),
        .O(sorting_state3[16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_19
       (.I0(P_reg_r5_192_255_18_20_n_1),
        .I1(P_reg_r5_128_191_18_20_n_1),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_18_20_n_1),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_18_20_n_1),
        .O(P_reg_r1_0_63_15_17_i_19_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_15_17_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_31),
        .I2(p_2_out[16]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_15_17_i_7_n_0),
        .O(P[16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_20
       (.I0(P_reg_r5_192_255_18_20_n_0),
        .I1(P_reg_r5_128_191_18_20_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_18_20_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_18_20_n_0),
        .O(P_reg_r1_0_63_15_17_i_20_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_21
       (.I0(P_reg_r5_192_255_15_17_n_2),
        .I1(P_reg_r5_128_191_15_17_n_2),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_15_17_n_2),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_15_17_n_2),
        .O(P_reg_r1_0_63_15_17_i_21_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_22
       (.I0(P_reg_r5_192_255_15_17_n_1),
        .I1(P_reg_r5_128_191_15_17_n_1),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_15_17_n_1),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_15_17_n_1),
        .O(P_reg_r1_0_63_15_17_i_22_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_15_17_i_23
       (.I0(P_reg_r1_0_63_15_17_i_19_n_0),
        .I1(p_7_out[19]),
        .O(P_reg_r1_0_63_15_17_i_23_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_15_17_i_24
       (.I0(P_reg_r1_0_63_15_17_i_20_n_0),
        .I1(p_7_out[18]),
        .O(P_reg_r1_0_63_15_17_i_24_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_15_17_i_25
       (.I0(P_reg_r1_0_63_15_17_i_21_n_0),
        .I1(p_7_out[17]),
        .O(P_reg_r1_0_63_15_17_i_25_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_15_17_i_26
       (.I0(P_reg_r1_0_63_15_17_i_22_n_0),
        .I1(p_7_out[16]),
        .O(P_reg_r1_0_63_15_17_i_26_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_27
       (.I0(P_reg_r3_192_255_15_17_n_2),
        .I1(P_reg_r3_128_191_15_17_n_2),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_15_17_n_2),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_15_17_n_2),
        .O(sorting_state3[17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_28
       (.I0(P_reg_r6_192_255_18_20_n_1),
        .I1(P_reg_r6_128_191_18_20_n_1),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_18_20_n_1),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_18_20_n_1),
        .O(p_7_out[19]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_29
       (.I0(P_reg_r6_192_255_18_20_n_0),
        .I1(P_reg_r6_128_191_18_20_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_18_20_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_18_20_n_0),
        .O(p_7_out[18]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_15_17_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_30),
        .I2(p_2_out[17]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_15_17_i_9_n_0),
        .O(P[17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_30
       (.I0(P_reg_r6_192_255_15_17_n_2),
        .I1(P_reg_r6_128_191_15_17_n_2),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_15_17_n_2),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_15_17_n_2),
        .O(p_7_out[17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_31
       (.I0(P_reg_r6_192_255_15_17_n_1),
        .I1(P_reg_r6_128_191_15_17_n_1),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_15_17_n_1),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_15_17_n_1),
        .O(p_7_out[16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_4
       (.I0(P_reg_r7_192_255_15_17_n_0),
        .I1(P_reg_r7_128_191_15_17_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_15_17_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_15_17_n_0),
        .O(p_2_out[15]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_15_17_i_5
       (.I0(P_reg_r1_0_63_15_17_i_10_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_12_14_i_11_n_4),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_15_17_i_11_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_15_17_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_6
       (.I0(P_reg_r7_192_255_15_17_n_1),
        .I1(P_reg_r7_128_191_15_17_n_1),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_15_17_n_1),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_15_17_n_1),
        .O(p_2_out[16]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_15_17_i_7
       (.I0(P_reg_r1_0_63_15_17_i_12_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_15_17_i_13_n_7),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_15_17_i_14_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_15_17_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_15_17_i_8
       (.I0(P_reg_r7_192_255_15_17_n_2),
        .I1(P_reg_r7_128_191_15_17_n_2),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_15_17_n_2),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_15_17_n_2),
        .O(p_2_out[17]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_15_17_i_9
       (.I0(P_reg_r1_0_63_15_17_i_15_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_15_17_i_13_n_6),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_15_17_i_16_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_15_17_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1948 P_reg_r1_0_63_18_20
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r1_0_63_18_20_n_0),
        .DOB(P_reg_r1_0_63_18_20_n_1),
        .DOC(P_reg_r1_0_63_18_20_n_2),
        .DOD(NLW_P_reg_r1_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_18_20_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_29),
        .I2(p_2_out[18]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_18_20_i_5_n_0),
        .O(P[18]));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_18_20_i_10
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[18]),
        .I2(temp0[18]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[18]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_18_20_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_11
       (.I0(P_reg_r4_192_255_18_20_n_0),
        .I1(P_reg_r4_128_191_18_20_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_18_20_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_18_20_n_0),
        .O(P_reg_r1_0_63_18_20_i_11_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_18_20_i_12
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[19]),
        .I2(temp0[19]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[19]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_18_20_i_12_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_13
       (.I0(P_reg_r4_192_255_18_20_n_1),
        .I1(P_reg_r4_128_191_18_20_n_1),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_18_20_n_1),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_18_20_n_1),
        .O(P_reg_r1_0_63_18_20_i_13_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_18_20_i_14
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[20]),
        .I2(temp0[20]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[20]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_18_20_i_14_n_0));
  CARRY4 P_reg_r1_0_63_18_20_i_15
       (.CI(P_reg_r1_0_63_15_17_i_13_n_0),
        .CO({P_reg_r1_0_63_18_20_i_15_n_0,P_reg_r1_0_63_18_20_i_15_n_1,P_reg_r1_0_63_18_20_i_15_n_2,P_reg_r1_0_63_18_20_i_15_n_3}),
        .CYINIT(1'b0),
        .DI({P_reg_r1_0_63_18_20_i_20_n_0,P_reg_r1_0_63_18_20_i_21_n_0,P_reg_r1_0_63_18_20_i_22_n_0,P_reg_r1_0_63_18_20_i_23_n_0}),
        .O({P_reg_r1_0_63_18_20_i_15_n_4,P_reg_r1_0_63_18_20_i_15_n_5,P_reg_r1_0_63_18_20_i_15_n_6,P_reg_r1_0_63_18_20_i_15_n_7}),
        .S({P_reg_r1_0_63_18_20_i_24_n_0,P_reg_r1_0_63_18_20_i_25_n_0,P_reg_r1_0_63_18_20_i_26_n_0,P_reg_r1_0_63_18_20_i_27_n_0}));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_16
       (.I0(P_reg_r4_192_255_18_20_n_2),
        .I1(P_reg_r4_128_191_18_20_n_2),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_18_20_n_2),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_18_20_n_2),
        .O(P_reg_r1_0_63_18_20_i_16_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_17
       (.I0(P_reg_r3_192_255_18_20_n_0),
        .I1(P_reg_r3_128_191_18_20_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_18_20_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_18_20_n_0),
        .O(sorting_state3[18]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_18
       (.I0(P_reg_r3_192_255_18_20_n_1),
        .I1(P_reg_r3_128_191_18_20_n_1),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_18_20_n_1),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_18_20_n_1),
        .O(sorting_state3[19]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_19
       (.I0(P_reg_r3_192_255_18_20_n_2),
        .I1(P_reg_r3_128_191_18_20_n_2),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_18_20_n_2),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_18_20_n_2),
        .O(sorting_state3[20]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_18_20_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_28),
        .I2(p_2_out[19]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_18_20_i_7_n_0),
        .O(P[19]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_20
       (.I0(P_reg_r5_192_255_21_23_n_2),
        .I1(P_reg_r5_128_191_21_23_n_2),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_21_23_n_2),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_21_23_n_2),
        .O(P_reg_r1_0_63_18_20_i_20_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_21
       (.I0(P_reg_r5_192_255_21_23_n_1),
        .I1(P_reg_r5_128_191_21_23_n_1),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_21_23_n_1),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_21_23_n_1),
        .O(P_reg_r1_0_63_18_20_i_21_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_22
       (.I0(P_reg_r5_192_255_21_23_n_0),
        .I1(P_reg_r5_128_191_21_23_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_21_23_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_21_23_n_0),
        .O(P_reg_r1_0_63_18_20_i_22_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_23
       (.I0(P_reg_r5_192_255_18_20_n_2),
        .I1(P_reg_r5_128_191_18_20_n_2),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_18_20_n_2),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_18_20_n_2),
        .O(P_reg_r1_0_63_18_20_i_23_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_18_20_i_24
       (.I0(P_reg_r1_0_63_18_20_i_20_n_0),
        .I1(p_7_out[23]),
        .O(P_reg_r1_0_63_18_20_i_24_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_18_20_i_25
       (.I0(P_reg_r1_0_63_18_20_i_21_n_0),
        .I1(p_7_out[22]),
        .O(P_reg_r1_0_63_18_20_i_25_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_18_20_i_26
       (.I0(P_reg_r1_0_63_18_20_i_22_n_0),
        .I1(p_7_out[21]),
        .O(P_reg_r1_0_63_18_20_i_26_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_18_20_i_27
       (.I0(P_reg_r1_0_63_18_20_i_23_n_0),
        .I1(p_7_out[20]),
        .O(P_reg_r1_0_63_18_20_i_27_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_28
       (.I0(P_reg_r6_192_255_21_23_n_2),
        .I1(P_reg_r6_128_191_21_23_n_2),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_21_23_n_2),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_21_23_n_2),
        .O(p_7_out[23]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_29
       (.I0(P_reg_r6_192_255_21_23_n_1),
        .I1(P_reg_r6_128_191_21_23_n_1),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_21_23_n_1),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_21_23_n_1),
        .O(p_7_out[22]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_18_20_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_27),
        .I2(p_2_out[20]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_18_20_i_9_n_0),
        .O(P[20]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_30
       (.I0(P_reg_r6_192_255_21_23_n_0),
        .I1(P_reg_r6_128_191_21_23_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_21_23_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_21_23_n_0),
        .O(p_7_out[21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_31
       (.I0(P_reg_r6_192_255_18_20_n_2),
        .I1(P_reg_r6_128_191_18_20_n_2),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_18_20_n_2),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_18_20_n_2),
        .O(p_7_out[20]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_4
       (.I0(P_reg_r7_192_255_18_20_n_0),
        .I1(P_reg_r7_128_191_18_20_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_18_20_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_18_20_n_0),
        .O(p_2_out[18]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_18_20_i_5
       (.I0(P_reg_r1_0_63_18_20_i_10_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_15_17_i_13_n_5),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_18_20_i_11_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_18_20_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_6
       (.I0(P_reg_r7_192_255_18_20_n_1),
        .I1(P_reg_r7_128_191_18_20_n_1),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_18_20_n_1),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_18_20_n_1),
        .O(p_2_out[19]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_18_20_i_7
       (.I0(P_reg_r1_0_63_18_20_i_12_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_15_17_i_13_n_4),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_18_20_i_13_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_18_20_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_18_20_i_8
       (.I0(P_reg_r7_192_255_18_20_n_2),
        .I1(P_reg_r7_128_191_18_20_n_2),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_18_20_n_2),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_18_20_n_2),
        .O(p_2_out[20]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_18_20_i_9
       (.I0(P_reg_r1_0_63_18_20_i_14_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_18_20_i_15_n_7),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_18_20_i_16_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_18_20_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1949 P_reg_r1_0_63_21_23
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r1_0_63_21_23_n_0),
        .DOB(P_reg_r1_0_63_21_23_n_1),
        .DOC(P_reg_r1_0_63_21_23_n_2),
        .DOD(NLW_P_reg_r1_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_21_23_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_26),
        .I2(p_2_out[21]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_21_23_i_5_n_0),
        .O(P[21]));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_21_23_i_10
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[21]),
        .I2(temp0[21]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[21]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_21_23_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_21_23_i_11
       (.I0(P_reg_r4_192_255_21_23_n_0),
        .I1(P_reg_r4_128_191_21_23_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_21_23_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_21_23_n_0),
        .O(P_reg_r1_0_63_21_23_i_11_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_21_23_i_12
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[22]),
        .I2(temp0[22]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[22]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_21_23_i_12_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_21_23_i_13
       (.I0(P_reg_r4_192_255_21_23_n_1),
        .I1(P_reg_r4_128_191_21_23_n_1),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_21_23_n_1),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_21_23_n_1),
        .O(P_reg_r1_0_63_21_23_i_13_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_21_23_i_14
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[23]),
        .I2(temp0[23]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[23]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_21_23_i_14_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_21_23_i_15
       (.I0(P_reg_r4_192_255_21_23_n_2),
        .I1(P_reg_r4_128_191_21_23_n_2),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_21_23_n_2),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_21_23_n_2),
        .O(P_reg_r1_0_63_21_23_i_15_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_21_23_i_16
       (.I0(P_reg_r3_192_255_21_23_n_0),
        .I1(P_reg_r3_128_191_21_23_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_21_23_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_21_23_n_0),
        .O(sorting_state3[21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_21_23_i_17
       (.I0(P_reg_r3_192_255_21_23_n_1),
        .I1(P_reg_r3_128_191_21_23_n_1),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_21_23_n_1),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_21_23_n_1),
        .O(sorting_state3[22]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_21_23_i_18
       (.I0(P_reg_r3_192_255_21_23_n_2),
        .I1(P_reg_r3_128_191_21_23_n_2),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_21_23_n_2),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_21_23_n_2),
        .O(sorting_state3[23]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_21_23_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_25),
        .I2(p_2_out[22]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_21_23_i_7_n_0),
        .O(P[22]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_21_23_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_24),
        .I2(p_2_out[23]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_21_23_i_9_n_0),
        .O(P[23]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_21_23_i_4
       (.I0(P_reg_r7_192_255_21_23_n_0),
        .I1(P_reg_r7_128_191_21_23_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_21_23_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_21_23_n_0),
        .O(p_2_out[21]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_21_23_i_5
       (.I0(P_reg_r1_0_63_21_23_i_10_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_18_20_i_15_n_6),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_21_23_i_11_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_21_23_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_21_23_i_6
       (.I0(P_reg_r7_192_255_21_23_n_1),
        .I1(P_reg_r7_128_191_21_23_n_1),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_21_23_n_1),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_21_23_n_1),
        .O(p_2_out[22]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_21_23_i_7
       (.I0(P_reg_r1_0_63_21_23_i_12_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_18_20_i_15_n_5),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_21_23_i_13_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_21_23_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_21_23_i_8
       (.I0(P_reg_r7_192_255_21_23_n_2),
        .I1(P_reg_r7_128_191_21_23_n_2),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_21_23_n_2),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_21_23_n_2),
        .O(p_2_out[23]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_21_23_i_9
       (.I0(P_reg_r1_0_63_21_23_i_14_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_18_20_i_15_n_4),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_21_23_i_15_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_21_23_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1950 P_reg_r1_0_63_24_26
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r1_0_63_24_26_n_0),
        .DOB(P_reg_r1_0_63_24_26_n_1),
        .DOC(P_reg_r1_0_63_24_26_n_2),
        .DOD(NLW_P_reg_r1_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_24_26_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_23),
        .I2(p_2_out[24]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_24_26_i_5_n_0),
        .O(P[24]));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_24_26_i_10
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[24]),
        .I2(temp0[24]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[24]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_24_26_i_10_n_0));
  CARRY4 P_reg_r1_0_63_24_26_i_11
       (.CI(P_reg_r1_0_63_18_20_i_15_n_0),
        .CO({P_reg_r1_0_63_24_26_i_11_n_0,P_reg_r1_0_63_24_26_i_11_n_1,P_reg_r1_0_63_24_26_i_11_n_2,P_reg_r1_0_63_24_26_i_11_n_3}),
        .CYINIT(1'b0),
        .DI({P_reg_r1_0_63_24_26_i_18_n_0,P_reg_r1_0_63_24_26_i_19_n_0,P_reg_r1_0_63_24_26_i_20_n_0,P_reg_r1_0_63_24_26_i_21_n_0}),
        .O({P_reg_r1_0_63_24_26_i_11_n_4,P_reg_r1_0_63_24_26_i_11_n_5,P_reg_r1_0_63_24_26_i_11_n_6,P_reg_r1_0_63_24_26_i_11_n_7}),
        .S({P_reg_r1_0_63_24_26_i_22_n_0,P_reg_r1_0_63_24_26_i_23_n_0,P_reg_r1_0_63_24_26_i_24_n_0,P_reg_r1_0_63_24_26_i_25_n_0}));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_12
       (.I0(P_reg_r4_192_255_24_26_n_0),
        .I1(P_reg_r4_128_191_24_26_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_24_26_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_24_26_n_0),
        .O(P_reg_r1_0_63_24_26_i_12_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_24_26_i_13
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[25]),
        .I2(temp0[25]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[25]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_24_26_i_13_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_14
       (.I0(P_reg_r4_192_255_24_26_n_1),
        .I1(P_reg_r4_128_191_24_26_n_1),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_24_26_n_1),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_24_26_n_1),
        .O(P_reg_r1_0_63_24_26_i_14_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_24_26_i_15
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[26]),
        .I2(temp0[26]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[26]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_24_26_i_15_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_16
       (.I0(P_reg_r4_192_255_24_26_n_2),
        .I1(P_reg_r4_128_191_24_26_n_2),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_24_26_n_2),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_24_26_n_2),
        .O(P_reg_r1_0_63_24_26_i_16_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_17
       (.I0(P_reg_r3_192_255_24_26_n_0),
        .I1(P_reg_r3_128_191_24_26_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_24_26_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_24_26_n_0),
        .O(sorting_state3[24]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_18
       (.I0(P_reg_r5_192_255_27_29_n_0),
        .I1(P_reg_r5_128_191_27_29_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_27_29_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_27_29_n_0),
        .O(P_reg_r1_0_63_24_26_i_18_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_19
       (.I0(P_reg_r5_192_255_24_26_n_2),
        .I1(P_reg_r5_128_191_24_26_n_2),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_24_26_n_2),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_24_26_n_2),
        .O(P_reg_r1_0_63_24_26_i_19_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_24_26_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_22),
        .I2(p_2_out[25]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_24_26_i_7_n_0),
        .O(P[25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_20
       (.I0(P_reg_r5_192_255_24_26_n_1),
        .I1(P_reg_r5_128_191_24_26_n_1),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_24_26_n_1),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_24_26_n_1),
        .O(P_reg_r1_0_63_24_26_i_20_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_21
       (.I0(P_reg_r5_192_255_24_26_n_0),
        .I1(P_reg_r5_128_191_24_26_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_24_26_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_24_26_n_0),
        .O(P_reg_r1_0_63_24_26_i_21_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_24_26_i_22
       (.I0(P_reg_r1_0_63_24_26_i_18_n_0),
        .I1(p_7_out[27]),
        .O(P_reg_r1_0_63_24_26_i_22_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_24_26_i_23
       (.I0(P_reg_r1_0_63_24_26_i_19_n_0),
        .I1(p_7_out[26]),
        .O(P_reg_r1_0_63_24_26_i_23_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_24_26_i_24
       (.I0(P_reg_r1_0_63_24_26_i_20_n_0),
        .I1(p_7_out[25]),
        .O(P_reg_r1_0_63_24_26_i_24_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_24_26_i_25
       (.I0(P_reg_r1_0_63_24_26_i_21_n_0),
        .I1(p_7_out[24]),
        .O(P_reg_r1_0_63_24_26_i_25_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_26
       (.I0(P_reg_r3_192_255_24_26_n_1),
        .I1(P_reg_r3_128_191_24_26_n_1),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_24_26_n_1),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_24_26_n_1),
        .O(sorting_state3[25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_27
       (.I0(P_reg_r3_192_255_24_26_n_2),
        .I1(P_reg_r3_128_191_24_26_n_2),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_24_26_n_2),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_24_26_n_2),
        .O(sorting_state3[26]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_28
       (.I0(P_reg_r6_192_255_27_29_n_0),
        .I1(P_reg_r6_128_191_27_29_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_27_29_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_27_29_n_0),
        .O(p_7_out[27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_29
       (.I0(P_reg_r6_192_255_24_26_n_2),
        .I1(P_reg_r6_128_191_24_26_n_2),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_24_26_n_2),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_24_26_n_2),
        .O(p_7_out[26]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_24_26_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_21),
        .I2(p_2_out[26]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_24_26_i_9_n_0),
        .O(P[26]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_30
       (.I0(P_reg_r6_192_255_24_26_n_1),
        .I1(P_reg_r6_128_191_24_26_n_1),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_24_26_n_1),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_24_26_n_1),
        .O(p_7_out[25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_31
       (.I0(P_reg_r6_192_255_24_26_n_0),
        .I1(P_reg_r6_128_191_24_26_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_24_26_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_24_26_n_0),
        .O(p_7_out[24]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_4
       (.I0(P_reg_r7_192_255_24_26_n_0),
        .I1(P_reg_r7_128_191_24_26_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_24_26_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_24_26_n_0),
        .O(p_2_out[24]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_24_26_i_5
       (.I0(P_reg_r1_0_63_24_26_i_10_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_24_26_i_11_n_7),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_24_26_i_12_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_24_26_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_6
       (.I0(P_reg_r7_192_255_24_26_n_1),
        .I1(P_reg_r7_128_191_24_26_n_1),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_24_26_n_1),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_24_26_n_1),
        .O(p_2_out[25]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_24_26_i_7
       (.I0(P_reg_r1_0_63_24_26_i_13_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_24_26_i_11_n_6),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_24_26_i_14_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_24_26_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_24_26_i_8
       (.I0(P_reg_r7_192_255_24_26_n_2),
        .I1(P_reg_r7_128_191_24_26_n_2),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_24_26_n_2),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_24_26_n_2),
        .O(p_2_out[26]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_24_26_i_9
       (.I0(P_reg_r1_0_63_24_26_i_15_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_24_26_i_11_n_5),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_24_26_i_16_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_24_26_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1951 P_reg_r1_0_63_27_29
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r1_0_63_27_29_n_0),
        .DOB(P_reg_r1_0_63_27_29_n_1),
        .DOC(P_reg_r1_0_63_27_29_n_2),
        .DOD(NLW_P_reg_r1_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_27_29_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_20),
        .I2(p_2_out[27]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_27_29_i_5_n_0),
        .O(P[27]));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_27_29_i_10
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[27]),
        .I2(temp0[27]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[27]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_27_29_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_11
       (.I0(P_reg_r4_192_255_27_29_n_0),
        .I1(P_reg_r4_128_191_27_29_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_27_29_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_27_29_n_0),
        .O(P_reg_r1_0_63_27_29_i_11_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_27_29_i_12
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[28]),
        .I2(temp0[28]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[28]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_27_29_i_12_n_0));
  CARRY4 P_reg_r1_0_63_27_29_i_13
       (.CI(P_reg_r1_0_63_24_26_i_11_n_0),
        .CO({NLW_P_reg_r1_0_63_27_29_i_13_CO_UNCONNECTED[3],P_reg_r1_0_63_27_29_i_13_n_1,P_reg_r1_0_63_27_29_i_13_n_2,P_reg_r1_0_63_27_29_i_13_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,P_reg_r1_0_63_27_29_i_19_n_0,P_reg_r1_0_63_27_29_i_20_n_0,P_reg_r1_0_63_27_29_i_21_n_0}),
        .O({P_reg_r1_0_63_27_29_i_13_n_4,P_reg_r1_0_63_27_29_i_13_n_5,P_reg_r1_0_63_27_29_i_13_n_6,P_reg_r1_0_63_27_29_i_13_n_7}),
        .S({P_reg_r1_0_63_27_29_i_22_n_0,P_reg_r1_0_63_27_29_i_23_n_0,P_reg_r1_0_63_27_29_i_24_n_0,P_reg_r1_0_63_27_29_i_25_n_0}));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_14
       (.I0(P_reg_r4_192_255_27_29_n_1),
        .I1(P_reg_r4_128_191_27_29_n_1),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_27_29_n_1),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_27_29_n_1),
        .O(P_reg_r1_0_63_27_29_i_14_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_27_29_i_15
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[29]),
        .I2(temp0[29]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[29]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_27_29_i_15_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_16
       (.I0(P_reg_r4_192_255_27_29_n_2),
        .I1(P_reg_r4_128_191_27_29_n_2),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_27_29_n_2),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_27_29_n_2),
        .O(P_reg_r1_0_63_27_29_i_16_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_17
       (.I0(P_reg_r3_192_255_27_29_n_0),
        .I1(P_reg_r3_128_191_27_29_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_27_29_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_27_29_n_0),
        .O(sorting_state3[27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_18
       (.I0(P_reg_r3_192_255_27_29_n_1),
        .I1(P_reg_r3_128_191_27_29_n_1),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_27_29_n_1),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_27_29_n_1),
        .O(sorting_state3[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_19
       (.I0(P_reg_r5_192_255_30_30_n_0),
        .I1(P_reg_r5_128_191_30_30_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_30_30_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_30_30_n_0),
        .O(P_reg_r1_0_63_27_29_i_19_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_27_29_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_19),
        .I2(p_2_out[28]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_27_29_i_7_n_0),
        .O(P[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_20
       (.I0(P_reg_r5_192_255_27_29_n_2),
        .I1(P_reg_r5_128_191_27_29_n_2),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_27_29_n_2),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_27_29_n_2),
        .O(P_reg_r1_0_63_27_29_i_20_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_21
       (.I0(P_reg_r5_192_255_27_29_n_1),
        .I1(P_reg_r5_128_191_27_29_n_1),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_27_29_n_1),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_27_29_n_1),
        .O(P_reg_r1_0_63_27_29_i_21_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_27_29_i_22
       (.I0(P_reg_r1_0_63_27_29_i_27_n_0),
        .I1(p_7_out[31]),
        .O(P_reg_r1_0_63_27_29_i_22_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_27_29_i_23
       (.I0(P_reg_r1_0_63_27_29_i_19_n_0),
        .I1(p_7_out[30]),
        .O(P_reg_r1_0_63_27_29_i_23_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_27_29_i_24
       (.I0(P_reg_r1_0_63_27_29_i_20_n_0),
        .I1(p_7_out[29]),
        .O(P_reg_r1_0_63_27_29_i_24_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_27_29_i_25
       (.I0(P_reg_r1_0_63_27_29_i_21_n_0),
        .I1(p_7_out[28]),
        .O(P_reg_r1_0_63_27_29_i_25_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_26
       (.I0(P_reg_r3_192_255_27_29_n_2),
        .I1(P_reg_r3_128_191_27_29_n_2),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_27_29_n_2),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_27_29_n_2),
        .O(sorting_state3[29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_27
       (.I0(P_reg_r5_192_255_31_31_n_0),
        .I1(P_reg_r5_128_191_31_31_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_31_31_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_31_31_n_0),
        .O(P_reg_r1_0_63_27_29_i_27_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_28
       (.I0(P_reg_r6_192_255_31_31_n_0),
        .I1(P_reg_r6_128_191_31_31_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_31_31_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_31_31_n_0),
        .O(p_7_out[31]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_29
       (.I0(P_reg_r6_192_255_30_30_n_0),
        .I1(P_reg_r6_128_191_30_30_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_30_30_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_30_30_n_0),
        .O(p_7_out[30]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_27_29_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_18),
        .I2(p_2_out[29]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_27_29_i_9_n_0),
        .O(P[29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_30
       (.I0(P_reg_r6_192_255_27_29_n_2),
        .I1(P_reg_r6_128_191_27_29_n_2),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_27_29_n_2),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_27_29_n_2),
        .O(p_7_out[29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_31
       (.I0(P_reg_r6_192_255_27_29_n_1),
        .I1(P_reg_r6_128_191_27_29_n_1),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_27_29_n_1),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_27_29_n_1),
        .O(p_7_out[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_4
       (.I0(P_reg_r7_192_255_27_29_n_0),
        .I1(P_reg_r7_128_191_27_29_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_27_29_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_27_29_n_0),
        .O(p_2_out[27]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_27_29_i_5
       (.I0(P_reg_r1_0_63_27_29_i_10_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_24_26_i_11_n_4),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_27_29_i_11_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_27_29_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_6
       (.I0(P_reg_r7_192_255_27_29_n_1),
        .I1(P_reg_r7_128_191_27_29_n_1),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_27_29_n_1),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_27_29_n_1),
        .O(p_2_out[28]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_27_29_i_7
       (.I0(P_reg_r1_0_63_27_29_i_12_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_27_29_i_13_n_7),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_27_29_i_14_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_27_29_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_27_29_i_8
       (.I0(P_reg_r7_192_255_27_29_n_2),
        .I1(P_reg_r7_128_191_27_29_n_2),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_27_29_n_2),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_27_29_n_2),
        .O(p_2_out[29]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_27_29_i_9
       (.I0(P_reg_r1_0_63_27_29_i_15_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_27_29_i_13_n_6),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_27_29_i_16_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_27_29_i_9_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1952 P_reg_r1_0_63_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r1_0_63_30_30_n_0),
        .DPRA0(position_reg_rep__1__0[0]),
        .DPRA1(position_reg_rep__1__0[1]),
        .DPRA2(position_reg_rep__1__0[2]),
        .DPRA3(position_reg_rep__1__0[3]),
        .DPRA4(position_reg_rep__1__0[4]),
        .DPRA5(position_reg_rep__1__0[5]),
        .SPO(NLW_P_reg_r1_0_63_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_30_30_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_17),
        .I2(p_2_out[30]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_30_30_i_3_n_0),
        .O(P[30]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_30_30_i_2
       (.I0(P_reg_r7_192_255_30_30_n_0),
        .I1(P_reg_r7_128_191_30_30_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_30_30_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_30_30_n_0),
        .O(p_2_out[30]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_30_30_i_3
       (.I0(P_reg_r1_0_63_30_30_i_4_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_27_29_i_13_n_5),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_30_30_i_5_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_30_30_i_3_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_30_30_i_4
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[30]),
        .I2(temp0[30]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[30]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_30_30_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_30_30_i_5
       (.I0(P_reg_r4_192_255_30_30_n_0),
        .I1(P_reg_r4_128_191_30_30_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_30_30_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_30_30_n_0),
        .O(P_reg_r1_0_63_30_30_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_30_30_i_6
       (.I0(P_reg_r3_192_255_30_30_n_0),
        .I1(P_reg_r3_128_191_30_30_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_30_30_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_30_30_n_0),
        .O(sorting_state3[30]));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1953 P_reg_r1_0_63_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r1_0_63_31_31_n_0),
        .DPRA0(position_reg_rep__1__0[0]),
        .DPRA1(position_reg_rep__1__0[1]),
        .DPRA2(position_reg_rep__1__0[2]),
        .DPRA3(position_reg_rep__1__0[3]),
        .DPRA4(position_reg_rep__1__0[4]),
        .DPRA5(position_reg_rep__1__0[5]),
        .SPO(NLW_P_reg_r1_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_31_31_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_16),
        .I2(p_2_out[31]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_31_31_i_3_n_0),
        .O(P[31]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_31_31_i_2
       (.I0(P_reg_r7_192_255_31_31_n_0),
        .I1(P_reg_r7_128_191_31_31_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_31_31_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_31_31_n_0),
        .O(p_2_out[31]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_31_31_i_3
       (.I0(P_reg_r1_0_63_31_31_i_4_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_27_29_i_13_n_4),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_31_31_i_5_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_31_31_i_3_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_31_31_i_4
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[31]),
        .I2(temp0[31]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[31]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_31_31_i_4_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_31_31_i_5
       (.I0(P_reg_r4_192_255_31_31_n_0),
        .I1(P_reg_r4_128_191_31_31_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_31_31_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_31_31_n_0),
        .O(P_reg_r1_0_63_31_31_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_31_31_i_6
       (.I0(P_reg_r3_192_255_31_31_n_0),
        .I1(P_reg_r3_128_191_31_31_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_31_31_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_31_31_n_0),
        .O(sorting_state3[31]));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1954 P_reg_r1_0_63_3_5
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r1_0_63_3_5_n_0),
        .DOB(P_reg_r1_0_63_3_5_n_1),
        .DOC(P_reg_r1_0_63_3_5_n_2),
        .DOD(NLW_P_reg_r1_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_3_5_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_12),
        .I2(p_2_out[3]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_3_5_i_5_n_0),
        .O(P[3]));
  LUT6 #(
    .INIT(64'hA8A8A8202020A820)) 
    P_reg_r1_0_63_3_5_i_10
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp[3]),
        .I3(temp0[3]),
        .I4(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I5(sorting_state3[3]),
        .O(P_reg_r1_0_63_3_5_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_11
       (.I0(P_reg_r4_192_255_3_5_n_0),
        .I1(P_reg_r4_128_191_3_5_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_3_5_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_3_5_n_0),
        .O(P_reg_r1_0_63_3_5_i_11_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_3_5_i_12
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[4]),
        .I2(temp0[4]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[4]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_3_5_i_12_n_0));
  CARRY4 P_reg_r1_0_63_3_5_i_13
       (.CI(P_reg_r1_0_63_0_2_i_29_n_0),
        .CO({P_reg_r1_0_63_3_5_i_13_n_0,P_reg_r1_0_63_3_5_i_13_n_1,P_reg_r1_0_63_3_5_i_13_n_2,P_reg_r1_0_63_3_5_i_13_n_3}),
        .CYINIT(1'b0),
        .DI({P_reg_r1_0_63_3_5_i_19_n_0,P_reg_r1_0_63_3_5_i_20_n_0,P_reg_r1_0_63_3_5_i_21_n_0,P_reg_r1_0_63_3_5_i_22_n_0}),
        .O({P_reg_r1_0_63_3_5_i_13_n_4,P_reg_r1_0_63_3_5_i_13_n_5,P_reg_r1_0_63_3_5_i_13_n_6,P_reg_r1_0_63_3_5_i_13_n_7}),
        .S({P_reg_r1_0_63_3_5_i_23_n_0,P_reg_r1_0_63_3_5_i_24_n_0,P_reg_r1_0_63_3_5_i_25_n_0,P_reg_r1_0_63_3_5_i_26_n_0}));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_14
       (.I0(P_reg_r4_192_255_3_5_n_1),
        .I1(P_reg_r4_128_191_3_5_n_1),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_3_5_n_1),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_3_5_n_1),
        .O(P_reg_r1_0_63_3_5_i_14_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_3_5_i_15
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[5]),
        .I2(temp0[5]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[5]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_3_5_i_15_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_16
       (.I0(P_reg_r4_192_255_3_5_n_2),
        .I1(P_reg_r4_128_191_3_5_n_2),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_3_5_n_2),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_3_5_n_2),
        .O(P_reg_r1_0_63_3_5_i_16_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_17
       (.I0(P_reg_r3_192_255_3_5_n_0),
        .I1(P_reg_r3_128_191_3_5_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_3_5_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_3_5_n_0),
        .O(sorting_state3[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_18
       (.I0(P_reg_r3_192_255_3_5_n_1),
        .I1(P_reg_r3_128_191_3_5_n_1),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_3_5_n_1),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_3_5_n_1),
        .O(sorting_state3[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_19
       (.I0(P_reg_r5_192_255_6_8_n_1),
        .I1(P_reg_r5_128_191_6_8_n_1),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_6_8_n_1),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_6_8_n_1),
        .O(P_reg_r1_0_63_3_5_i_19_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_3_5_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_11),
        .I2(p_2_out[4]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_3_5_i_7_n_0),
        .O(P[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_20
       (.I0(P_reg_r5_192_255_6_8_n_0),
        .I1(P_reg_r5_128_191_6_8_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_6_8_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_6_8_n_0),
        .O(P_reg_r1_0_63_3_5_i_20_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_21
       (.I0(P_reg_r5_192_255_3_5_n_2),
        .I1(P_reg_r5_128_191_3_5_n_2),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_3_5_n_2),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_3_5_n_2),
        .O(P_reg_r1_0_63_3_5_i_21_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_22
       (.I0(P_reg_r5_192_255_3_5_n_1),
        .I1(P_reg_r5_128_191_3_5_n_1),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_3_5_n_1),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_3_5_n_1),
        .O(P_reg_r1_0_63_3_5_i_22_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_3_5_i_23
       (.I0(P_reg_r1_0_63_3_5_i_19_n_0),
        .I1(p_7_out[7]),
        .O(P_reg_r1_0_63_3_5_i_23_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_3_5_i_24
       (.I0(P_reg_r1_0_63_3_5_i_20_n_0),
        .I1(p_7_out[6]),
        .O(P_reg_r1_0_63_3_5_i_24_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_3_5_i_25
       (.I0(P_reg_r1_0_63_3_5_i_21_n_0),
        .I1(p_7_out[5]),
        .O(P_reg_r1_0_63_3_5_i_25_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_3_5_i_26
       (.I0(P_reg_r1_0_63_3_5_i_22_n_0),
        .I1(p_7_out[4]),
        .O(P_reg_r1_0_63_3_5_i_26_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_27
       (.I0(P_reg_r3_192_255_3_5_n_2),
        .I1(P_reg_r3_128_191_3_5_n_2),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_3_5_n_2),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_3_5_n_2),
        .O(sorting_state3[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_28
       (.I0(P_reg_r6_192_255_6_8_n_1),
        .I1(P_reg_r6_128_191_6_8_n_1),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_6_8_n_1),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_6_8_n_1),
        .O(p_7_out[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_29
       (.I0(P_reg_r6_192_255_6_8_n_0),
        .I1(P_reg_r6_128_191_6_8_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_6_8_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_6_8_n_0),
        .O(p_7_out[6]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_3_5_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_10),
        .I2(p_2_out[5]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_3_5_i_9_n_0),
        .O(P[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_30
       (.I0(P_reg_r6_192_255_3_5_n_2),
        .I1(P_reg_r6_128_191_3_5_n_2),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_3_5_n_2),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_3_5_n_2),
        .O(p_7_out[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_31
       (.I0(P_reg_r6_192_255_3_5_n_1),
        .I1(P_reg_r6_128_191_3_5_n_1),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_3_5_n_1),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_3_5_n_1),
        .O(p_7_out[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_4
       (.I0(P_reg_r7_192_255_3_5_n_0),
        .I1(P_reg_r7_128_191_3_5_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_3_5_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_3_5_n_0),
        .O(p_2_out[3]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_3_5_i_5
       (.I0(P_reg_r1_0_63_3_5_i_10_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_0_2_i_29_n_4),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_3_5_i_11_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_3_5_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_6
       (.I0(P_reg_r7_192_255_3_5_n_1),
        .I1(P_reg_r7_128_191_3_5_n_1),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_3_5_n_1),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_3_5_n_1),
        .O(p_2_out[4]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_3_5_i_7
       (.I0(P_reg_r1_0_63_3_5_i_12_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_3_5_i_13_n_7),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_3_5_i_14_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_3_5_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_3_5_i_8
       (.I0(P_reg_r7_192_255_3_5_n_2),
        .I1(P_reg_r7_128_191_3_5_n_2),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_3_5_n_2),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_3_5_n_2),
        .O(p_2_out[5]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_3_5_i_9
       (.I0(P_reg_r1_0_63_3_5_i_15_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_3_5_i_13_n_6),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_3_5_i_16_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_3_5_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1955 P_reg_r1_0_63_6_8
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r1_0_63_6_8_n_0),
        .DOB(P_reg_r1_0_63_6_8_n_1),
        .DOC(P_reg_r1_0_63_6_8_n_2),
        .DOD(NLW_P_reg_r1_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_6_8_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_9),
        .I2(p_2_out[6]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_6_8_i_5_n_0),
        .O(P[6]));
  LUT6 #(
    .INIT(64'hA8A8A8202020A820)) 
    P_reg_r1_0_63_6_8_i_10
       (.I0(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[0] ),
        .I2(temp[6]),
        .I3(temp0[6]),
        .I4(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I5(sorting_state3[6]),
        .O(P_reg_r1_0_63_6_8_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_11
       (.I0(P_reg_r4_192_255_6_8_n_0),
        .I1(P_reg_r4_128_191_6_8_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_6_8_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_6_8_n_0),
        .O(P_reg_r1_0_63_6_8_i_11_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_6_8_i_12
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[7]),
        .I2(temp0[7]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[7]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_6_8_i_12_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_13
       (.I0(P_reg_r4_192_255_6_8_n_1),
        .I1(P_reg_r4_128_191_6_8_n_1),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_6_8_n_1),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_6_8_n_1),
        .O(P_reg_r1_0_63_6_8_i_13_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_6_8_i_14
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[8]),
        .I2(temp0[8]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[8]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_6_8_i_14_n_0));
  CARRY4 P_reg_r1_0_63_6_8_i_15
       (.CI(P_reg_r1_0_63_3_5_i_13_n_0),
        .CO({P_reg_r1_0_63_6_8_i_15_n_0,P_reg_r1_0_63_6_8_i_15_n_1,P_reg_r1_0_63_6_8_i_15_n_2,P_reg_r1_0_63_6_8_i_15_n_3}),
        .CYINIT(1'b0),
        .DI({P_reg_r1_0_63_6_8_i_20_n_0,P_reg_r1_0_63_6_8_i_21_n_0,P_reg_r1_0_63_6_8_i_22_n_0,P_reg_r1_0_63_6_8_i_23_n_0}),
        .O({P_reg_r1_0_63_6_8_i_15_n_4,P_reg_r1_0_63_6_8_i_15_n_5,P_reg_r1_0_63_6_8_i_15_n_6,P_reg_r1_0_63_6_8_i_15_n_7}),
        .S({P_reg_r1_0_63_6_8_i_24_n_0,P_reg_r1_0_63_6_8_i_25_n_0,P_reg_r1_0_63_6_8_i_26_n_0,P_reg_r1_0_63_6_8_i_27_n_0}));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_16
       (.I0(P_reg_r4_192_255_6_8_n_2),
        .I1(P_reg_r4_128_191_6_8_n_2),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_6_8_n_2),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_6_8_n_2),
        .O(P_reg_r1_0_63_6_8_i_16_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_17
       (.I0(P_reg_r3_192_255_6_8_n_0),
        .I1(P_reg_r3_128_191_6_8_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_6_8_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_6_8_n_0),
        .O(sorting_state3[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_18
       (.I0(P_reg_r3_192_255_6_8_n_1),
        .I1(P_reg_r3_128_191_6_8_n_1),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_6_8_n_1),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_6_8_n_1),
        .O(sorting_state3[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_19
       (.I0(P_reg_r3_192_255_6_8_n_2),
        .I1(P_reg_r3_128_191_6_8_n_2),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_6_8_n_2),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_6_8_n_2),
        .O(sorting_state3[8]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_6_8_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_8),
        .I2(p_2_out[7]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_6_8_i_7_n_0),
        .O(P[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_20
       (.I0(P_reg_r5_192_255_9_11_n_2),
        .I1(P_reg_r5_128_191_9_11_n_2),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_9_11_n_2),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_9_11_n_2),
        .O(P_reg_r1_0_63_6_8_i_20_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_21
       (.I0(P_reg_r5_192_255_9_11_n_1),
        .I1(P_reg_r5_128_191_9_11_n_1),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_9_11_n_1),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_9_11_n_1),
        .O(P_reg_r1_0_63_6_8_i_21_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_22
       (.I0(P_reg_r5_192_255_9_11_n_0),
        .I1(P_reg_r5_128_191_9_11_n_0),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_9_11_n_0),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_9_11_n_0),
        .O(P_reg_r1_0_63_6_8_i_22_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_23
       (.I0(P_reg_r5_192_255_6_8_n_2),
        .I1(P_reg_r5_128_191_6_8_n_2),
        .I2(p_4_in[7]),
        .I3(P_reg_r5_64_127_6_8_n_2),
        .I4(p_4_in[6]),
        .I5(P_reg_r5_0_63_6_8_n_2),
        .O(P_reg_r1_0_63_6_8_i_23_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_6_8_i_24
       (.I0(P_reg_r1_0_63_6_8_i_20_n_0),
        .I1(p_7_out[11]),
        .O(P_reg_r1_0_63_6_8_i_24_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_6_8_i_25
       (.I0(P_reg_r1_0_63_6_8_i_21_n_0),
        .I1(p_7_out[10]),
        .O(P_reg_r1_0_63_6_8_i_25_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_6_8_i_26
       (.I0(P_reg_r1_0_63_6_8_i_22_n_0),
        .I1(p_7_out[9]),
        .O(P_reg_r1_0_63_6_8_i_26_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    P_reg_r1_0_63_6_8_i_27
       (.I0(P_reg_r1_0_63_6_8_i_23_n_0),
        .I1(p_7_out[8]),
        .O(P_reg_r1_0_63_6_8_i_27_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_28
       (.I0(P_reg_r6_192_255_9_11_n_2),
        .I1(P_reg_r6_128_191_9_11_n_2),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_9_11_n_2),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_9_11_n_2),
        .O(p_7_out[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_29
       (.I0(P_reg_r6_192_255_9_11_n_1),
        .I1(P_reg_r6_128_191_9_11_n_1),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_9_11_n_1),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_9_11_n_1),
        .O(p_7_out[10]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_6_8_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_7),
        .I2(p_2_out[8]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_6_8_i_9_n_0),
        .O(P[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_30
       (.I0(P_reg_r6_192_255_9_11_n_0),
        .I1(P_reg_r6_128_191_9_11_n_0),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_9_11_n_0),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_9_11_n_0),
        .O(p_7_out[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_31
       (.I0(P_reg_r6_192_255_6_8_n_2),
        .I1(P_reg_r6_128_191_6_8_n_2),
        .I2(P_reg_r6_0_63_0_2_i_1_n_5),
        .I3(P_reg_r6_64_127_6_8_n_2),
        .I4(P_reg_r6_0_63_0_2_i_1_n_6),
        .I5(P_reg_r6_0_63_6_8_n_2),
        .O(p_7_out[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_4
       (.I0(P_reg_r7_192_255_6_8_n_0),
        .I1(P_reg_r7_128_191_6_8_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_6_8_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_6_8_n_0),
        .O(p_2_out[6]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_6_8_i_5
       (.I0(P_reg_r1_0_63_6_8_i_10_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_3_5_i_13_n_5),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_6_8_i_11_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_6_8_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_6
       (.I0(P_reg_r7_192_255_6_8_n_1),
        .I1(P_reg_r7_128_191_6_8_n_1),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_6_8_n_1),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_6_8_n_1),
        .O(p_2_out[7]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_6_8_i_7
       (.I0(P_reg_r1_0_63_6_8_i_12_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_3_5_i_13_n_4),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_6_8_i_13_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_6_8_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_6_8_i_8
       (.I0(P_reg_r7_192_255_6_8_n_2),
        .I1(P_reg_r7_128_191_6_8_n_2),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_6_8_n_2),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_6_8_n_2),
        .O(p_2_out[8]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_6_8_i_9
       (.I0(P_reg_r1_0_63_6_8_i_14_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_6_8_i_15_n_7),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_6_8_i_16_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_6_8_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1956 P_reg_r1_0_63_9_11
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r1_0_63_9_11_n_0),
        .DOB(P_reg_r1_0_63_9_11_n_1),
        .DOC(P_reg_r1_0_63_9_11_n_2),
        .DOD(NLW_P_reg_r1_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_9_11_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_6),
        .I2(p_2_out[9]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_9_11_i_5_n_0),
        .O(P[9]));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_9_11_i_10
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[9]),
        .I2(temp0[9]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[9]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_9_11_i_10_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_9_11_i_11
       (.I0(P_reg_r4_192_255_9_11_n_0),
        .I1(P_reg_r4_128_191_9_11_n_0),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_9_11_n_0),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_9_11_n_0),
        .O(P_reg_r1_0_63_9_11_i_11_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_9_11_i_12
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[10]),
        .I2(temp0[10]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[10]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_9_11_i_12_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_9_11_i_13
       (.I0(P_reg_r4_192_255_9_11_n_1),
        .I1(P_reg_r4_128_191_9_11_n_1),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_9_11_n_1),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_9_11_n_1),
        .O(P_reg_r1_0_63_9_11_i_13_n_0));
  LUT6 #(
    .INIT(64'hEEE444E400000000)) 
    P_reg_r1_0_63_9_11_i_14
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(temp[11]),
        .I2(temp0[11]),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state3[11]),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(P_reg_r1_0_63_9_11_i_14_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_9_11_i_15
       (.I0(P_reg_r4_192_255_9_11_n_2),
        .I1(P_reg_r4_128_191_9_11_n_2),
        .I2(counter_reg_rep__0[7]),
        .I3(P_reg_r4_64_127_9_11_n_2),
        .I4(counter_reg_rep__0[6]),
        .I5(P_reg_r4_0_63_9_11_n_2),
        .O(P_reg_r1_0_63_9_11_i_15_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_9_11_i_16
       (.I0(P_reg_r3_192_255_9_11_n_0),
        .I1(P_reg_r3_128_191_9_11_n_0),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_9_11_n_0),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_9_11_n_0),
        .O(sorting_state3[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_9_11_i_17
       (.I0(P_reg_r3_192_255_9_11_n_1),
        .I1(P_reg_r3_128_191_9_11_n_1),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_9_11_n_1),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_9_11_n_1),
        .O(sorting_state3[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_9_11_i_18
       (.I0(P_reg_r3_192_255_9_11_n_2),
        .I1(P_reg_r3_128_191_9_11_n_2),
        .I2(P_reg_r3_0_63_0_2_i_1_n_5),
        .I3(P_reg_r3_64_127_9_11_n_2),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .I5(P_reg_r3_0_63_9_11_n_2),
        .O(sorting_state3[11]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_9_11_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_5),
        .I2(p_2_out[10]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_9_11_i_7_n_0),
        .O(P[10]));
  LUT5 #(
    .INIT(32'hFFFF88A0)) 
    P_reg_r1_0_63_9_11_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[3] ),
        .I1(probabilities_tab_reg_n_4),
        .I2(p_2_out[11]),
        .I3(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I4(P_reg_r1_0_63_9_11_i_9_n_0),
        .O(P[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_9_11_i_4
       (.I0(P_reg_r7_192_255_9_11_n_0),
        .I1(P_reg_r7_128_191_9_11_n_0),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_9_11_n_0),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_9_11_n_0),
        .O(p_2_out[9]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_9_11_i_5
       (.I0(P_reg_r1_0_63_9_11_i_10_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_6_8_i_15_n_6),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_9_11_i_11_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_9_11_i_5_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_9_11_i_6
       (.I0(P_reg_r7_192_255_9_11_n_1),
        .I1(P_reg_r7_128_191_9_11_n_1),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_9_11_n_1),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_9_11_n_1),
        .O(p_2_out[10]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_9_11_i_7
       (.I0(P_reg_r1_0_63_9_11_i_12_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_6_8_i_15_n_5),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_9_11_i_13_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_9_11_i_7_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    P_reg_r1_0_63_9_11_i_8
       (.I0(P_reg_r7_192_255_9_11_n_2),
        .I1(P_reg_r7_128_191_9_11_n_2),
        .I2(i_reg_rep__2__0[7]),
        .I3(P_reg_r7_64_127_9_11_n_2),
        .I4(i_reg_rep__2__0[6]),
        .I5(P_reg_r7_0_63_9_11_n_2),
        .O(p_2_out[11]));
  LUT6 #(
    .INIT(64'hFFEAEAEA00000000)) 
    P_reg_r1_0_63_9_11_i_9
       (.I0(P_reg_r1_0_63_9_11_i_14_n_0),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[2] ),
        .I2(P_reg_r1_0_63_6_8_i_15_n_4),
        .I3(\FSM_onehot_building_tree_state_reg_n_0_[1] ),
        .I4(P_reg_r1_0_63_9_11_i_15_n_0),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(P_reg_r1_0_63_9_11_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1957 P_reg_r1_128_191_0_2
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r1_128_191_0_2_n_0),
        .DOB(P_reg_r1_128_191_0_2_n_1),
        .DOC(P_reg_r1_128_191_0_2_n_2),
        .DOD(NLW_P_reg_r1_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    P_reg_r1_128_191_0_2_i_1
       (.I0(p_8_in[6]),
        .I1(p_8_in[7]),
        .I2(P_reg_r1_0_63_0_2_i_18_n_0),
        .O(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1958 P_reg_r1_128_191_12_14
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r1_128_191_12_14_n_0),
        .DOB(P_reg_r1_128_191_12_14_n_1),
        .DOC(P_reg_r1_128_191_12_14_n_2),
        .DOD(NLW_P_reg_r1_128_191_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1959 P_reg_r1_128_191_15_17
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r1_128_191_15_17_n_0),
        .DOB(P_reg_r1_128_191_15_17_n_1),
        .DOC(P_reg_r1_128_191_15_17_n_2),
        .DOD(NLW_P_reg_r1_128_191_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1960 P_reg_r1_128_191_18_20
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r1_128_191_18_20_n_0),
        .DOB(P_reg_r1_128_191_18_20_n_1),
        .DOC(P_reg_r1_128_191_18_20_n_2),
        .DOD(NLW_P_reg_r1_128_191_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1961 P_reg_r1_128_191_21_23
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r1_128_191_21_23_n_0),
        .DOB(P_reg_r1_128_191_21_23_n_1),
        .DOC(P_reg_r1_128_191_21_23_n_2),
        .DOD(NLW_P_reg_r1_128_191_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1962 P_reg_r1_128_191_24_26
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r1_128_191_24_26_n_0),
        .DOB(P_reg_r1_128_191_24_26_n_1),
        .DOC(P_reg_r1_128_191_24_26_n_2),
        .DOD(NLW_P_reg_r1_128_191_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1963 P_reg_r1_128_191_27_29
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r1_128_191_27_29_n_0),
        .DOB(P_reg_r1_128_191_27_29_n_1),
        .DOC(P_reg_r1_128_191_27_29_n_2),
        .DOD(NLW_P_reg_r1_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1964 P_reg_r1_128_191_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r1_128_191_30_30_n_0),
        .DPRA0(position_reg_rep__1__0[0]),
        .DPRA1(position_reg_rep__1__0[1]),
        .DPRA2(position_reg_rep__1__0[2]),
        .DPRA3(position_reg_rep__1__0[3]),
        .DPRA4(position_reg_rep__1__0[4]),
        .DPRA5(position_reg_rep__1__0[5]),
        .SPO(NLW_P_reg_r1_128_191_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1965 P_reg_r1_128_191_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r1_128_191_31_31_n_0),
        .DPRA0(position_reg_rep__1__0[0]),
        .DPRA1(position_reg_rep__1__0[1]),
        .DPRA2(position_reg_rep__1__0[2]),
        .DPRA3(position_reg_rep__1__0[3]),
        .DPRA4(position_reg_rep__1__0[4]),
        .DPRA5(position_reg_rep__1__0[5]),
        .SPO(NLW_P_reg_r1_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1966 P_reg_r1_128_191_3_5
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r1_128_191_3_5_n_0),
        .DOB(P_reg_r1_128_191_3_5_n_1),
        .DOC(P_reg_r1_128_191_3_5_n_2),
        .DOD(NLW_P_reg_r1_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1967 P_reg_r1_128_191_6_8
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r1_128_191_6_8_n_0),
        .DOB(P_reg_r1_128_191_6_8_n_1),
        .DOC(P_reg_r1_128_191_6_8_n_2),
        .DOD(NLW_P_reg_r1_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1968 P_reg_r1_128_191_9_11
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r1_128_191_9_11_n_0),
        .DOB(P_reg_r1_128_191_9_11_n_1),
        .DOC(P_reg_r1_128_191_9_11_n_2),
        .DOD(NLW_P_reg_r1_128_191_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1969 P_reg_r1_192_255_0_2
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r1_192_255_0_2_n_0),
        .DOB(P_reg_r1_192_255_0_2_n_1),
        .DOC(P_reg_r1_192_255_0_2_n_2),
        .DOD(NLW_P_reg_r1_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    P_reg_r1_192_255_0_2_i_1
       (.I0(P_reg_r1_0_63_0_2_i_18_n_0),
        .I1(p_8_in[6]),
        .I2(p_8_in[7]),
        .O(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1970 P_reg_r1_192_255_12_14
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r1_192_255_12_14_n_0),
        .DOB(P_reg_r1_192_255_12_14_n_1),
        .DOC(P_reg_r1_192_255_12_14_n_2),
        .DOD(NLW_P_reg_r1_192_255_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1971 P_reg_r1_192_255_15_17
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r1_192_255_15_17_n_0),
        .DOB(P_reg_r1_192_255_15_17_n_1),
        .DOC(P_reg_r1_192_255_15_17_n_2),
        .DOD(NLW_P_reg_r1_192_255_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1972 P_reg_r1_192_255_18_20
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r1_192_255_18_20_n_0),
        .DOB(P_reg_r1_192_255_18_20_n_1),
        .DOC(P_reg_r1_192_255_18_20_n_2),
        .DOD(NLW_P_reg_r1_192_255_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1973 P_reg_r1_192_255_21_23
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r1_192_255_21_23_n_0),
        .DOB(P_reg_r1_192_255_21_23_n_1),
        .DOC(P_reg_r1_192_255_21_23_n_2),
        .DOD(NLW_P_reg_r1_192_255_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1974 P_reg_r1_192_255_24_26
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r1_192_255_24_26_n_0),
        .DOB(P_reg_r1_192_255_24_26_n_1),
        .DOC(P_reg_r1_192_255_24_26_n_2),
        .DOD(NLW_P_reg_r1_192_255_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1975 P_reg_r1_192_255_27_29
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r1_192_255_27_29_n_0),
        .DOB(P_reg_r1_192_255_27_29_n_1),
        .DOC(P_reg_r1_192_255_27_29_n_2),
        .DOD(NLW_P_reg_r1_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1976 P_reg_r1_192_255_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r1_192_255_30_30_n_0),
        .DPRA0(position_reg_rep__1__0[0]),
        .DPRA1(position_reg_rep__1__0[1]),
        .DPRA2(position_reg_rep__1__0[2]),
        .DPRA3(position_reg_rep__1__0[3]),
        .DPRA4(position_reg_rep__1__0[4]),
        .DPRA5(position_reg_rep__1__0[5]),
        .SPO(NLW_P_reg_r1_192_255_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1977 P_reg_r1_192_255_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r1_192_255_31_31_n_0),
        .DPRA0(position_reg_rep__1__0[0]),
        .DPRA1(position_reg_rep__1__0[1]),
        .DPRA2(position_reg_rep__1__0[2]),
        .DPRA3(position_reg_rep__1__0[3]),
        .DPRA4(position_reg_rep__1__0[4]),
        .DPRA5(position_reg_rep__1__0[5]),
        .SPO(NLW_P_reg_r1_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1978 P_reg_r1_192_255_3_5
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r1_192_255_3_5_n_0),
        .DOB(P_reg_r1_192_255_3_5_n_1),
        .DOC(P_reg_r1_192_255_3_5_n_2),
        .DOD(NLW_P_reg_r1_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1979 P_reg_r1_192_255_6_8
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r1_192_255_6_8_n_0),
        .DOB(P_reg_r1_192_255_6_8_n_1),
        .DOC(P_reg_r1_192_255_6_8_n_2),
        .DOD(NLW_P_reg_r1_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1980 P_reg_r1_192_255_9_11
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r1_192_255_9_11_n_0),
        .DOB(P_reg_r1_192_255_9_11_n_1),
        .DOC(P_reg_r1_192_255_9_11_n_2),
        .DOD(NLW_P_reg_r1_192_255_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1981 P_reg_r1_64_127_0_2
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r1_64_127_0_2_n_0),
        .DOB(P_reg_r1_64_127_0_2_n_1),
        .DOC(P_reg_r1_64_127_0_2_n_2),
        .DOD(NLW_P_reg_r1_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    P_reg_r1_64_127_0_2_i_1
       (.I0(p_8_in[7]),
        .I1(p_8_in[6]),
        .I2(P_reg_r1_0_63_0_2_i_18_n_0),
        .O(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1982 P_reg_r1_64_127_12_14
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r1_64_127_12_14_n_0),
        .DOB(P_reg_r1_64_127_12_14_n_1),
        .DOC(P_reg_r1_64_127_12_14_n_2),
        .DOD(NLW_P_reg_r1_64_127_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1983 P_reg_r1_64_127_15_17
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r1_64_127_15_17_n_0),
        .DOB(P_reg_r1_64_127_15_17_n_1),
        .DOC(P_reg_r1_64_127_15_17_n_2),
        .DOD(NLW_P_reg_r1_64_127_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1984 P_reg_r1_64_127_18_20
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r1_64_127_18_20_n_0),
        .DOB(P_reg_r1_64_127_18_20_n_1),
        .DOC(P_reg_r1_64_127_18_20_n_2),
        .DOD(NLW_P_reg_r1_64_127_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1985 P_reg_r1_64_127_21_23
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r1_64_127_21_23_n_0),
        .DOB(P_reg_r1_64_127_21_23_n_1),
        .DOC(P_reg_r1_64_127_21_23_n_2),
        .DOD(NLW_P_reg_r1_64_127_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1986 P_reg_r1_64_127_24_26
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r1_64_127_24_26_n_0),
        .DOB(P_reg_r1_64_127_24_26_n_1),
        .DOC(P_reg_r1_64_127_24_26_n_2),
        .DOD(NLW_P_reg_r1_64_127_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1987 P_reg_r1_64_127_27_29
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r1_64_127_27_29_n_0),
        .DOB(P_reg_r1_64_127_27_29_n_1),
        .DOC(P_reg_r1_64_127_27_29_n_2),
        .DOD(NLW_P_reg_r1_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1988 P_reg_r1_64_127_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r1_64_127_30_30_n_0),
        .DPRA0(position_reg_rep__1__0[0]),
        .DPRA1(position_reg_rep__1__0[1]),
        .DPRA2(position_reg_rep__1__0[2]),
        .DPRA3(position_reg_rep__1__0[3]),
        .DPRA4(position_reg_rep__1__0[4]),
        .DPRA5(position_reg_rep__1__0[5]),
        .SPO(NLW_P_reg_r1_64_127_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD1989 P_reg_r1_64_127_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r1_64_127_31_31_n_0),
        .DPRA0(position_reg_rep__1__0[0]),
        .DPRA1(position_reg_rep__1__0[1]),
        .DPRA2(position_reg_rep__1__0[2]),
        .DPRA3(position_reg_rep__1__0[3]),
        .DPRA4(position_reg_rep__1__0[4]),
        .DPRA5(position_reg_rep__1__0[5]),
        .SPO(NLW_P_reg_r1_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1990 P_reg_r1_64_127_3_5
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r1_64_127_3_5_n_0),
        .DOB(P_reg_r1_64_127_3_5_n_1),
        .DOC(P_reg_r1_64_127_3_5_n_2),
        .DOD(NLW_P_reg_r1_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1991 P_reg_r1_64_127_6_8
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r1_64_127_6_8_n_0),
        .DOB(P_reg_r1_64_127_6_8_n_1),
        .DOC(P_reg_r1_64_127_6_8_n_2),
        .DOD(NLW_P_reg_r1_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1992 P_reg_r1_64_127_9_11
       (.ADDRA(position_reg_rep__1__0[5:0]),
        .ADDRB(position_reg_rep__1__0[5:0]),
        .ADDRC(position_reg_rep__1__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r1_64_127_9_11_n_0),
        .DOB(P_reg_r1_64_127_9_11_n_1),
        .DOC(P_reg_r1_64_127_9_11_n_2),
        .DOD(NLW_P_reg_r1_64_127_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1993 P_reg_r2_0_63_0_2
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r2_0_63_0_2_n_0),
        .DOB(P_reg_r2_0_63_0_2_n_1),
        .DOC(P_reg_r2_0_63_0_2_n_2),
        .DOD(NLW_P_reg_r2_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1994 P_reg_r2_0_63_12_14
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r2_0_63_12_14_n_0),
        .DOB(P_reg_r2_0_63_12_14_n_1),
        .DOC(P_reg_r2_0_63_12_14_n_2),
        .DOD(NLW_P_reg_r2_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1995 P_reg_r2_0_63_15_17
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r2_0_63_15_17_n_0),
        .DOB(P_reg_r2_0_63_15_17_n_1),
        .DOC(P_reg_r2_0_63_15_17_n_2),
        .DOD(NLW_P_reg_r2_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1996 P_reg_r2_0_63_18_20
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r2_0_63_18_20_n_0),
        .DOB(P_reg_r2_0_63_18_20_n_1),
        .DOC(P_reg_r2_0_63_18_20_n_2),
        .DOD(NLW_P_reg_r2_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1997 P_reg_r2_0_63_21_23
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r2_0_63_21_23_n_0),
        .DOB(P_reg_r2_0_63_21_23_n_1),
        .DOC(P_reg_r2_0_63_21_23_n_2),
        .DOD(NLW_P_reg_r2_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1998 P_reg_r2_0_63_24_26
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r2_0_63_24_26_n_0),
        .DOB(P_reg_r2_0_63_24_26_n_1),
        .DOC(P_reg_r2_0_63_24_26_n_2),
        .DOD(NLW_P_reg_r2_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1999 P_reg_r2_0_63_27_29
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r2_0_63_27_29_n_0),
        .DOB(P_reg_r2_0_63_27_29_n_1),
        .DOC(P_reg_r2_0_63_27_29_n_2),
        .DOD(NLW_P_reg_r2_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2000 P_reg_r2_0_63_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r2_0_63_30_30_n_0),
        .DPRA0(\j_reg_rep[0]__1_n_0 ),
        .DPRA1(\j_reg_rep[1]__1_n_0 ),
        .DPRA2(\j_reg_rep[2]__1_n_0 ),
        .DPRA3(\j_reg_rep[3]__1_n_0 ),
        .DPRA4(\j_reg_rep[4]__1_n_0 ),
        .DPRA5(\j_reg_rep[5]__1_n_0 ),
        .SPO(NLW_P_reg_r2_0_63_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2001 P_reg_r2_0_63_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r2_0_63_31_31_n_0),
        .DPRA0(\j_reg_rep[0]__1_n_0 ),
        .DPRA1(\j_reg_rep[1]__1_n_0 ),
        .DPRA2(\j_reg_rep[2]__1_n_0 ),
        .DPRA3(\j_reg_rep[3]__1_n_0 ),
        .DPRA4(\j_reg_rep[4]__1_n_0 ),
        .DPRA5(\j_reg_rep[5]__1_n_0 ),
        .SPO(NLW_P_reg_r2_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2002 P_reg_r2_0_63_3_5
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r2_0_63_3_5_n_0),
        .DOB(P_reg_r2_0_63_3_5_n_1),
        .DOC(P_reg_r2_0_63_3_5_n_2),
        .DOD(NLW_P_reg_r2_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2003 P_reg_r2_0_63_6_8
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r2_0_63_6_8_n_0),
        .DOB(P_reg_r2_0_63_6_8_n_1),
        .DOC(P_reg_r2_0_63_6_8_n_2),
        .DOD(NLW_P_reg_r2_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2004 P_reg_r2_0_63_9_11
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r2_0_63_9_11_n_0),
        .DOB(P_reg_r2_0_63_9_11_n_1),
        .DOC(P_reg_r2_0_63_9_11_n_2),
        .DOD(NLW_P_reg_r2_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2005 P_reg_r2_128_191_0_2
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r2_128_191_0_2_n_0),
        .DOB(P_reg_r2_128_191_0_2_n_1),
        .DOC(P_reg_r2_128_191_0_2_n_2),
        .DOD(NLW_P_reg_r2_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2006 P_reg_r2_128_191_12_14
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r2_128_191_12_14_n_0),
        .DOB(P_reg_r2_128_191_12_14_n_1),
        .DOC(P_reg_r2_128_191_12_14_n_2),
        .DOD(NLW_P_reg_r2_128_191_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2007 P_reg_r2_128_191_15_17
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r2_128_191_15_17_n_0),
        .DOB(P_reg_r2_128_191_15_17_n_1),
        .DOC(P_reg_r2_128_191_15_17_n_2),
        .DOD(NLW_P_reg_r2_128_191_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2008 P_reg_r2_128_191_18_20
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r2_128_191_18_20_n_0),
        .DOB(P_reg_r2_128_191_18_20_n_1),
        .DOC(P_reg_r2_128_191_18_20_n_2),
        .DOD(NLW_P_reg_r2_128_191_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2009 P_reg_r2_128_191_21_23
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r2_128_191_21_23_n_0),
        .DOB(P_reg_r2_128_191_21_23_n_1),
        .DOC(P_reg_r2_128_191_21_23_n_2),
        .DOD(NLW_P_reg_r2_128_191_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2010 P_reg_r2_128_191_24_26
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r2_128_191_24_26_n_0),
        .DOB(P_reg_r2_128_191_24_26_n_1),
        .DOC(P_reg_r2_128_191_24_26_n_2),
        .DOD(NLW_P_reg_r2_128_191_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2011 P_reg_r2_128_191_27_29
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r2_128_191_27_29_n_0),
        .DOB(P_reg_r2_128_191_27_29_n_1),
        .DOC(P_reg_r2_128_191_27_29_n_2),
        .DOD(NLW_P_reg_r2_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2012 P_reg_r2_128_191_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r2_128_191_30_30_n_0),
        .DPRA0(\j_reg_rep[0]__1_n_0 ),
        .DPRA1(\j_reg_rep[1]__1_n_0 ),
        .DPRA2(\j_reg_rep[2]__1_n_0 ),
        .DPRA3(\j_reg_rep[3]__1_n_0 ),
        .DPRA4(\j_reg_rep[4]__1_n_0 ),
        .DPRA5(\j_reg_rep[5]__1_n_0 ),
        .SPO(NLW_P_reg_r2_128_191_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2013 P_reg_r2_128_191_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r2_128_191_31_31_n_0),
        .DPRA0(\j_reg_rep[0]__1_n_0 ),
        .DPRA1(\j_reg_rep[1]__1_n_0 ),
        .DPRA2(\j_reg_rep[2]__1_n_0 ),
        .DPRA3(\j_reg_rep[3]__1_n_0 ),
        .DPRA4(\j_reg_rep[4]__1_n_0 ),
        .DPRA5(\j_reg_rep[5]__1_n_0 ),
        .SPO(NLW_P_reg_r2_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2014 P_reg_r2_128_191_3_5
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r2_128_191_3_5_n_0),
        .DOB(P_reg_r2_128_191_3_5_n_1),
        .DOC(P_reg_r2_128_191_3_5_n_2),
        .DOD(NLW_P_reg_r2_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2015 P_reg_r2_128_191_6_8
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r2_128_191_6_8_n_0),
        .DOB(P_reg_r2_128_191_6_8_n_1),
        .DOC(P_reg_r2_128_191_6_8_n_2),
        .DOD(NLW_P_reg_r2_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2016 P_reg_r2_128_191_9_11
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r2_128_191_9_11_n_0),
        .DOB(P_reg_r2_128_191_9_11_n_1),
        .DOC(P_reg_r2_128_191_9_11_n_2),
        .DOD(NLW_P_reg_r2_128_191_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2017 P_reg_r2_192_255_0_2
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r2_192_255_0_2_n_0),
        .DOB(P_reg_r2_192_255_0_2_n_1),
        .DOC(P_reg_r2_192_255_0_2_n_2),
        .DOD(NLW_P_reg_r2_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2018 P_reg_r2_192_255_12_14
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r2_192_255_12_14_n_0),
        .DOB(P_reg_r2_192_255_12_14_n_1),
        .DOC(P_reg_r2_192_255_12_14_n_2),
        .DOD(NLW_P_reg_r2_192_255_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2019 P_reg_r2_192_255_15_17
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r2_192_255_15_17_n_0),
        .DOB(P_reg_r2_192_255_15_17_n_1),
        .DOC(P_reg_r2_192_255_15_17_n_2),
        .DOD(NLW_P_reg_r2_192_255_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2020 P_reg_r2_192_255_18_20
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r2_192_255_18_20_n_0),
        .DOB(P_reg_r2_192_255_18_20_n_1),
        .DOC(P_reg_r2_192_255_18_20_n_2),
        .DOD(NLW_P_reg_r2_192_255_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2021 P_reg_r2_192_255_21_23
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r2_192_255_21_23_n_0),
        .DOB(P_reg_r2_192_255_21_23_n_1),
        .DOC(P_reg_r2_192_255_21_23_n_2),
        .DOD(NLW_P_reg_r2_192_255_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2022 P_reg_r2_192_255_24_26
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r2_192_255_24_26_n_0),
        .DOB(P_reg_r2_192_255_24_26_n_1),
        .DOC(P_reg_r2_192_255_24_26_n_2),
        .DOD(NLW_P_reg_r2_192_255_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2023 P_reg_r2_192_255_27_29
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r2_192_255_27_29_n_0),
        .DOB(P_reg_r2_192_255_27_29_n_1),
        .DOC(P_reg_r2_192_255_27_29_n_2),
        .DOD(NLW_P_reg_r2_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2024 P_reg_r2_192_255_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r2_192_255_30_30_n_0),
        .DPRA0(\j_reg_rep[0]__1_n_0 ),
        .DPRA1(\j_reg_rep[1]__1_n_0 ),
        .DPRA2(\j_reg_rep[2]__1_n_0 ),
        .DPRA3(\j_reg_rep[3]__1_n_0 ),
        .DPRA4(\j_reg_rep[4]__1_n_0 ),
        .DPRA5(\j_reg_rep[5]__1_n_0 ),
        .SPO(NLW_P_reg_r2_192_255_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2025 P_reg_r2_192_255_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r2_192_255_31_31_n_0),
        .DPRA0(\j_reg_rep[0]__1_n_0 ),
        .DPRA1(\j_reg_rep[1]__1_n_0 ),
        .DPRA2(\j_reg_rep[2]__1_n_0 ),
        .DPRA3(\j_reg_rep[3]__1_n_0 ),
        .DPRA4(\j_reg_rep[4]__1_n_0 ),
        .DPRA5(\j_reg_rep[5]__1_n_0 ),
        .SPO(NLW_P_reg_r2_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2026 P_reg_r2_192_255_3_5
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r2_192_255_3_5_n_0),
        .DOB(P_reg_r2_192_255_3_5_n_1),
        .DOC(P_reg_r2_192_255_3_5_n_2),
        .DOD(NLW_P_reg_r2_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2027 P_reg_r2_192_255_6_8
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r2_192_255_6_8_n_0),
        .DOB(P_reg_r2_192_255_6_8_n_1),
        .DOC(P_reg_r2_192_255_6_8_n_2),
        .DOD(NLW_P_reg_r2_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2028 P_reg_r2_192_255_9_11
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r2_192_255_9_11_n_0),
        .DOB(P_reg_r2_192_255_9_11_n_1),
        .DOC(P_reg_r2_192_255_9_11_n_2),
        .DOD(NLW_P_reg_r2_192_255_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2029 P_reg_r2_64_127_0_2
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r2_64_127_0_2_n_0),
        .DOB(P_reg_r2_64_127_0_2_n_1),
        .DOC(P_reg_r2_64_127_0_2_n_2),
        .DOD(NLW_P_reg_r2_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2030 P_reg_r2_64_127_12_14
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r2_64_127_12_14_n_0),
        .DOB(P_reg_r2_64_127_12_14_n_1),
        .DOC(P_reg_r2_64_127_12_14_n_2),
        .DOD(NLW_P_reg_r2_64_127_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2031 P_reg_r2_64_127_15_17
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r2_64_127_15_17_n_0),
        .DOB(P_reg_r2_64_127_15_17_n_1),
        .DOC(P_reg_r2_64_127_15_17_n_2),
        .DOD(NLW_P_reg_r2_64_127_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2032 P_reg_r2_64_127_18_20
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r2_64_127_18_20_n_0),
        .DOB(P_reg_r2_64_127_18_20_n_1),
        .DOC(P_reg_r2_64_127_18_20_n_2),
        .DOD(NLW_P_reg_r2_64_127_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2033 P_reg_r2_64_127_21_23
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r2_64_127_21_23_n_0),
        .DOB(P_reg_r2_64_127_21_23_n_1),
        .DOC(P_reg_r2_64_127_21_23_n_2),
        .DOD(NLW_P_reg_r2_64_127_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2034 P_reg_r2_64_127_24_26
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r2_64_127_24_26_n_0),
        .DOB(P_reg_r2_64_127_24_26_n_1),
        .DOC(P_reg_r2_64_127_24_26_n_2),
        .DOD(NLW_P_reg_r2_64_127_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2035 P_reg_r2_64_127_27_29
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r2_64_127_27_29_n_0),
        .DOB(P_reg_r2_64_127_27_29_n_1),
        .DOC(P_reg_r2_64_127_27_29_n_2),
        .DOD(NLW_P_reg_r2_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2036 P_reg_r2_64_127_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r2_64_127_30_30_n_0),
        .DPRA0(\j_reg_rep[0]__1_n_0 ),
        .DPRA1(\j_reg_rep[1]__1_n_0 ),
        .DPRA2(\j_reg_rep[2]__1_n_0 ),
        .DPRA3(\j_reg_rep[3]__1_n_0 ),
        .DPRA4(\j_reg_rep[4]__1_n_0 ),
        .DPRA5(\j_reg_rep[5]__1_n_0 ),
        .SPO(NLW_P_reg_r2_64_127_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2037 P_reg_r2_64_127_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r2_64_127_31_31_n_0),
        .DPRA0(\j_reg_rep[0]__1_n_0 ),
        .DPRA1(\j_reg_rep[1]__1_n_0 ),
        .DPRA2(\j_reg_rep[2]__1_n_0 ),
        .DPRA3(\j_reg_rep[3]__1_n_0 ),
        .DPRA4(\j_reg_rep[4]__1_n_0 ),
        .DPRA5(\j_reg_rep[5]__1_n_0 ),
        .SPO(NLW_P_reg_r2_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2038 P_reg_r2_64_127_3_5
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r2_64_127_3_5_n_0),
        .DOB(P_reg_r2_64_127_3_5_n_1),
        .DOC(P_reg_r2_64_127_3_5_n_2),
        .DOD(NLW_P_reg_r2_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2039 P_reg_r2_64_127_6_8
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r2_64_127_6_8_n_0),
        .DOB(P_reg_r2_64_127_6_8_n_1),
        .DOC(P_reg_r2_64_127_6_8_n_2),
        .DOD(NLW_P_reg_r2_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2040 P_reg_r2_64_127_9_11
       (.ADDRA({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRB({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRC({\j_reg_rep[5]__1_n_0 ,\j_reg_rep[4]__1_n_0 ,\j_reg_rep[3]__1_n_0 ,\j_reg_rep[2]__1_n_0 ,\j_reg_rep[1]__1_n_0 ,\j_reg_rep[0]__1_n_0 }),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r2_64_127_9_11_n_0),
        .DOB(P_reg_r2_64_127_9_11_n_1),
        .DOC(P_reg_r2_64_127_9_11_n_2),
        .DOD(NLW_P_reg_r2_64_127_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2041 P_reg_r3_0_63_0_2
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r3_0_63_0_2_n_0),
        .DOB(P_reg_r3_0_63_0_2_n_1),
        .DOC(P_reg_r3_0_63_0_2_n_2),
        .DOD(NLW_P_reg_r3_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  CARRY4 P_reg_r3_0_63_0_2_i_1
       (.CI(P_reg_r3_0_63_0_2_i_2_n_0),
        .CO({P_reg_r3_0_63_0_2_i_1_n_0,P_reg_r3_0_63_0_2_i_1_n_1,P_reg_r3_0_63_0_2_i_1_n_2,P_reg_r3_0_63_0_2_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({P_reg_r3_0_63_0_2_i_1_n_4,P_reg_r3_0_63_0_2_i_1_n_5,P_reg_r3_0_63_0_2_i_1_n_6,P_reg_r3_0_63_0_2_i_1_n_7}),
        .S({P_reg_r3_0_63_0_2_i_4_n_0,P_reg_r3_0_63_0_2_i_5_n_0,P_reg_r3_0_63_0_2_i_6_n_0,P_reg_r3_0_63_0_2_i_7_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r3_0_63_0_2_i_10
       (.I0(j[2]),
        .O(P_reg_r3_0_63_0_2_i_10_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r3_0_63_0_2_i_11
       (.I0(j[1]),
        .O(P_reg_r3_0_63_0_2_i_11_n_0));
  CARRY4 P_reg_r3_0_63_0_2_i_2
       (.CI(1'b0),
        .CO({P_reg_r3_0_63_0_2_i_2_n_0,P_reg_r3_0_63_0_2_i_2_n_1,P_reg_r3_0_63_0_2_i_2_n_2,P_reg_r3_0_63_0_2_i_2_n_3}),
        .CYINIT(j[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7}),
        .S({P_reg_r3_0_63_0_2_i_8_n_0,P_reg_r3_0_63_0_2_i_9_n_0,P_reg_r3_0_63_0_2_i_10_n_0,P_reg_r3_0_63_0_2_i_11_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    P_reg_r3_0_63_0_2_i_3
       (.I0(j[0]),
        .O(P_reg_r3_0_63_0_2_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r3_0_63_0_2_i_4
       (.I0(j[8]),
        .O(P_reg_r3_0_63_0_2_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r3_0_63_0_2_i_5
       (.I0(j[7]),
        .O(P_reg_r3_0_63_0_2_i_5_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r3_0_63_0_2_i_6
       (.I0(j[6]),
        .O(P_reg_r3_0_63_0_2_i_6_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r3_0_63_0_2_i_7
       (.I0(j[5]),
        .O(P_reg_r3_0_63_0_2_i_7_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r3_0_63_0_2_i_8
       (.I0(j[4]),
        .O(P_reg_r3_0_63_0_2_i_8_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r3_0_63_0_2_i_9
       (.I0(j[3]),
        .O(P_reg_r3_0_63_0_2_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2042 P_reg_r3_0_63_12_14
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r3_0_63_12_14_n_0),
        .DOB(P_reg_r3_0_63_12_14_n_1),
        .DOC(P_reg_r3_0_63_12_14_n_2),
        .DOD(NLW_P_reg_r3_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2043 P_reg_r3_0_63_15_17
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r3_0_63_15_17_n_0),
        .DOB(P_reg_r3_0_63_15_17_n_1),
        .DOC(P_reg_r3_0_63_15_17_n_2),
        .DOD(NLW_P_reg_r3_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2044 P_reg_r3_0_63_18_20
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r3_0_63_18_20_n_0),
        .DOB(P_reg_r3_0_63_18_20_n_1),
        .DOC(P_reg_r3_0_63_18_20_n_2),
        .DOD(NLW_P_reg_r3_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2045 P_reg_r3_0_63_21_23
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r3_0_63_21_23_n_0),
        .DOB(P_reg_r3_0_63_21_23_n_1),
        .DOC(P_reg_r3_0_63_21_23_n_2),
        .DOD(NLW_P_reg_r3_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2046 P_reg_r3_0_63_24_26
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r3_0_63_24_26_n_0),
        .DOB(P_reg_r3_0_63_24_26_n_1),
        .DOC(P_reg_r3_0_63_24_26_n_2),
        .DOD(NLW_P_reg_r3_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2047 P_reg_r3_0_63_27_29
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r3_0_63_27_29_n_0),
        .DOB(P_reg_r3_0_63_27_29_n_1),
        .DOC(P_reg_r3_0_63_27_29_n_2),
        .DOD(NLW_P_reg_r3_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2048 P_reg_r3_0_63_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r3_0_63_30_30_n_0),
        .DPRA0(P_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r3_0_63_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2049 P_reg_r3_0_63_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r3_0_63_31_31_n_0),
        .DPRA0(P_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r3_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2050 P_reg_r3_0_63_3_5
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r3_0_63_3_5_n_0),
        .DOB(P_reg_r3_0_63_3_5_n_1),
        .DOC(P_reg_r3_0_63_3_5_n_2),
        .DOD(NLW_P_reg_r3_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2051 P_reg_r3_0_63_6_8
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r3_0_63_6_8_n_0),
        .DOB(P_reg_r3_0_63_6_8_n_1),
        .DOC(P_reg_r3_0_63_6_8_n_2),
        .DOD(NLW_P_reg_r3_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2052 P_reg_r3_0_63_9_11
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r3_0_63_9_11_n_0),
        .DOB(P_reg_r3_0_63_9_11_n_1),
        .DOC(P_reg_r3_0_63_9_11_n_2),
        .DOD(NLW_P_reg_r3_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2053 P_reg_r3_128_191_0_2
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r3_128_191_0_2_n_0),
        .DOB(P_reg_r3_128_191_0_2_n_1),
        .DOC(P_reg_r3_128_191_0_2_n_2),
        .DOD(NLW_P_reg_r3_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2054 P_reg_r3_128_191_12_14
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r3_128_191_12_14_n_0),
        .DOB(P_reg_r3_128_191_12_14_n_1),
        .DOC(P_reg_r3_128_191_12_14_n_2),
        .DOD(NLW_P_reg_r3_128_191_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2055 P_reg_r3_128_191_15_17
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r3_128_191_15_17_n_0),
        .DOB(P_reg_r3_128_191_15_17_n_1),
        .DOC(P_reg_r3_128_191_15_17_n_2),
        .DOD(NLW_P_reg_r3_128_191_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2056 P_reg_r3_128_191_18_20
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r3_128_191_18_20_n_0),
        .DOB(P_reg_r3_128_191_18_20_n_1),
        .DOC(P_reg_r3_128_191_18_20_n_2),
        .DOD(NLW_P_reg_r3_128_191_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2057 P_reg_r3_128_191_21_23
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r3_128_191_21_23_n_0),
        .DOB(P_reg_r3_128_191_21_23_n_1),
        .DOC(P_reg_r3_128_191_21_23_n_2),
        .DOD(NLW_P_reg_r3_128_191_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2058 P_reg_r3_128_191_24_26
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r3_128_191_24_26_n_0),
        .DOB(P_reg_r3_128_191_24_26_n_1),
        .DOC(P_reg_r3_128_191_24_26_n_2),
        .DOD(NLW_P_reg_r3_128_191_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2059 P_reg_r3_128_191_27_29
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r3_128_191_27_29_n_0),
        .DOB(P_reg_r3_128_191_27_29_n_1),
        .DOC(P_reg_r3_128_191_27_29_n_2),
        .DOD(NLW_P_reg_r3_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2060 P_reg_r3_128_191_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r3_128_191_30_30_n_0),
        .DPRA0(P_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r3_128_191_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2061 P_reg_r3_128_191_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r3_128_191_31_31_n_0),
        .DPRA0(P_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r3_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2062 P_reg_r3_128_191_3_5
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r3_128_191_3_5_n_0),
        .DOB(P_reg_r3_128_191_3_5_n_1),
        .DOC(P_reg_r3_128_191_3_5_n_2),
        .DOD(NLW_P_reg_r3_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2063 P_reg_r3_128_191_6_8
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r3_128_191_6_8_n_0),
        .DOB(P_reg_r3_128_191_6_8_n_1),
        .DOC(P_reg_r3_128_191_6_8_n_2),
        .DOD(NLW_P_reg_r3_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2064 P_reg_r3_128_191_9_11
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r3_128_191_9_11_n_0),
        .DOB(P_reg_r3_128_191_9_11_n_1),
        .DOC(P_reg_r3_128_191_9_11_n_2),
        .DOD(NLW_P_reg_r3_128_191_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2065 P_reg_r3_192_255_0_2
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r3_192_255_0_2_n_0),
        .DOB(P_reg_r3_192_255_0_2_n_1),
        .DOC(P_reg_r3_192_255_0_2_n_2),
        .DOD(NLW_P_reg_r3_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2066 P_reg_r3_192_255_12_14
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r3_192_255_12_14_n_0),
        .DOB(P_reg_r3_192_255_12_14_n_1),
        .DOC(P_reg_r3_192_255_12_14_n_2),
        .DOD(NLW_P_reg_r3_192_255_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2067 P_reg_r3_192_255_15_17
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r3_192_255_15_17_n_0),
        .DOB(P_reg_r3_192_255_15_17_n_1),
        .DOC(P_reg_r3_192_255_15_17_n_2),
        .DOD(NLW_P_reg_r3_192_255_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2068 P_reg_r3_192_255_18_20
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r3_192_255_18_20_n_0),
        .DOB(P_reg_r3_192_255_18_20_n_1),
        .DOC(P_reg_r3_192_255_18_20_n_2),
        .DOD(NLW_P_reg_r3_192_255_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2069 P_reg_r3_192_255_21_23
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r3_192_255_21_23_n_0),
        .DOB(P_reg_r3_192_255_21_23_n_1),
        .DOC(P_reg_r3_192_255_21_23_n_2),
        .DOD(NLW_P_reg_r3_192_255_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2070 P_reg_r3_192_255_24_26
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r3_192_255_24_26_n_0),
        .DOB(P_reg_r3_192_255_24_26_n_1),
        .DOC(P_reg_r3_192_255_24_26_n_2),
        .DOD(NLW_P_reg_r3_192_255_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2071 P_reg_r3_192_255_27_29
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r3_192_255_27_29_n_0),
        .DOB(P_reg_r3_192_255_27_29_n_1),
        .DOC(P_reg_r3_192_255_27_29_n_2),
        .DOD(NLW_P_reg_r3_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2072 P_reg_r3_192_255_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r3_192_255_30_30_n_0),
        .DPRA0(P_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r3_192_255_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2073 P_reg_r3_192_255_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r3_192_255_31_31_n_0),
        .DPRA0(P_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r3_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2074 P_reg_r3_192_255_3_5
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r3_192_255_3_5_n_0),
        .DOB(P_reg_r3_192_255_3_5_n_1),
        .DOC(P_reg_r3_192_255_3_5_n_2),
        .DOD(NLW_P_reg_r3_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2075 P_reg_r3_192_255_6_8
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r3_192_255_6_8_n_0),
        .DOB(P_reg_r3_192_255_6_8_n_1),
        .DOC(P_reg_r3_192_255_6_8_n_2),
        .DOD(NLW_P_reg_r3_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2076 P_reg_r3_192_255_9_11
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r3_192_255_9_11_n_0),
        .DOB(P_reg_r3_192_255_9_11_n_1),
        .DOC(P_reg_r3_192_255_9_11_n_2),
        .DOD(NLW_P_reg_r3_192_255_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2077 P_reg_r3_64_127_0_2
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r3_64_127_0_2_n_0),
        .DOB(P_reg_r3_64_127_0_2_n_1),
        .DOC(P_reg_r3_64_127_0_2_n_2),
        .DOD(NLW_P_reg_r3_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2078 P_reg_r3_64_127_12_14
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r3_64_127_12_14_n_0),
        .DOB(P_reg_r3_64_127_12_14_n_1),
        .DOC(P_reg_r3_64_127_12_14_n_2),
        .DOD(NLW_P_reg_r3_64_127_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2079 P_reg_r3_64_127_15_17
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r3_64_127_15_17_n_0),
        .DOB(P_reg_r3_64_127_15_17_n_1),
        .DOC(P_reg_r3_64_127_15_17_n_2),
        .DOD(NLW_P_reg_r3_64_127_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2080 P_reg_r3_64_127_18_20
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r3_64_127_18_20_n_0),
        .DOB(P_reg_r3_64_127_18_20_n_1),
        .DOC(P_reg_r3_64_127_18_20_n_2),
        .DOD(NLW_P_reg_r3_64_127_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2081 P_reg_r3_64_127_21_23
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r3_64_127_21_23_n_0),
        .DOB(P_reg_r3_64_127_21_23_n_1),
        .DOC(P_reg_r3_64_127_21_23_n_2),
        .DOD(NLW_P_reg_r3_64_127_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2082 P_reg_r3_64_127_24_26
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r3_64_127_24_26_n_0),
        .DOB(P_reg_r3_64_127_24_26_n_1),
        .DOC(P_reg_r3_64_127_24_26_n_2),
        .DOD(NLW_P_reg_r3_64_127_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2083 P_reg_r3_64_127_27_29
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r3_64_127_27_29_n_0),
        .DOB(P_reg_r3_64_127_27_29_n_1),
        .DOC(P_reg_r3_64_127_27_29_n_2),
        .DOD(NLW_P_reg_r3_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2084 P_reg_r3_64_127_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r3_64_127_30_30_n_0),
        .DPRA0(P_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r3_64_127_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2085 P_reg_r3_64_127_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r3_64_127_31_31_n_0),
        .DPRA0(P_reg_r3_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r3_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r3_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r3_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r3_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r3_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r3_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2086 P_reg_r3_64_127_3_5
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r3_64_127_3_5_n_0),
        .DOB(P_reg_r3_64_127_3_5_n_1),
        .DOC(P_reg_r3_64_127_3_5_n_2),
        .DOD(NLW_P_reg_r3_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2087 P_reg_r3_64_127_6_8
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r3_64_127_6_8_n_0),
        .DOB(P_reg_r3_64_127_6_8_n_1),
        .DOC(P_reg_r3_64_127_6_8_n_2),
        .DOD(NLW_P_reg_r3_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2088 P_reg_r3_64_127_9_11
       (.ADDRA({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r3_0_63_0_2_i_1_n_7,P_reg_r3_0_63_0_2_i_2_n_4,P_reg_r3_0_63_0_2_i_2_n_5,P_reg_r3_0_63_0_2_i_2_n_6,P_reg_r3_0_63_0_2_i_2_n_7,P_reg_r3_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r3_64_127_9_11_n_0),
        .DOB(P_reg_r3_64_127_9_11_n_1),
        .DOC(P_reg_r3_64_127_9_11_n_2),
        .DOD(NLW_P_reg_r3_64_127_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2089 P_reg_r4_0_63_0_2
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r4_0_63_0_2_n_0),
        .DOB(P_reg_r4_0_63_0_2_n_1),
        .DOC(P_reg_r4_0_63_0_2_n_2),
        .DOD(NLW_P_reg_r4_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2090 P_reg_r4_0_63_12_14
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r4_0_63_12_14_n_0),
        .DOB(P_reg_r4_0_63_12_14_n_1),
        .DOC(P_reg_r4_0_63_12_14_n_2),
        .DOD(NLW_P_reg_r4_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2091 P_reg_r4_0_63_15_17
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r4_0_63_15_17_n_0),
        .DOB(P_reg_r4_0_63_15_17_n_1),
        .DOC(P_reg_r4_0_63_15_17_n_2),
        .DOD(NLW_P_reg_r4_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2092 P_reg_r4_0_63_18_20
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r4_0_63_18_20_n_0),
        .DOB(P_reg_r4_0_63_18_20_n_1),
        .DOC(P_reg_r4_0_63_18_20_n_2),
        .DOD(NLW_P_reg_r4_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2093 P_reg_r4_0_63_21_23
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r4_0_63_21_23_n_0),
        .DOB(P_reg_r4_0_63_21_23_n_1),
        .DOC(P_reg_r4_0_63_21_23_n_2),
        .DOD(NLW_P_reg_r4_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2094 P_reg_r4_0_63_24_26
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r4_0_63_24_26_n_0),
        .DOB(P_reg_r4_0_63_24_26_n_1),
        .DOC(P_reg_r4_0_63_24_26_n_2),
        .DOD(NLW_P_reg_r4_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2095 P_reg_r4_0_63_27_29
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r4_0_63_27_29_n_0),
        .DOB(P_reg_r4_0_63_27_29_n_1),
        .DOC(P_reg_r4_0_63_27_29_n_2),
        .DOD(NLW_P_reg_r4_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2096 P_reg_r4_0_63_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r4_0_63_30_30_n_0),
        .DPRA0(counter_reg_rep__0[0]),
        .DPRA1(counter_reg_rep__0[1]),
        .DPRA2(counter_reg_rep__0[2]),
        .DPRA3(counter_reg_rep__0[3]),
        .DPRA4(counter_reg_rep__0[4]),
        .DPRA5(counter_reg_rep__0[5]),
        .SPO(NLW_P_reg_r4_0_63_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2097 P_reg_r4_0_63_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r4_0_63_31_31_n_0),
        .DPRA0(counter_reg_rep__0[0]),
        .DPRA1(counter_reg_rep__0[1]),
        .DPRA2(counter_reg_rep__0[2]),
        .DPRA3(counter_reg_rep__0[3]),
        .DPRA4(counter_reg_rep__0[4]),
        .DPRA5(counter_reg_rep__0[5]),
        .SPO(NLW_P_reg_r4_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2098 P_reg_r4_0_63_3_5
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r4_0_63_3_5_n_0),
        .DOB(P_reg_r4_0_63_3_5_n_1),
        .DOC(P_reg_r4_0_63_3_5_n_2),
        .DOD(NLW_P_reg_r4_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2099 P_reg_r4_0_63_6_8
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r4_0_63_6_8_n_0),
        .DOB(P_reg_r4_0_63_6_8_n_1),
        .DOC(P_reg_r4_0_63_6_8_n_2),
        .DOD(NLW_P_reg_r4_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2100 P_reg_r4_0_63_9_11
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r4_0_63_9_11_n_0),
        .DOB(P_reg_r4_0_63_9_11_n_1),
        .DOC(P_reg_r4_0_63_9_11_n_2),
        .DOD(NLW_P_reg_r4_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2101 P_reg_r4_128_191_0_2
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r4_128_191_0_2_n_0),
        .DOB(P_reg_r4_128_191_0_2_n_1),
        .DOC(P_reg_r4_128_191_0_2_n_2),
        .DOD(NLW_P_reg_r4_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2102 P_reg_r4_128_191_12_14
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r4_128_191_12_14_n_0),
        .DOB(P_reg_r4_128_191_12_14_n_1),
        .DOC(P_reg_r4_128_191_12_14_n_2),
        .DOD(NLW_P_reg_r4_128_191_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2103 P_reg_r4_128_191_15_17
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r4_128_191_15_17_n_0),
        .DOB(P_reg_r4_128_191_15_17_n_1),
        .DOC(P_reg_r4_128_191_15_17_n_2),
        .DOD(NLW_P_reg_r4_128_191_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2104 P_reg_r4_128_191_18_20
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r4_128_191_18_20_n_0),
        .DOB(P_reg_r4_128_191_18_20_n_1),
        .DOC(P_reg_r4_128_191_18_20_n_2),
        .DOD(NLW_P_reg_r4_128_191_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2105 P_reg_r4_128_191_21_23
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r4_128_191_21_23_n_0),
        .DOB(P_reg_r4_128_191_21_23_n_1),
        .DOC(P_reg_r4_128_191_21_23_n_2),
        .DOD(NLW_P_reg_r4_128_191_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2106 P_reg_r4_128_191_24_26
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r4_128_191_24_26_n_0),
        .DOB(P_reg_r4_128_191_24_26_n_1),
        .DOC(P_reg_r4_128_191_24_26_n_2),
        .DOD(NLW_P_reg_r4_128_191_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2107 P_reg_r4_128_191_27_29
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r4_128_191_27_29_n_0),
        .DOB(P_reg_r4_128_191_27_29_n_1),
        .DOC(P_reg_r4_128_191_27_29_n_2),
        .DOD(NLW_P_reg_r4_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2108 P_reg_r4_128_191_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r4_128_191_30_30_n_0),
        .DPRA0(counter_reg_rep__0[0]),
        .DPRA1(counter_reg_rep__0[1]),
        .DPRA2(counter_reg_rep__0[2]),
        .DPRA3(counter_reg_rep__0[3]),
        .DPRA4(counter_reg_rep__0[4]),
        .DPRA5(counter_reg_rep__0[5]),
        .SPO(NLW_P_reg_r4_128_191_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2109 P_reg_r4_128_191_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r4_128_191_31_31_n_0),
        .DPRA0(counter_reg_rep__0[0]),
        .DPRA1(counter_reg_rep__0[1]),
        .DPRA2(counter_reg_rep__0[2]),
        .DPRA3(counter_reg_rep__0[3]),
        .DPRA4(counter_reg_rep__0[4]),
        .DPRA5(counter_reg_rep__0[5]),
        .SPO(NLW_P_reg_r4_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2110 P_reg_r4_128_191_3_5
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r4_128_191_3_5_n_0),
        .DOB(P_reg_r4_128_191_3_5_n_1),
        .DOC(P_reg_r4_128_191_3_5_n_2),
        .DOD(NLW_P_reg_r4_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2111 P_reg_r4_128_191_6_8
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r4_128_191_6_8_n_0),
        .DOB(P_reg_r4_128_191_6_8_n_1),
        .DOC(P_reg_r4_128_191_6_8_n_2),
        .DOD(NLW_P_reg_r4_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2112 P_reg_r4_128_191_9_11
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r4_128_191_9_11_n_0),
        .DOB(P_reg_r4_128_191_9_11_n_1),
        .DOC(P_reg_r4_128_191_9_11_n_2),
        .DOD(NLW_P_reg_r4_128_191_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2113 P_reg_r4_192_255_0_2
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r4_192_255_0_2_n_0),
        .DOB(P_reg_r4_192_255_0_2_n_1),
        .DOC(P_reg_r4_192_255_0_2_n_2),
        .DOD(NLW_P_reg_r4_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2114 P_reg_r4_192_255_12_14
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r4_192_255_12_14_n_0),
        .DOB(P_reg_r4_192_255_12_14_n_1),
        .DOC(P_reg_r4_192_255_12_14_n_2),
        .DOD(NLW_P_reg_r4_192_255_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2115 P_reg_r4_192_255_15_17
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r4_192_255_15_17_n_0),
        .DOB(P_reg_r4_192_255_15_17_n_1),
        .DOC(P_reg_r4_192_255_15_17_n_2),
        .DOD(NLW_P_reg_r4_192_255_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2116 P_reg_r4_192_255_18_20
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r4_192_255_18_20_n_0),
        .DOB(P_reg_r4_192_255_18_20_n_1),
        .DOC(P_reg_r4_192_255_18_20_n_2),
        .DOD(NLW_P_reg_r4_192_255_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2117 P_reg_r4_192_255_21_23
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r4_192_255_21_23_n_0),
        .DOB(P_reg_r4_192_255_21_23_n_1),
        .DOC(P_reg_r4_192_255_21_23_n_2),
        .DOD(NLW_P_reg_r4_192_255_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2118 P_reg_r4_192_255_24_26
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r4_192_255_24_26_n_0),
        .DOB(P_reg_r4_192_255_24_26_n_1),
        .DOC(P_reg_r4_192_255_24_26_n_2),
        .DOD(NLW_P_reg_r4_192_255_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2119 P_reg_r4_192_255_27_29
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r4_192_255_27_29_n_0),
        .DOB(P_reg_r4_192_255_27_29_n_1),
        .DOC(P_reg_r4_192_255_27_29_n_2),
        .DOD(NLW_P_reg_r4_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2120 P_reg_r4_192_255_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r4_192_255_30_30_n_0),
        .DPRA0(counter_reg_rep__0[0]),
        .DPRA1(counter_reg_rep__0[1]),
        .DPRA2(counter_reg_rep__0[2]),
        .DPRA3(counter_reg_rep__0[3]),
        .DPRA4(counter_reg_rep__0[4]),
        .DPRA5(counter_reg_rep__0[5]),
        .SPO(NLW_P_reg_r4_192_255_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2121 P_reg_r4_192_255_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r4_192_255_31_31_n_0),
        .DPRA0(counter_reg_rep__0[0]),
        .DPRA1(counter_reg_rep__0[1]),
        .DPRA2(counter_reg_rep__0[2]),
        .DPRA3(counter_reg_rep__0[3]),
        .DPRA4(counter_reg_rep__0[4]),
        .DPRA5(counter_reg_rep__0[5]),
        .SPO(NLW_P_reg_r4_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2122 P_reg_r4_192_255_3_5
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r4_192_255_3_5_n_0),
        .DOB(P_reg_r4_192_255_3_5_n_1),
        .DOC(P_reg_r4_192_255_3_5_n_2),
        .DOD(NLW_P_reg_r4_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2123 P_reg_r4_192_255_6_8
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r4_192_255_6_8_n_0),
        .DOB(P_reg_r4_192_255_6_8_n_1),
        .DOC(P_reg_r4_192_255_6_8_n_2),
        .DOD(NLW_P_reg_r4_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2124 P_reg_r4_192_255_9_11
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r4_192_255_9_11_n_0),
        .DOB(P_reg_r4_192_255_9_11_n_1),
        .DOC(P_reg_r4_192_255_9_11_n_2),
        .DOD(NLW_P_reg_r4_192_255_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2125 P_reg_r4_64_127_0_2
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r4_64_127_0_2_n_0),
        .DOB(P_reg_r4_64_127_0_2_n_1),
        .DOC(P_reg_r4_64_127_0_2_n_2),
        .DOD(NLW_P_reg_r4_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2126 P_reg_r4_64_127_12_14
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r4_64_127_12_14_n_0),
        .DOB(P_reg_r4_64_127_12_14_n_1),
        .DOC(P_reg_r4_64_127_12_14_n_2),
        .DOD(NLW_P_reg_r4_64_127_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2127 P_reg_r4_64_127_15_17
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r4_64_127_15_17_n_0),
        .DOB(P_reg_r4_64_127_15_17_n_1),
        .DOC(P_reg_r4_64_127_15_17_n_2),
        .DOD(NLW_P_reg_r4_64_127_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2128 P_reg_r4_64_127_18_20
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r4_64_127_18_20_n_0),
        .DOB(P_reg_r4_64_127_18_20_n_1),
        .DOC(P_reg_r4_64_127_18_20_n_2),
        .DOD(NLW_P_reg_r4_64_127_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2129 P_reg_r4_64_127_21_23
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r4_64_127_21_23_n_0),
        .DOB(P_reg_r4_64_127_21_23_n_1),
        .DOC(P_reg_r4_64_127_21_23_n_2),
        .DOD(NLW_P_reg_r4_64_127_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2130 P_reg_r4_64_127_24_26
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r4_64_127_24_26_n_0),
        .DOB(P_reg_r4_64_127_24_26_n_1),
        .DOC(P_reg_r4_64_127_24_26_n_2),
        .DOD(NLW_P_reg_r4_64_127_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2131 P_reg_r4_64_127_27_29
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r4_64_127_27_29_n_0),
        .DOB(P_reg_r4_64_127_27_29_n_1),
        .DOC(P_reg_r4_64_127_27_29_n_2),
        .DOD(NLW_P_reg_r4_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2132 P_reg_r4_64_127_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r4_64_127_30_30_n_0),
        .DPRA0(counter_reg_rep__0[0]),
        .DPRA1(counter_reg_rep__0[1]),
        .DPRA2(counter_reg_rep__0[2]),
        .DPRA3(counter_reg_rep__0[3]),
        .DPRA4(counter_reg_rep__0[4]),
        .DPRA5(counter_reg_rep__0[5]),
        .SPO(NLW_P_reg_r4_64_127_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2133 P_reg_r4_64_127_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r4_64_127_31_31_n_0),
        .DPRA0(counter_reg_rep__0[0]),
        .DPRA1(counter_reg_rep__0[1]),
        .DPRA2(counter_reg_rep__0[2]),
        .DPRA3(counter_reg_rep__0[3]),
        .DPRA4(counter_reg_rep__0[4]),
        .DPRA5(counter_reg_rep__0[5]),
        .SPO(NLW_P_reg_r4_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2134 P_reg_r4_64_127_3_5
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r4_64_127_3_5_n_0),
        .DOB(P_reg_r4_64_127_3_5_n_1),
        .DOC(P_reg_r4_64_127_3_5_n_2),
        .DOD(NLW_P_reg_r4_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2135 P_reg_r4_64_127_6_8
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r4_64_127_6_8_n_0),
        .DOB(P_reg_r4_64_127_6_8_n_1),
        .DOC(P_reg_r4_64_127_6_8_n_2),
        .DOD(NLW_P_reg_r4_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2136 P_reg_r4_64_127_9_11
       (.ADDRA(counter_reg_rep__0[5:0]),
        .ADDRB(counter_reg_rep__0[5:0]),
        .ADDRC(counter_reg_rep__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r4_64_127_9_11_n_0),
        .DOB(P_reg_r4_64_127_9_11_n_1),
        .DOC(P_reg_r4_64_127_9_11_n_2),
        .DOD(NLW_P_reg_r4_64_127_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2137 P_reg_r5_0_63_0_2
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r5_0_63_0_2_n_0),
        .DOB(P_reg_r5_0_63_0_2_n_1),
        .DOC(P_reg_r5_0_63_0_2_n_2),
        .DOD(NLW_P_reg_r5_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2138 P_reg_r5_0_63_12_14
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r5_0_63_12_14_n_0),
        .DOB(P_reg_r5_0_63_12_14_n_1),
        .DOC(P_reg_r5_0_63_12_14_n_2),
        .DOD(NLW_P_reg_r5_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2139 P_reg_r5_0_63_15_17
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r5_0_63_15_17_n_0),
        .DOB(P_reg_r5_0_63_15_17_n_1),
        .DOC(P_reg_r5_0_63_15_17_n_2),
        .DOD(NLW_P_reg_r5_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2140 P_reg_r5_0_63_18_20
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r5_0_63_18_20_n_0),
        .DOB(P_reg_r5_0_63_18_20_n_1),
        .DOC(P_reg_r5_0_63_18_20_n_2),
        .DOD(NLW_P_reg_r5_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2141 P_reg_r5_0_63_21_23
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r5_0_63_21_23_n_0),
        .DOB(P_reg_r5_0_63_21_23_n_1),
        .DOC(P_reg_r5_0_63_21_23_n_2),
        .DOD(NLW_P_reg_r5_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2142 P_reg_r5_0_63_24_26
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r5_0_63_24_26_n_0),
        .DOB(P_reg_r5_0_63_24_26_n_1),
        .DOC(P_reg_r5_0_63_24_26_n_2),
        .DOD(NLW_P_reg_r5_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2143 P_reg_r5_0_63_27_29
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r5_0_63_27_29_n_0),
        .DOB(P_reg_r5_0_63_27_29_n_1),
        .DOC(P_reg_r5_0_63_27_29_n_2),
        .DOD(NLW_P_reg_r5_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2144 P_reg_r5_0_63_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r5_0_63_30_30_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_P_reg_r5_0_63_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2145 P_reg_r5_0_63_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r5_0_63_31_31_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_P_reg_r5_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2146 P_reg_r5_0_63_3_5
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r5_0_63_3_5_n_0),
        .DOB(P_reg_r5_0_63_3_5_n_1),
        .DOC(P_reg_r5_0_63_3_5_n_2),
        .DOD(NLW_P_reg_r5_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2147 P_reg_r5_0_63_6_8
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r5_0_63_6_8_n_0),
        .DOB(P_reg_r5_0_63_6_8_n_1),
        .DOC(P_reg_r5_0_63_6_8_n_2),
        .DOD(NLW_P_reg_r5_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2148 P_reg_r5_0_63_9_11
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r5_0_63_9_11_n_0),
        .DOB(P_reg_r5_0_63_9_11_n_1),
        .DOC(P_reg_r5_0_63_9_11_n_2),
        .DOD(NLW_P_reg_r5_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2149 P_reg_r5_128_191_0_2
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r5_128_191_0_2_n_0),
        .DOB(P_reg_r5_128_191_0_2_n_1),
        .DOC(P_reg_r5_128_191_0_2_n_2),
        .DOD(NLW_P_reg_r5_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2150 P_reg_r5_128_191_12_14
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r5_128_191_12_14_n_0),
        .DOB(P_reg_r5_128_191_12_14_n_1),
        .DOC(P_reg_r5_128_191_12_14_n_2),
        .DOD(NLW_P_reg_r5_128_191_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2151 P_reg_r5_128_191_15_17
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r5_128_191_15_17_n_0),
        .DOB(P_reg_r5_128_191_15_17_n_1),
        .DOC(P_reg_r5_128_191_15_17_n_2),
        .DOD(NLW_P_reg_r5_128_191_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2152 P_reg_r5_128_191_18_20
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r5_128_191_18_20_n_0),
        .DOB(P_reg_r5_128_191_18_20_n_1),
        .DOC(P_reg_r5_128_191_18_20_n_2),
        .DOD(NLW_P_reg_r5_128_191_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2153 P_reg_r5_128_191_21_23
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r5_128_191_21_23_n_0),
        .DOB(P_reg_r5_128_191_21_23_n_1),
        .DOC(P_reg_r5_128_191_21_23_n_2),
        .DOD(NLW_P_reg_r5_128_191_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2154 P_reg_r5_128_191_24_26
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r5_128_191_24_26_n_0),
        .DOB(P_reg_r5_128_191_24_26_n_1),
        .DOC(P_reg_r5_128_191_24_26_n_2),
        .DOD(NLW_P_reg_r5_128_191_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2155 P_reg_r5_128_191_27_29
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r5_128_191_27_29_n_0),
        .DOB(P_reg_r5_128_191_27_29_n_1),
        .DOC(P_reg_r5_128_191_27_29_n_2),
        .DOD(NLW_P_reg_r5_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2156 P_reg_r5_128_191_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r5_128_191_30_30_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_P_reg_r5_128_191_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2157 P_reg_r5_128_191_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r5_128_191_31_31_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_P_reg_r5_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2158 P_reg_r5_128_191_3_5
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r5_128_191_3_5_n_0),
        .DOB(P_reg_r5_128_191_3_5_n_1),
        .DOC(P_reg_r5_128_191_3_5_n_2),
        .DOD(NLW_P_reg_r5_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2159 P_reg_r5_128_191_6_8
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r5_128_191_6_8_n_0),
        .DOB(P_reg_r5_128_191_6_8_n_1),
        .DOC(P_reg_r5_128_191_6_8_n_2),
        .DOD(NLW_P_reg_r5_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2160 P_reg_r5_128_191_9_11
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r5_128_191_9_11_n_0),
        .DOB(P_reg_r5_128_191_9_11_n_1),
        .DOC(P_reg_r5_128_191_9_11_n_2),
        .DOD(NLW_P_reg_r5_128_191_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2161 P_reg_r5_192_255_0_2
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r5_192_255_0_2_n_0),
        .DOB(P_reg_r5_192_255_0_2_n_1),
        .DOC(P_reg_r5_192_255_0_2_n_2),
        .DOD(NLW_P_reg_r5_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2162 P_reg_r5_192_255_12_14
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r5_192_255_12_14_n_0),
        .DOB(P_reg_r5_192_255_12_14_n_1),
        .DOC(P_reg_r5_192_255_12_14_n_2),
        .DOD(NLW_P_reg_r5_192_255_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2163 P_reg_r5_192_255_15_17
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r5_192_255_15_17_n_0),
        .DOB(P_reg_r5_192_255_15_17_n_1),
        .DOC(P_reg_r5_192_255_15_17_n_2),
        .DOD(NLW_P_reg_r5_192_255_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2164 P_reg_r5_192_255_18_20
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r5_192_255_18_20_n_0),
        .DOB(P_reg_r5_192_255_18_20_n_1),
        .DOC(P_reg_r5_192_255_18_20_n_2),
        .DOD(NLW_P_reg_r5_192_255_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2165 P_reg_r5_192_255_21_23
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r5_192_255_21_23_n_0),
        .DOB(P_reg_r5_192_255_21_23_n_1),
        .DOC(P_reg_r5_192_255_21_23_n_2),
        .DOD(NLW_P_reg_r5_192_255_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2166 P_reg_r5_192_255_24_26
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r5_192_255_24_26_n_0),
        .DOB(P_reg_r5_192_255_24_26_n_1),
        .DOC(P_reg_r5_192_255_24_26_n_2),
        .DOD(NLW_P_reg_r5_192_255_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2167 P_reg_r5_192_255_27_29
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r5_192_255_27_29_n_0),
        .DOB(P_reg_r5_192_255_27_29_n_1),
        .DOC(P_reg_r5_192_255_27_29_n_2),
        .DOD(NLW_P_reg_r5_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2168 P_reg_r5_192_255_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r5_192_255_30_30_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_P_reg_r5_192_255_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2169 P_reg_r5_192_255_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r5_192_255_31_31_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_P_reg_r5_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2170 P_reg_r5_192_255_3_5
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r5_192_255_3_5_n_0),
        .DOB(P_reg_r5_192_255_3_5_n_1),
        .DOC(P_reg_r5_192_255_3_5_n_2),
        .DOD(NLW_P_reg_r5_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2171 P_reg_r5_192_255_6_8
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r5_192_255_6_8_n_0),
        .DOB(P_reg_r5_192_255_6_8_n_1),
        .DOC(P_reg_r5_192_255_6_8_n_2),
        .DOD(NLW_P_reg_r5_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2172 P_reg_r5_192_255_9_11
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r5_192_255_9_11_n_0),
        .DOB(P_reg_r5_192_255_9_11_n_1),
        .DOC(P_reg_r5_192_255_9_11_n_2),
        .DOD(NLW_P_reg_r5_192_255_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2173 P_reg_r5_64_127_0_2
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r5_64_127_0_2_n_0),
        .DOB(P_reg_r5_64_127_0_2_n_1),
        .DOC(P_reg_r5_64_127_0_2_n_2),
        .DOD(NLW_P_reg_r5_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2174 P_reg_r5_64_127_12_14
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r5_64_127_12_14_n_0),
        .DOB(P_reg_r5_64_127_12_14_n_1),
        .DOC(P_reg_r5_64_127_12_14_n_2),
        .DOD(NLW_P_reg_r5_64_127_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2175 P_reg_r5_64_127_15_17
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r5_64_127_15_17_n_0),
        .DOB(P_reg_r5_64_127_15_17_n_1),
        .DOC(P_reg_r5_64_127_15_17_n_2),
        .DOD(NLW_P_reg_r5_64_127_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2176 P_reg_r5_64_127_18_20
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r5_64_127_18_20_n_0),
        .DOB(P_reg_r5_64_127_18_20_n_1),
        .DOC(P_reg_r5_64_127_18_20_n_2),
        .DOD(NLW_P_reg_r5_64_127_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2177 P_reg_r5_64_127_21_23
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r5_64_127_21_23_n_0),
        .DOB(P_reg_r5_64_127_21_23_n_1),
        .DOC(P_reg_r5_64_127_21_23_n_2),
        .DOD(NLW_P_reg_r5_64_127_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2178 P_reg_r5_64_127_24_26
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r5_64_127_24_26_n_0),
        .DOB(P_reg_r5_64_127_24_26_n_1),
        .DOC(P_reg_r5_64_127_24_26_n_2),
        .DOD(NLW_P_reg_r5_64_127_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2179 P_reg_r5_64_127_27_29
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r5_64_127_27_29_n_0),
        .DOB(P_reg_r5_64_127_27_29_n_1),
        .DOC(P_reg_r5_64_127_27_29_n_2),
        .DOD(NLW_P_reg_r5_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2180 P_reg_r5_64_127_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r5_64_127_30_30_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_P_reg_r5_64_127_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2181 P_reg_r5_64_127_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r5_64_127_31_31_n_0),
        .DPRA0(it[0]),
        .DPRA1(p_4_in[1]),
        .DPRA2(p_4_in[2]),
        .DPRA3(p_4_in[3]),
        .DPRA4(p_4_in[4]),
        .DPRA5(p_4_in[5]),
        .SPO(NLW_P_reg_r5_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2182 P_reg_r5_64_127_3_5
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r5_64_127_3_5_n_0),
        .DOB(P_reg_r5_64_127_3_5_n_1),
        .DOC(P_reg_r5_64_127_3_5_n_2),
        .DOD(NLW_P_reg_r5_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2183 P_reg_r5_64_127_6_8
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r5_64_127_6_8_n_0),
        .DOB(P_reg_r5_64_127_6_8_n_1),
        .DOC(P_reg_r5_64_127_6_8_n_2),
        .DOD(NLW_P_reg_r5_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2184 P_reg_r5_64_127_9_11
       (.ADDRA({p_4_in[5:1],it[0]}),
        .ADDRB({p_4_in[5:1],it[0]}),
        .ADDRC({p_4_in[5:1],it[0]}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r5_64_127_9_11_n_0),
        .DOB(P_reg_r5_64_127_9_11_n_1),
        .DOC(P_reg_r5_64_127_9_11_n_2),
        .DOD(NLW_P_reg_r5_64_127_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2185 P_reg_r6_0_63_0_2
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r6_0_63_0_2_n_0),
        .DOB(P_reg_r6_0_63_0_2_n_1),
        .DOC(P_reg_r6_0_63_0_2_n_2),
        .DOD(NLW_P_reg_r6_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  CARRY4 P_reg_r6_0_63_0_2_i_1
       (.CI(P_reg_r6_0_63_0_2_i_2_n_0),
        .CO({NLW_P_reg_r6_0_63_0_2_i_1_CO_UNCONNECTED[3:2],P_reg_r6_0_63_0_2_i_1_n_2,P_reg_r6_0_63_0_2_i_1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_P_reg_r6_0_63_0_2_i_1_O_UNCONNECTED[3],P_reg_r6_0_63_0_2_i_1_n_5,P_reg_r6_0_63_0_2_i_1_n_6,P_reg_r6_0_63_0_2_i_1_n_7}),
        .S({1'b0,P_reg_r6_0_63_0_2_i_4_n_0,P_reg_r6_0_63_0_2_i_5_n_0,P_reg_r6_0_63_0_2_i_6_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r6_0_63_0_2_i_10
       (.I0(\counter_reg_n_0_[1] ),
        .O(P_reg_r6_0_63_0_2_i_10_n_0));
  CARRY4 P_reg_r6_0_63_0_2_i_2
       (.CI(1'b0),
        .CO({P_reg_r6_0_63_0_2_i_2_n_0,P_reg_r6_0_63_0_2_i_2_n_1,P_reg_r6_0_63_0_2_i_2_n_2,P_reg_r6_0_63_0_2_i_2_n_3}),
        .CYINIT(\counter_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7}),
        .S({P_reg_r6_0_63_0_2_i_7_n_0,P_reg_r6_0_63_0_2_i_8_n_0,P_reg_r6_0_63_0_2_i_9_n_0,P_reg_r6_0_63_0_2_i_10_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    P_reg_r6_0_63_0_2_i_3
       (.I0(\counter_reg_n_0_[0] ),
        .O(P_reg_r6_0_63_0_2_i_3_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r6_0_63_0_2_i_4
       (.I0(\counter_reg_n_0_[7] ),
        .O(P_reg_r6_0_63_0_2_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r6_0_63_0_2_i_5
       (.I0(\counter_reg_n_0_[6] ),
        .O(P_reg_r6_0_63_0_2_i_5_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r6_0_63_0_2_i_6
       (.I0(\counter_reg_n_0_[5] ),
        .O(P_reg_r6_0_63_0_2_i_6_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r6_0_63_0_2_i_7
       (.I0(\counter_reg_n_0_[4] ),
        .O(P_reg_r6_0_63_0_2_i_7_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r6_0_63_0_2_i_8
       (.I0(\counter_reg_n_0_[3] ),
        .O(P_reg_r6_0_63_0_2_i_8_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    P_reg_r6_0_63_0_2_i_9
       (.I0(\counter_reg_n_0_[2] ),
        .O(P_reg_r6_0_63_0_2_i_9_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2186 P_reg_r6_0_63_12_14
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r6_0_63_12_14_n_0),
        .DOB(P_reg_r6_0_63_12_14_n_1),
        .DOC(P_reg_r6_0_63_12_14_n_2),
        .DOD(NLW_P_reg_r6_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2187 P_reg_r6_0_63_15_17
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r6_0_63_15_17_n_0),
        .DOB(P_reg_r6_0_63_15_17_n_1),
        .DOC(P_reg_r6_0_63_15_17_n_2),
        .DOD(NLW_P_reg_r6_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2188 P_reg_r6_0_63_18_20
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r6_0_63_18_20_n_0),
        .DOB(P_reg_r6_0_63_18_20_n_1),
        .DOC(P_reg_r6_0_63_18_20_n_2),
        .DOD(NLW_P_reg_r6_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2189 P_reg_r6_0_63_21_23
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r6_0_63_21_23_n_0),
        .DOB(P_reg_r6_0_63_21_23_n_1),
        .DOC(P_reg_r6_0_63_21_23_n_2),
        .DOD(NLW_P_reg_r6_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2190 P_reg_r6_0_63_24_26
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r6_0_63_24_26_n_0),
        .DOB(P_reg_r6_0_63_24_26_n_1),
        .DOC(P_reg_r6_0_63_24_26_n_2),
        .DOD(NLW_P_reg_r6_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2191 P_reg_r6_0_63_27_29
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r6_0_63_27_29_n_0),
        .DOB(P_reg_r6_0_63_27_29_n_1),
        .DOC(P_reg_r6_0_63_27_29_n_2),
        .DOD(NLW_P_reg_r6_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2192 P_reg_r6_0_63_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r6_0_63_30_30_n_0),
        .DPRA0(P_reg_r6_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r6_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r6_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r6_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r6_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r6_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r6_0_63_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2193 P_reg_r6_0_63_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r6_0_63_31_31_n_0),
        .DPRA0(P_reg_r6_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r6_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r6_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r6_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r6_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r6_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r6_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2194 P_reg_r6_0_63_3_5
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r6_0_63_3_5_n_0),
        .DOB(P_reg_r6_0_63_3_5_n_1),
        .DOC(P_reg_r6_0_63_3_5_n_2),
        .DOD(NLW_P_reg_r6_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2195 P_reg_r6_0_63_6_8
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r6_0_63_6_8_n_0),
        .DOB(P_reg_r6_0_63_6_8_n_1),
        .DOC(P_reg_r6_0_63_6_8_n_2),
        .DOD(NLW_P_reg_r6_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2196 P_reg_r6_0_63_9_11
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r6_0_63_9_11_n_0),
        .DOB(P_reg_r6_0_63_9_11_n_1),
        .DOC(P_reg_r6_0_63_9_11_n_2),
        .DOD(NLW_P_reg_r6_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2197 P_reg_r6_128_191_0_2
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r6_128_191_0_2_n_0),
        .DOB(P_reg_r6_128_191_0_2_n_1),
        .DOC(P_reg_r6_128_191_0_2_n_2),
        .DOD(NLW_P_reg_r6_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2198 P_reg_r6_128_191_12_14
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r6_128_191_12_14_n_0),
        .DOB(P_reg_r6_128_191_12_14_n_1),
        .DOC(P_reg_r6_128_191_12_14_n_2),
        .DOD(NLW_P_reg_r6_128_191_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2199 P_reg_r6_128_191_15_17
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r6_128_191_15_17_n_0),
        .DOB(P_reg_r6_128_191_15_17_n_1),
        .DOC(P_reg_r6_128_191_15_17_n_2),
        .DOD(NLW_P_reg_r6_128_191_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2200 P_reg_r6_128_191_18_20
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r6_128_191_18_20_n_0),
        .DOB(P_reg_r6_128_191_18_20_n_1),
        .DOC(P_reg_r6_128_191_18_20_n_2),
        .DOD(NLW_P_reg_r6_128_191_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2201 P_reg_r6_128_191_21_23
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r6_128_191_21_23_n_0),
        .DOB(P_reg_r6_128_191_21_23_n_1),
        .DOC(P_reg_r6_128_191_21_23_n_2),
        .DOD(NLW_P_reg_r6_128_191_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2202 P_reg_r6_128_191_24_26
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r6_128_191_24_26_n_0),
        .DOB(P_reg_r6_128_191_24_26_n_1),
        .DOC(P_reg_r6_128_191_24_26_n_2),
        .DOD(NLW_P_reg_r6_128_191_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2203 P_reg_r6_128_191_27_29
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r6_128_191_27_29_n_0),
        .DOB(P_reg_r6_128_191_27_29_n_1),
        .DOC(P_reg_r6_128_191_27_29_n_2),
        .DOD(NLW_P_reg_r6_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2204 P_reg_r6_128_191_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r6_128_191_30_30_n_0),
        .DPRA0(P_reg_r6_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r6_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r6_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r6_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r6_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r6_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r6_128_191_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2205 P_reg_r6_128_191_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r6_128_191_31_31_n_0),
        .DPRA0(P_reg_r6_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r6_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r6_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r6_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r6_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r6_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r6_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2206 P_reg_r6_128_191_3_5
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r6_128_191_3_5_n_0),
        .DOB(P_reg_r6_128_191_3_5_n_1),
        .DOC(P_reg_r6_128_191_3_5_n_2),
        .DOD(NLW_P_reg_r6_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2207 P_reg_r6_128_191_6_8
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r6_128_191_6_8_n_0),
        .DOB(P_reg_r6_128_191_6_8_n_1),
        .DOC(P_reg_r6_128_191_6_8_n_2),
        .DOD(NLW_P_reg_r6_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2208 P_reg_r6_128_191_9_11
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r6_128_191_9_11_n_0),
        .DOB(P_reg_r6_128_191_9_11_n_1),
        .DOC(P_reg_r6_128_191_9_11_n_2),
        .DOD(NLW_P_reg_r6_128_191_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2209 P_reg_r6_192_255_0_2
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r6_192_255_0_2_n_0),
        .DOB(P_reg_r6_192_255_0_2_n_1),
        .DOC(P_reg_r6_192_255_0_2_n_2),
        .DOD(NLW_P_reg_r6_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2210 P_reg_r6_192_255_12_14
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r6_192_255_12_14_n_0),
        .DOB(P_reg_r6_192_255_12_14_n_1),
        .DOC(P_reg_r6_192_255_12_14_n_2),
        .DOD(NLW_P_reg_r6_192_255_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2211 P_reg_r6_192_255_15_17
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r6_192_255_15_17_n_0),
        .DOB(P_reg_r6_192_255_15_17_n_1),
        .DOC(P_reg_r6_192_255_15_17_n_2),
        .DOD(NLW_P_reg_r6_192_255_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2212 P_reg_r6_192_255_18_20
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r6_192_255_18_20_n_0),
        .DOB(P_reg_r6_192_255_18_20_n_1),
        .DOC(P_reg_r6_192_255_18_20_n_2),
        .DOD(NLW_P_reg_r6_192_255_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2213 P_reg_r6_192_255_21_23
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r6_192_255_21_23_n_0),
        .DOB(P_reg_r6_192_255_21_23_n_1),
        .DOC(P_reg_r6_192_255_21_23_n_2),
        .DOD(NLW_P_reg_r6_192_255_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2214 P_reg_r6_192_255_24_26
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r6_192_255_24_26_n_0),
        .DOB(P_reg_r6_192_255_24_26_n_1),
        .DOC(P_reg_r6_192_255_24_26_n_2),
        .DOD(NLW_P_reg_r6_192_255_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2215 P_reg_r6_192_255_27_29
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r6_192_255_27_29_n_0),
        .DOB(P_reg_r6_192_255_27_29_n_1),
        .DOC(P_reg_r6_192_255_27_29_n_2),
        .DOD(NLW_P_reg_r6_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2216 P_reg_r6_192_255_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r6_192_255_30_30_n_0),
        .DPRA0(P_reg_r6_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r6_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r6_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r6_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r6_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r6_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r6_192_255_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2217 P_reg_r6_192_255_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r6_192_255_31_31_n_0),
        .DPRA0(P_reg_r6_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r6_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r6_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r6_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r6_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r6_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r6_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2218 P_reg_r6_192_255_3_5
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r6_192_255_3_5_n_0),
        .DOB(P_reg_r6_192_255_3_5_n_1),
        .DOC(P_reg_r6_192_255_3_5_n_2),
        .DOD(NLW_P_reg_r6_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2219 P_reg_r6_192_255_6_8
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r6_192_255_6_8_n_0),
        .DOB(P_reg_r6_192_255_6_8_n_1),
        .DOC(P_reg_r6_192_255_6_8_n_2),
        .DOD(NLW_P_reg_r6_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2220 P_reg_r6_192_255_9_11
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r6_192_255_9_11_n_0),
        .DOB(P_reg_r6_192_255_9_11_n_1),
        .DOC(P_reg_r6_192_255_9_11_n_2),
        .DOD(NLW_P_reg_r6_192_255_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2221 P_reg_r6_64_127_0_2
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r6_64_127_0_2_n_0),
        .DOB(P_reg_r6_64_127_0_2_n_1),
        .DOC(P_reg_r6_64_127_0_2_n_2),
        .DOD(NLW_P_reg_r6_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2222 P_reg_r6_64_127_12_14
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r6_64_127_12_14_n_0),
        .DOB(P_reg_r6_64_127_12_14_n_1),
        .DOC(P_reg_r6_64_127_12_14_n_2),
        .DOD(NLW_P_reg_r6_64_127_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2223 P_reg_r6_64_127_15_17
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r6_64_127_15_17_n_0),
        .DOB(P_reg_r6_64_127_15_17_n_1),
        .DOC(P_reg_r6_64_127_15_17_n_2),
        .DOD(NLW_P_reg_r6_64_127_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2224 P_reg_r6_64_127_18_20
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r6_64_127_18_20_n_0),
        .DOB(P_reg_r6_64_127_18_20_n_1),
        .DOC(P_reg_r6_64_127_18_20_n_2),
        .DOD(NLW_P_reg_r6_64_127_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2225 P_reg_r6_64_127_21_23
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r6_64_127_21_23_n_0),
        .DOB(P_reg_r6_64_127_21_23_n_1),
        .DOC(P_reg_r6_64_127_21_23_n_2),
        .DOD(NLW_P_reg_r6_64_127_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2226 P_reg_r6_64_127_24_26
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r6_64_127_24_26_n_0),
        .DOB(P_reg_r6_64_127_24_26_n_1),
        .DOC(P_reg_r6_64_127_24_26_n_2),
        .DOD(NLW_P_reg_r6_64_127_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2227 P_reg_r6_64_127_27_29
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r6_64_127_27_29_n_0),
        .DOB(P_reg_r6_64_127_27_29_n_1),
        .DOC(P_reg_r6_64_127_27_29_n_2),
        .DOD(NLW_P_reg_r6_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2228 P_reg_r6_64_127_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r6_64_127_30_30_n_0),
        .DPRA0(P_reg_r6_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r6_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r6_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r6_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r6_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r6_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r6_64_127_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2229 P_reg_r6_64_127_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r6_64_127_31_31_n_0),
        .DPRA0(P_reg_r6_0_63_0_2_i_3_n_0),
        .DPRA1(P_reg_r6_0_63_0_2_i_2_n_7),
        .DPRA2(P_reg_r6_0_63_0_2_i_2_n_6),
        .DPRA3(P_reg_r6_0_63_0_2_i_2_n_5),
        .DPRA4(P_reg_r6_0_63_0_2_i_2_n_4),
        .DPRA5(P_reg_r6_0_63_0_2_i_1_n_7),
        .SPO(NLW_P_reg_r6_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2230 P_reg_r6_64_127_3_5
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r6_64_127_3_5_n_0),
        .DOB(P_reg_r6_64_127_3_5_n_1),
        .DOC(P_reg_r6_64_127_3_5_n_2),
        .DOD(NLW_P_reg_r6_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2231 P_reg_r6_64_127_6_8
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r6_64_127_6_8_n_0),
        .DOB(P_reg_r6_64_127_6_8_n_1),
        .DOC(P_reg_r6_64_127_6_8_n_2),
        .DOD(NLW_P_reg_r6_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2232 P_reg_r6_64_127_9_11
       (.ADDRA({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRB({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRC({P_reg_r6_0_63_0_2_i_1_n_7,P_reg_r6_0_63_0_2_i_2_n_4,P_reg_r6_0_63_0_2_i_2_n_5,P_reg_r6_0_63_0_2_i_2_n_6,P_reg_r6_0_63_0_2_i_2_n_7,P_reg_r6_0_63_0_2_i_3_n_0}),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r6_64_127_9_11_n_0),
        .DOB(P_reg_r6_64_127_9_11_n_1),
        .DOC(P_reg_r6_64_127_9_11_n_2),
        .DOD(NLW_P_reg_r6_64_127_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2233 P_reg_r7_0_63_0_2
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r7_0_63_0_2_n_0),
        .DOB(P_reg_r7_0_63_0_2_n_1),
        .DOC(P_reg_r7_0_63_0_2_n_2),
        .DOD(NLW_P_reg_r7_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2234 P_reg_r7_0_63_12_14
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r7_0_63_12_14_n_0),
        .DOB(P_reg_r7_0_63_12_14_n_1),
        .DOC(P_reg_r7_0_63_12_14_n_2),
        .DOD(NLW_P_reg_r7_0_63_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2235 P_reg_r7_0_63_15_17
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r7_0_63_15_17_n_0),
        .DOB(P_reg_r7_0_63_15_17_n_1),
        .DOC(P_reg_r7_0_63_15_17_n_2),
        .DOD(NLW_P_reg_r7_0_63_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2236 P_reg_r7_0_63_18_20
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r7_0_63_18_20_n_0),
        .DOB(P_reg_r7_0_63_18_20_n_1),
        .DOC(P_reg_r7_0_63_18_20_n_2),
        .DOD(NLW_P_reg_r7_0_63_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2237 P_reg_r7_0_63_21_23
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r7_0_63_21_23_n_0),
        .DOB(P_reg_r7_0_63_21_23_n_1),
        .DOC(P_reg_r7_0_63_21_23_n_2),
        .DOD(NLW_P_reg_r7_0_63_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2238 P_reg_r7_0_63_24_26
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r7_0_63_24_26_n_0),
        .DOB(P_reg_r7_0_63_24_26_n_1),
        .DOC(P_reg_r7_0_63_24_26_n_2),
        .DOD(NLW_P_reg_r7_0_63_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2239 P_reg_r7_0_63_27_29
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r7_0_63_27_29_n_0),
        .DOB(P_reg_r7_0_63_27_29_n_1),
        .DOC(P_reg_r7_0_63_27_29_n_2),
        .DOD(NLW_P_reg_r7_0_63_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2240 P_reg_r7_0_63_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r7_0_63_30_30_n_0),
        .DPRA0(i_reg_rep__2__0[0]),
        .DPRA1(i_reg_rep__2__0[1]),
        .DPRA2(i_reg_rep__2__0[2]),
        .DPRA3(i_reg_rep__2__0[3]),
        .DPRA4(i_reg_rep__2__0[4]),
        .DPRA5(i_reg_rep__2__0[5]),
        .SPO(NLW_P_reg_r7_0_63_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2241 P_reg_r7_0_63_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r7_0_63_31_31_n_0),
        .DPRA0(i_reg_rep__2__0[0]),
        .DPRA1(i_reg_rep__2__0[1]),
        .DPRA2(i_reg_rep__2__0[2]),
        .DPRA3(i_reg_rep__2__0[3]),
        .DPRA4(i_reg_rep__2__0[4]),
        .DPRA5(i_reg_rep__2__0[5]),
        .SPO(NLW_P_reg_r7_0_63_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2242 P_reg_r7_0_63_3_5
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r7_0_63_3_5_n_0),
        .DOB(P_reg_r7_0_63_3_5_n_1),
        .DOC(P_reg_r7_0_63_3_5_n_2),
        .DOD(NLW_P_reg_r7_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2243 P_reg_r7_0_63_6_8
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r7_0_63_6_8_n_0),
        .DOB(P_reg_r7_0_63_6_8_n_1),
        .DOC(P_reg_r7_0_63_6_8_n_2),
        .DOD(NLW_P_reg_r7_0_63_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2244 P_reg_r7_0_63_9_11
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r7_0_63_9_11_n_0),
        .DOB(P_reg_r7_0_63_9_11_n_1),
        .DOC(P_reg_r7_0_63_9_11_n_2),
        .DOD(NLW_P_reg_r7_0_63_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2245 P_reg_r7_128_191_0_2
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r7_128_191_0_2_n_0),
        .DOB(P_reg_r7_128_191_0_2_n_1),
        .DOC(P_reg_r7_128_191_0_2_n_2),
        .DOD(NLW_P_reg_r7_128_191_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2246 P_reg_r7_128_191_12_14
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r7_128_191_12_14_n_0),
        .DOB(P_reg_r7_128_191_12_14_n_1),
        .DOC(P_reg_r7_128_191_12_14_n_2),
        .DOD(NLW_P_reg_r7_128_191_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2247 P_reg_r7_128_191_15_17
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r7_128_191_15_17_n_0),
        .DOB(P_reg_r7_128_191_15_17_n_1),
        .DOC(P_reg_r7_128_191_15_17_n_2),
        .DOD(NLW_P_reg_r7_128_191_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2248 P_reg_r7_128_191_18_20
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r7_128_191_18_20_n_0),
        .DOB(P_reg_r7_128_191_18_20_n_1),
        .DOC(P_reg_r7_128_191_18_20_n_2),
        .DOD(NLW_P_reg_r7_128_191_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2249 P_reg_r7_128_191_21_23
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r7_128_191_21_23_n_0),
        .DOB(P_reg_r7_128_191_21_23_n_1),
        .DOC(P_reg_r7_128_191_21_23_n_2),
        .DOD(NLW_P_reg_r7_128_191_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2250 P_reg_r7_128_191_24_26
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r7_128_191_24_26_n_0),
        .DOB(P_reg_r7_128_191_24_26_n_1),
        .DOC(P_reg_r7_128_191_24_26_n_2),
        .DOD(NLW_P_reg_r7_128_191_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2251 P_reg_r7_128_191_27_29
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r7_128_191_27_29_n_0),
        .DOB(P_reg_r7_128_191_27_29_n_1),
        .DOC(P_reg_r7_128_191_27_29_n_2),
        .DOD(NLW_P_reg_r7_128_191_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2252 P_reg_r7_128_191_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r7_128_191_30_30_n_0),
        .DPRA0(i_reg_rep__2__0[0]),
        .DPRA1(i_reg_rep__2__0[1]),
        .DPRA2(i_reg_rep__2__0[2]),
        .DPRA3(i_reg_rep__2__0[3]),
        .DPRA4(i_reg_rep__2__0[4]),
        .DPRA5(i_reg_rep__2__0[5]),
        .SPO(NLW_P_reg_r7_128_191_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2253 P_reg_r7_128_191_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r7_128_191_31_31_n_0),
        .DPRA0(i_reg_rep__2__0[0]),
        .DPRA1(i_reg_rep__2__0[1]),
        .DPRA2(i_reg_rep__2__0[2]),
        .DPRA3(i_reg_rep__2__0[3]),
        .DPRA4(i_reg_rep__2__0[4]),
        .DPRA5(i_reg_rep__2__0[5]),
        .SPO(NLW_P_reg_r7_128_191_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2254 P_reg_r7_128_191_3_5
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r7_128_191_3_5_n_0),
        .DOB(P_reg_r7_128_191_3_5_n_1),
        .DOC(P_reg_r7_128_191_3_5_n_2),
        .DOD(NLW_P_reg_r7_128_191_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2255 P_reg_r7_128_191_6_8
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r7_128_191_6_8_n_0),
        .DOB(P_reg_r7_128_191_6_8_n_1),
        .DOC(P_reg_r7_128_191_6_8_n_2),
        .DOD(NLW_P_reg_r7_128_191_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2256 P_reg_r7_128_191_9_11
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r7_128_191_9_11_n_0),
        .DOB(P_reg_r7_128_191_9_11_n_1),
        .DOC(P_reg_r7_128_191_9_11_n_2),
        .DOD(NLW_P_reg_r7_128_191_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_128_191_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2257 P_reg_r7_192_255_0_2
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r7_192_255_0_2_n_0),
        .DOB(P_reg_r7_192_255_0_2_n_1),
        .DOC(P_reg_r7_192_255_0_2_n_2),
        .DOD(NLW_P_reg_r7_192_255_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2258 P_reg_r7_192_255_12_14
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r7_192_255_12_14_n_0),
        .DOB(P_reg_r7_192_255_12_14_n_1),
        .DOC(P_reg_r7_192_255_12_14_n_2),
        .DOD(NLW_P_reg_r7_192_255_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2259 P_reg_r7_192_255_15_17
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r7_192_255_15_17_n_0),
        .DOB(P_reg_r7_192_255_15_17_n_1),
        .DOC(P_reg_r7_192_255_15_17_n_2),
        .DOD(NLW_P_reg_r7_192_255_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2260 P_reg_r7_192_255_18_20
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r7_192_255_18_20_n_0),
        .DOB(P_reg_r7_192_255_18_20_n_1),
        .DOC(P_reg_r7_192_255_18_20_n_2),
        .DOD(NLW_P_reg_r7_192_255_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2261 P_reg_r7_192_255_21_23
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r7_192_255_21_23_n_0),
        .DOB(P_reg_r7_192_255_21_23_n_1),
        .DOC(P_reg_r7_192_255_21_23_n_2),
        .DOD(NLW_P_reg_r7_192_255_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2262 P_reg_r7_192_255_24_26
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r7_192_255_24_26_n_0),
        .DOB(P_reg_r7_192_255_24_26_n_1),
        .DOC(P_reg_r7_192_255_24_26_n_2),
        .DOD(NLW_P_reg_r7_192_255_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2263 P_reg_r7_192_255_27_29
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r7_192_255_27_29_n_0),
        .DOB(P_reg_r7_192_255_27_29_n_1),
        .DOC(P_reg_r7_192_255_27_29_n_2),
        .DOD(NLW_P_reg_r7_192_255_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2264 P_reg_r7_192_255_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r7_192_255_30_30_n_0),
        .DPRA0(i_reg_rep__2__0[0]),
        .DPRA1(i_reg_rep__2__0[1]),
        .DPRA2(i_reg_rep__2__0[2]),
        .DPRA3(i_reg_rep__2__0[3]),
        .DPRA4(i_reg_rep__2__0[4]),
        .DPRA5(i_reg_rep__2__0[5]),
        .SPO(NLW_P_reg_r7_192_255_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2265 P_reg_r7_192_255_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r7_192_255_31_31_n_0),
        .DPRA0(i_reg_rep__2__0[0]),
        .DPRA1(i_reg_rep__2__0[1]),
        .DPRA2(i_reg_rep__2__0[2]),
        .DPRA3(i_reg_rep__2__0[3]),
        .DPRA4(i_reg_rep__2__0[4]),
        .DPRA5(i_reg_rep__2__0[5]),
        .SPO(NLW_P_reg_r7_192_255_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2266 P_reg_r7_192_255_3_5
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r7_192_255_3_5_n_0),
        .DOB(P_reg_r7_192_255_3_5_n_1),
        .DOC(P_reg_r7_192_255_3_5_n_2),
        .DOD(NLW_P_reg_r7_192_255_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2267 P_reg_r7_192_255_6_8
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r7_192_255_6_8_n_0),
        .DOB(P_reg_r7_192_255_6_8_n_1),
        .DOC(P_reg_r7_192_255_6_8_n_2),
        .DOD(NLW_P_reg_r7_192_255_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2268 P_reg_r7_192_255_9_11
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r7_192_255_9_11_n_0),
        .DOB(P_reg_r7_192_255_9_11_n_1),
        .DOC(P_reg_r7_192_255_9_11_n_2),
        .DOD(NLW_P_reg_r7_192_255_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_192_255_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2269 P_reg_r7_64_127_0_2
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[0]),
        .DIB(P[1]),
        .DIC(P[2]),
        .DID(1'b0),
        .DOA(P_reg_r7_64_127_0_2_n_0),
        .DOB(P_reg_r7_64_127_0_2_n_1),
        .DOC(P_reg_r7_64_127_0_2_n_2),
        .DOD(NLW_P_reg_r7_64_127_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2270 P_reg_r7_64_127_12_14
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[12]),
        .DIB(P[13]),
        .DIC(P[14]),
        .DID(1'b0),
        .DOA(P_reg_r7_64_127_12_14_n_0),
        .DOB(P_reg_r7_64_127_12_14_n_1),
        .DOC(P_reg_r7_64_127_12_14_n_2),
        .DOD(NLW_P_reg_r7_64_127_12_14_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2271 P_reg_r7_64_127_15_17
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[15]),
        .DIB(P[16]),
        .DIC(P[17]),
        .DID(1'b0),
        .DOA(P_reg_r7_64_127_15_17_n_0),
        .DOB(P_reg_r7_64_127_15_17_n_1),
        .DOC(P_reg_r7_64_127_15_17_n_2),
        .DOD(NLW_P_reg_r7_64_127_15_17_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2272 P_reg_r7_64_127_18_20
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[18]),
        .DIB(P[19]),
        .DIC(P[20]),
        .DID(1'b0),
        .DOA(P_reg_r7_64_127_18_20_n_0),
        .DOB(P_reg_r7_64_127_18_20_n_1),
        .DOC(P_reg_r7_64_127_18_20_n_2),
        .DOD(NLW_P_reg_r7_64_127_18_20_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2273 P_reg_r7_64_127_21_23
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[21]),
        .DIB(P[22]),
        .DIC(P[23]),
        .DID(1'b0),
        .DOA(P_reg_r7_64_127_21_23_n_0),
        .DOB(P_reg_r7_64_127_21_23_n_1),
        .DOC(P_reg_r7_64_127_21_23_n_2),
        .DOD(NLW_P_reg_r7_64_127_21_23_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2274 P_reg_r7_64_127_24_26
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[24]),
        .DIB(P[25]),
        .DIC(P[26]),
        .DID(1'b0),
        .DOA(P_reg_r7_64_127_24_26_n_0),
        .DOB(P_reg_r7_64_127_24_26_n_1),
        .DOC(P_reg_r7_64_127_24_26_n_2),
        .DOD(NLW_P_reg_r7_64_127_24_26_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2275 P_reg_r7_64_127_27_29
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[27]),
        .DIB(P[28]),
        .DIC(P[29]),
        .DID(1'b0),
        .DOA(P_reg_r7_64_127_27_29_n_0),
        .DOB(P_reg_r7_64_127_27_29_n_1),
        .DOC(P_reg_r7_64_127_27_29_n_2),
        .DOD(NLW_P_reg_r7_64_127_27_29_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2276 P_reg_r7_64_127_30_30
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[30]),
        .DPO(P_reg_r7_64_127_30_30_n_0),
        .DPRA0(i_reg_rep__2__0[0]),
        .DPRA1(i_reg_rep__2__0[1]),
        .DPRA2(i_reg_rep__2__0[2]),
        .DPRA3(i_reg_rep__2__0[3]),
        .DPRA4(i_reg_rep__2__0[4]),
        .DPRA5(i_reg_rep__2__0[5]),
        .SPO(NLW_P_reg_r7_64_127_30_30_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT = "64'h0000000000000000" *) 
  RAM64X1D_HD2277 P_reg_r7_64_127_31_31
       (.A0(p_8_in[0]),
        .A1(p_8_in[1]),
        .A2(p_8_in[2]),
        .A3(p_8_in[3]),
        .A4(p_8_in[4]),
        .A5(p_8_in[5]),
        .D(P[31]),
        .DPO(P_reg_r7_64_127_31_31_n_0),
        .DPRA0(i_reg_rep__2__0[0]),
        .DPRA1(i_reg_rep__2__0[1]),
        .DPRA2(i_reg_rep__2__0[2]),
        .DPRA3(i_reg_rep__2__0[3]),
        .DPRA4(i_reg_rep__2__0[4]),
        .DPRA5(i_reg_rep__2__0[5]),
        .SPO(NLW_P_reg_r7_64_127_31_31_SPO_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2278 P_reg_r7_64_127_3_5
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[3]),
        .DIB(P[4]),
        .DIC(P[5]),
        .DID(1'b0),
        .DOA(P_reg_r7_64_127_3_5_n_0),
        .DOB(P_reg_r7_64_127_3_5_n_1),
        .DOC(P_reg_r7_64_127_3_5_n_2),
        .DOD(NLW_P_reg_r7_64_127_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2279 P_reg_r7_64_127_6_8
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[6]),
        .DIB(P[7]),
        .DIC(P[8]),
        .DID(1'b0),
        .DOA(P_reg_r7_64_127_6_8_n_0),
        .DOB(P_reg_r7_64_127_6_8_n_1),
        .DOC(P_reg_r7_64_127_6_8_n_2),
        .DOD(NLW_P_reg_r7_64_127_6_8_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2280 P_reg_r7_64_127_9_11
       (.ADDRA(i_reg_rep__2__0[5:0]),
        .ADDRB(i_reg_rep__2__0[5:0]),
        .ADDRC(i_reg_rep__2__0[5:0]),
        .ADDRD(p_8_in[5:0]),
        .DIA(P[9]),
        .DIB(P[10]),
        .DIC(P[11]),
        .DID(1'b0),
        .DOA(P_reg_r7_64_127_9_11_n_0),
        .DOB(P_reg_r7_64_127_9_11_n_1),
        .DOC(P_reg_r7_64_127_9_11_n_2),
        .DOD(NLW_P_reg_r7_64_127_9_11_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(P_reg_r1_64_127_0_2_i_1_n_0));
  LUT3 #(
    .INIT(8'h1D)) 
    \building_tree_state[0]_i_1 
       (.I0(\building_tree_state_reg_n_0_[2] ),
        .I1(\building_tree_state_reg_n_0_[1] ),
        .I2(\building_tree_state_reg_n_0_[0] ),
        .O(\building_tree_state[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h8E)) 
    \building_tree_state[1]_i_1 
       (.I0(\building_tree_state_reg_n_0_[1] ),
        .I1(\building_tree_state_reg_n_0_[2] ),
        .I2(\building_tree_state_reg_n_0_[0] ),
        .O(\building_tree_state[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h74)) 
    \building_tree_state[2]_i_1 
       (.I0(\building_tree_state_reg_n_0_[1] ),
        .I1(\building_tree_state_reg_n_0_[0] ),
        .I2(\building_tree_state_reg_n_0_[2] ),
        .O(\building_tree_state[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \building_tree_state_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\building_tree_state[0]_i_1_n_0 ),
        .Q(\building_tree_state_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \building_tree_state_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\building_tree_state[1]_i_1_n_0 ),
        .Q(\building_tree_state_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \building_tree_state_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(building_tree_state),
        .D(\building_tree_state[2]_i_1_n_0 ),
        .Q(\building_tree_state_reg_n_0_[2] ),
        .R(1'b0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2281 code_length_tab_reg_r1_0_63_0_2
       (.ADDRA({\i_reg_rep[5]__2_n_0 ,\i_reg_rep[4]__2_n_0 ,\i_reg_rep[3]__2_n_0 ,\i_reg_rep[2]__2_n_0 ,\i_reg_rep[1]__2_n_0 ,\i_reg_rep[0]__2_n_0 }),
        .ADDRB({\i_reg_rep[5]__2_n_0 ,\i_reg_rep[4]__2_n_0 ,\i_reg_rep[3]__2_n_0 ,\i_reg_rep[2]__2_n_0 ,\i_reg_rep[1]__2_n_0 ,\i_reg_rep[0]__2_n_0 }),
        .ADDRC({\i_reg_rep[5]__2_n_0 ,\i_reg_rep[4]__2_n_0 ,\i_reg_rep[3]__2_n_0 ,\i_reg_rep[2]__2_n_0 ,\i_reg_rep[1]__2_n_0 ,\i_reg_rep[0]__2_n_0 }),
        .ADDRD(p_2_in),
        .DIA(code_length_tab_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(code_length_tab[1]),
        .DIC(code_length_tab[2]),
        .DID(1'b0),
        .DOA(code_out_length0[0]),
        .DOB(code_out_length0[1]),
        .DOC(code_out_length0[2]),
        .DOD(NLW_code_length_tab_reg_r1_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_length_tab_reg_r1_0_63_0_2_i_4_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    code_length_tab_reg_r1_0_63_0_2_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(code_length_tab_reg_r2_0_63_0_2_n_0),
        .O(code_length_tab_reg_r1_0_63_0_2_i_1_n_0));
  LUT4 #(
    .INIT(16'hF888)) 
    code_length_tab_reg_r1_0_63_0_2_i_10
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(j[0]),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .I3(symbol_it_reg[0]),
        .O(p_2_in[0]));
  LUT3 #(
    .INIT(8'h28)) 
    code_length_tab_reg_r1_0_63_0_2_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(code_length_tab_reg_r2_0_63_0_2_n_1),
        .I2(code_length_tab_reg_r2_0_63_0_2_n_0),
        .O(code_length_tab[1]));
  LUT4 #(
    .INIT(16'h2888)) 
    code_length_tab_reg_r1_0_63_0_2_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(code_length_tab_reg_r2_0_63_0_2_n_2),
        .I2(code_length_tab_reg_r2_0_63_0_2_n_1),
        .I3(code_length_tab_reg_r2_0_63_0_2_n_0),
        .O(code_length_tab[2]));
  LUT6 #(
    .INIT(64'h0800000A0000000A)) 
    code_length_tab_reg_r1_0_63_0_2_i_4
       (.I0(state_reg[0]),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .I2(state_reg[3]),
        .I3(state_reg[1]),
        .I4(state_reg[2]),
        .I5(\making_tree_state_reg_n_0_[0] ),
        .O(code_length_tab_reg_r1_0_63_0_2_i_4_n_0));
  LUT4 #(
    .INIT(16'hF888)) 
    code_length_tab_reg_r1_0_63_0_2_i_5
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(j[5]),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .I3(symbol_it_reg[5]),
        .O(p_2_in[5]));
  LUT4 #(
    .INIT(16'hF888)) 
    code_length_tab_reg_r1_0_63_0_2_i_6
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(j[4]),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .I3(symbol_it_reg[4]),
        .O(p_2_in[4]));
  LUT4 #(
    .INIT(16'hF888)) 
    code_length_tab_reg_r1_0_63_0_2_i_7
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(j[3]),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .I3(symbol_it_reg[3]),
        .O(p_2_in[3]));
  LUT4 #(
    .INIT(16'hF888)) 
    code_length_tab_reg_r1_0_63_0_2_i_8
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(j[2]),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .I3(symbol_it_reg[2]),
        .O(p_2_in[2]));
  LUT4 #(
    .INIT(16'hF888)) 
    code_length_tab_reg_r1_0_63_0_2_i_9
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(j[1]),
        .I2(\FSM_onehot_state_reg_n_0_[7] ),
        .I3(symbol_it_reg[1]),
        .O(p_2_in[1]));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2282 code_length_tab_reg_r1_0_63_3_5
       (.ADDRA({\i_reg_rep[5]__2_n_0 ,\i_reg_rep[4]__2_n_0 ,\i_reg_rep[3]__2_n_0 ,\i_reg_rep[2]__2_n_0 ,\i_reg_rep[1]__2_n_0 ,\i_reg_rep[0]__2_n_0 }),
        .ADDRB({\i_reg_rep[5]__2_n_0 ,\i_reg_rep[4]__2_n_0 ,\i_reg_rep[3]__2_n_0 ,\i_reg_rep[2]__2_n_0 ,\i_reg_rep[1]__2_n_0 ,\i_reg_rep[0]__2_n_0 }),
        .ADDRC({\i_reg_rep[5]__2_n_0 ,\i_reg_rep[4]__2_n_0 ,\i_reg_rep[3]__2_n_0 ,\i_reg_rep[2]__2_n_0 ,\i_reg_rep[1]__2_n_0 ,\i_reg_rep[0]__2_n_0 }),
        .ADDRD(p_2_in),
        .DIA(code_length_tab[3]),
        .DIB(code_length_tab[4]),
        .DIC(code_length_tab[5]),
        .DID(1'b0),
        .DOA(code_out_length0[3]),
        .DOB(code_out_length0[4]),
        .DOC(code_out_length0[5]),
        .DOD(NLW_code_length_tab_reg_r1_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_length_tab_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'h28888888)) 
    code_length_tab_reg_r1_0_63_3_5_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(code_length_tab_reg_r2_0_63_3_5_n_0),
        .I2(code_length_tab_reg_r2_0_63_0_2_n_2),
        .I3(code_length_tab_reg_r2_0_63_0_2_n_0),
        .I4(code_length_tab_reg_r2_0_63_0_2_n_1),
        .O(code_length_tab[3]));
  LUT6 #(
    .INIT(64'h2888888888888888)) 
    code_length_tab_reg_r1_0_63_3_5_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(code_length_tab_reg_r2_0_63_3_5_n_1),
        .I2(code_length_tab_reg_r2_0_63_3_5_n_0),
        .I3(code_length_tab_reg_r2_0_63_0_2_n_1),
        .I4(code_length_tab_reg_r2_0_63_0_2_n_0),
        .I5(code_length_tab_reg_r2_0_63_0_2_n_2),
        .O(code_length_tab[4]));
  LUT3 #(
    .INIT(8'h28)) 
    code_length_tab_reg_r1_0_63_3_5_i_3
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(code_length_tab_reg_r2_0_63_3_5_n_2),
        .I2(\p_0_out_inferred__9/code_length_tab_reg_r1_0_63_3_5_i_4_n_0 ),
        .O(code_length_tab[5]));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2283 code_length_tab_reg_r1_0_63_6_7
       (.ADDRA({\i_reg_rep[5]__2_n_0 ,\i_reg_rep[4]__2_n_0 ,\i_reg_rep[3]__2_n_0 ,\i_reg_rep[2]__2_n_0 ,\i_reg_rep[1]__2_n_0 ,\i_reg_rep[0]__2_n_0 }),
        .ADDRB({\i_reg_rep[5]__2_n_0 ,\i_reg_rep[4]__2_n_0 ,\i_reg_rep[3]__2_n_0 ,\i_reg_rep[2]__2_n_0 ,\i_reg_rep[1]__2_n_0 ,\i_reg_rep[0]__2_n_0 }),
        .ADDRC({\i_reg_rep[5]__2_n_0 ,\i_reg_rep[4]__2_n_0 ,\i_reg_rep[3]__2_n_0 ,\i_reg_rep[2]__2_n_0 ,\i_reg_rep[1]__2_n_0 ,\i_reg_rep[0]__2_n_0 }),
        .ADDRD(p_2_in),
        .DIA(code_length_tab[6]),
        .DIB(code_length_tab[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(code_out_length0[6]),
        .DOB(code_out_length0[7]),
        .DOC(NLW_code_length_tab_reg_r1_0_63_6_7_DOC_UNCONNECTED),
        .DOD(NLW_code_length_tab_reg_r1_0_63_6_7_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_length_tab_reg_r1_0_63_0_2_i_4_n_0));
  LUT3 #(
    .INIT(8'h28)) 
    code_length_tab_reg_r1_0_63_6_7_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(code_length_tab_reg_r2_0_63_6_7_n_0),
        .I2(\p_0_out_inferred__9/code_length_tab_reg_r1_0_63_6_7_i_3_n_0 ),
        .O(code_length_tab[6]));
  LUT4 #(
    .INIT(16'h2888)) 
    code_length_tab_reg_r1_0_63_6_7_i_2
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(code_length_tab_reg_r2_0_63_6_7_n_1),
        .I2(code_length_tab_reg_r2_0_63_6_7_n_0),
        .I3(\p_0_out_inferred__9/code_length_tab_reg_r1_0_63_6_7_i_3_n_0 ),
        .O(code_length_tab[7]));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2284 code_length_tab_reg_r2_0_63_0_2
       (.ADDRA(symbol_it_reg_rep__0__0),
        .ADDRB(symbol_it_reg_rep__0__0),
        .ADDRC(symbol_it_reg_rep__0__0),
        .ADDRD(p_2_in),
        .DIA(code_length_tab_reg_r1_0_63_0_2_i_1_n_0),
        .DIB(code_length_tab[1]),
        .DIC(code_length_tab[2]),
        .DID(1'b0),
        .DOA(code_length_tab_reg_r2_0_63_0_2_n_0),
        .DOB(code_length_tab_reg_r2_0_63_0_2_n_1),
        .DOC(code_length_tab_reg_r2_0_63_0_2_n_2),
        .DOD(NLW_code_length_tab_reg_r2_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_length_tab_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2285 code_length_tab_reg_r2_0_63_3_5
       (.ADDRA(symbol_it_reg_rep__0__0),
        .ADDRB(symbol_it_reg_rep__0__0),
        .ADDRC(symbol_it_reg_rep__0__0),
        .ADDRD(p_2_in),
        .DIA(code_length_tab[3]),
        .DIB(code_length_tab[4]),
        .DIC(code_length_tab[5]),
        .DID(1'b0),
        .DOA(code_length_tab_reg_r2_0_63_3_5_n_0),
        .DOB(code_length_tab_reg_r2_0_63_3_5_n_1),
        .DOC(code_length_tab_reg_r2_0_63_3_5_n_2),
        .DOD(NLW_code_length_tab_reg_r2_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_length_tab_reg_r1_0_63_0_2_i_4_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2286 code_length_tab_reg_r2_0_63_6_7
       (.ADDRA(symbol_it_reg_rep__0__0),
        .ADDRB(symbol_it_reg_rep__0__0),
        .ADDRC(symbol_it_reg_rep__0__0),
        .ADDRD(p_2_in),
        .DIA(code_length_tab[6]),
        .DIB(code_length_tab[7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(code_length_tab_reg_r2_0_63_6_7_n_0),
        .DOB(code_length_tab_reg_r2_0_63_6_7_n_1),
        .DOC(NLW_code_length_tab_reg_r2_0_63_6_7_DOC_UNCONNECTED),
        .DOD(NLW_code_length_tab_reg_r2_0_63_6_7_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_length_tab_reg_r1_0_63_0_2_i_4_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \code_out[0]_i_1 
       (.I0(code_tab_reg_0_15_0_0__0_n_0),
        .I1(i_reg_rep__3[4]),
        .I2(code_tab_reg_0_15_0_0_n_0),
        .I3(i_reg_rep__3[5]),
        .I4(code_tab_reg_0_31_0_0_n_0),
        .O(code_out0[0]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \code_out[1]_i_1 
       (.I0(code_tab_reg_0_15_0_0__2_n_0),
        .I1(i_reg_rep__3[4]),
        .I2(code_tab_reg_0_15_0_0__1_n_0),
        .I3(i_reg_rep__3[5]),
        .I4(code_tab_reg_0_31_0_0__0_n_0),
        .O(code_out0[1]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \code_out[2]_i_1 
       (.I0(code_tab_reg_0_15_0_0__4_n_0),
        .I1(i_reg_rep__3[4]),
        .I2(code_tab_reg_0_15_0_0__3_n_0),
        .I3(i_reg_rep__3[5]),
        .I4(code_tab_reg_0_31_0_0__1_n_0),
        .O(code_out0[2]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \code_out[3]_i_1 
       (.I0(code_tab_reg_0_15_0_0__6_n_0),
        .I1(i_reg_rep__3[4]),
        .I2(code_tab_reg_0_15_0_0__5_n_0),
        .I3(i_reg_rep__3[5]),
        .I4(code_tab_reg_0_31_0_0__2_n_0),
        .O(code_out0[3]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \code_out[4]_i_1 
       (.I0(code_tab_reg_0_15_0_0__8_n_0),
        .I1(i_reg_rep__3[4]),
        .I2(code_tab_reg_0_15_0_0__7_n_0),
        .I3(i_reg_rep__3[5]),
        .I4(code_tab_reg_0_31_0_0__3_n_0),
        .O(code_out0[4]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \code_out[5]_i_1 
       (.I0(code_tab_reg_0_15_0_0__10_n_0),
        .I1(i_reg_rep__3[4]),
        .I2(code_tab_reg_0_15_0_0__9_n_0),
        .I3(i_reg_rep__3[5]),
        .I4(code_tab_reg_0_31_0_0__4_n_0),
        .O(code_out0[5]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \code_out[6]_i_1 
       (.I0(code_tab_reg_0_15_0_0__12_n_0),
        .I1(i_reg_rep__3[4]),
        .I2(code_tab_reg_0_15_0_0__11_n_0),
        .I3(i_reg_rep__3[5]),
        .I4(code_tab_reg_0_31_0_0__5_n_0),
        .O(code_out0[6]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \code_out[7]_i_1 
       (.I0(code_tab_reg_0_15_0_0__14_n_0),
        .I1(i_reg_rep__3[4]),
        .I2(code_tab_reg_0_15_0_0__13_n_0),
        .I3(i_reg_rep__3[5]),
        .I4(code_tab_reg_0_31_0_0__6_n_0),
        .O(code_out0[7]));
  LUT2 #(
    .INIT(4'h8)) 
    \code_out_length[7]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[8] ),
        .I1(ID_reg_r1_0_63_0_2_i_19_n_0),
        .O(\code_out_length[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_length_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out_length0[0]),
        .Q(code_out_length[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_length_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out_length0[1]),
        .Q(code_out_length[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_length_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out_length0[2]),
        .Q(code_out_length[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_length_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out_length0[3]),
        .Q(code_out_length[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_length_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out_length0[4]),
        .Q(code_out_length[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_length_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out_length0[5]),
        .Q(code_out_length[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_length_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out_length0[6]),
        .Q(code_out_length[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_length_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out_length0[7]),
        .Q(code_out_length[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out0[0]),
        .Q(code_out0_out[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out0[1]),
        .Q(code_out0_out[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out0[2]),
        .Q(code_out0_out[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out0[3]),
        .Q(code_out0_out[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out0[4]),
        .Q(code_out0_out[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out0[5]),
        .Q(code_out0_out[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out0[6]),
        .Q(code_out0_out[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_out_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_out_length[7]_i_1_n_0 ),
        .D(code_out0[7]),
        .Q(code_out0_out[7]),
        .R(1'b0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_UNIQ_BASE_ code_tab_reg_0_15_0_0
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2287 code_tab_reg_0_15_0_0__0
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__0_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__0_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    code_tab_reg_0_15_0_0__0_i_1
       (.I0(code_tab_reg_0_31_0_0_i_4_n_0),
        .I1(symbol_it_reg[4]),
        .I2(symbol_it_reg[5]),
        .O(code_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2288 code_tab_reg_0_15_0_0__1
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__0_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__1_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__1_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2289 code_tab_reg_0_15_0_0__10
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__4_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__10_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__10_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2290 code_tab_reg_0_15_0_0__11
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__5_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__11_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__11_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2291 code_tab_reg_0_15_0_0__12
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__5_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__12_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__12_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2292 code_tab_reg_0_15_0_0__13
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__6_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__13_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__13_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2293 code_tab_reg_0_15_0_0__14
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__6_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__14_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__14_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2294 code_tab_reg_0_15_0_0__2
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__0_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__2_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__2_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2295 code_tab_reg_0_15_0_0__3
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__1_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__3_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__3_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2296 code_tab_reg_0_15_0_0__4
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__1_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__4_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__4_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2297 code_tab_reg_0_15_0_0__5
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__2_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__5_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__5_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2298 code_tab_reg_0_15_0_0__6
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__2_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__6_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__6_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2299 code_tab_reg_0_15_0_0__7
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__3_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__7_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__7_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2300 code_tab_reg_0_15_0_0__8
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__3_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__8_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__8_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD2301 code_tab_reg_0_15_0_0__9
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(1'b0),
        .D(code_tab_reg_0_31_0_0__4_i_1_n_0),
        .DPO(code_tab_reg_0_15_0_0__9_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(1'b0),
        .SPO(code_tab_reg_0_15_0_0__9_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_15_0_0_i_1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    code_tab_reg_0_15_0_0_i_1
       (.I0(symbol_it_reg[4]),
        .I1(symbol_it_reg[5]),
        .I2(code_tab_reg_0_31_0_0_i_4_n_0),
        .O(code_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1D_HD2302 code_tab_reg_0_31_0_0
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(symbol_it_reg[4]),
        .D(code_tab_reg_0_31_0_0_i_1_n_0),
        .DPO(code_tab_reg_0_31_0_0_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(i_reg_rep__3[4]),
        .SPO(code_tab_reg_0_31_0_0_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_31_0_0_i_2_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1D_HD2303 code_tab_reg_0_31_0_0__0
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(symbol_it_reg[4]),
        .D(code_tab_reg_0_31_0_0__0_i_1_n_0),
        .DPO(code_tab_reg_0_31_0_0__0_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(i_reg_rep__3[4]),
        .SPO(code_tab_reg_0_31_0_0__0_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_31_0_0_i_2_n_0));
  LUT5 #(
    .INIT(32'hBF0F8000)) 
    code_tab_reg_0_31_0_0__0_i_1
       (.I0(code_tab_reg_0_31_0_0__0_i_2_n_7),
        .I1(\making_tree_state_reg_n_0_[0] ),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(code_tab_reg_0_31_0_0_i_3_n_0),
        .O(code_tab_reg_0_31_0_0__0_i_1_n_0));
  CARRY4 code_tab_reg_0_31_0_0__0_i_2
       (.CI(1'b0),
        .CO({code_tab_reg_0_31_0_0__0_i_2_n_0,code_tab_reg_0_31_0_0__0_i_2_n_1,code_tab_reg_0_31_0_0__0_i_2_n_2,code_tab_reg_0_31_0_0__0_i_2_n_3}),
        .CYINIT(code_tab_reg_0_31_0_0_i_3_n_0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({code_tab_reg_0_31_0_0__0_i_2_n_4,code_tab_reg_0_31_0_0__0_i_2_n_5,code_tab_reg_0_31_0_0__0_i_2_n_6,code_tab_reg_0_31_0_0__0_i_2_n_7}),
        .S({code_tab_reg_0_31_0_0__0_i_3_n_0,code_tab_reg_0_31_0_0__0_i_4_n_0,code_tab_reg_0_31_0_0__0_i_5_n_0,code_tab_reg_0_31_0_0__0_i_6_n_0}));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__0_i_3
       (.I0(code_tab_reg_0_15_0_0__8_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__7_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__3_n_1),
        .O(code_tab_reg_0_31_0_0__0_i_3_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__0_i_4
       (.I0(code_tab_reg_0_15_0_0__6_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__5_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__2_n_1),
        .O(code_tab_reg_0_31_0_0__0_i_4_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__0_i_5
       (.I0(code_tab_reg_0_15_0_0__4_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__3_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__1_n_1),
        .O(code_tab_reg_0_31_0_0__0_i_5_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__0_i_6
       (.I0(code_tab_reg_0_15_0_0__2_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__1_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__0_n_1),
        .O(code_tab_reg_0_31_0_0__0_i_6_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1D_HD2304 code_tab_reg_0_31_0_0__1
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(symbol_it_reg[4]),
        .D(code_tab_reg_0_31_0_0__1_i_1_n_0),
        .DPO(code_tab_reg_0_31_0_0__1_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(i_reg_rep__3[4]),
        .SPO(code_tab_reg_0_31_0_0__1_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_31_0_0_i_2_n_0));
  LUT5 #(
    .INIT(32'hBF0F8000)) 
    code_tab_reg_0_31_0_0__1_i_1
       (.I0(code_tab_reg_0_31_0_0__0_i_2_n_6),
        .I1(\making_tree_state_reg_n_0_[0] ),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(code_tab_reg_0_31_0_0__1_i_2_n_0),
        .O(code_tab_reg_0_31_0_0__1_i_1_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__1_i_2
       (.I0(code_tab_reg_0_15_0_0__2_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__1_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__0_n_1),
        .O(code_tab_reg_0_31_0_0__1_i_2_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1D_HD2305 code_tab_reg_0_31_0_0__2
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(symbol_it_reg[4]),
        .D(code_tab_reg_0_31_0_0__2_i_1_n_0),
        .DPO(code_tab_reg_0_31_0_0__2_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(i_reg_rep__3[4]),
        .SPO(code_tab_reg_0_31_0_0__2_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_31_0_0_i_2_n_0));
  LUT5 #(
    .INIT(32'hBF0F8000)) 
    code_tab_reg_0_31_0_0__2_i_1
       (.I0(code_tab_reg_0_31_0_0__0_i_2_n_5),
        .I1(\making_tree_state_reg_n_0_[0] ),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(code_tab_reg_0_31_0_0__2_i_2_n_0),
        .O(code_tab_reg_0_31_0_0__2_i_1_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__2_i_2
       (.I0(code_tab_reg_0_15_0_0__4_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__3_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__1_n_1),
        .O(code_tab_reg_0_31_0_0__2_i_2_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1D_HD2306 code_tab_reg_0_31_0_0__3
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(symbol_it_reg[4]),
        .D(code_tab_reg_0_31_0_0__3_i_1_n_0),
        .DPO(code_tab_reg_0_31_0_0__3_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(i_reg_rep__3[4]),
        .SPO(code_tab_reg_0_31_0_0__3_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_31_0_0_i_2_n_0));
  LUT5 #(
    .INIT(32'hBF0F8000)) 
    code_tab_reg_0_31_0_0__3_i_1
       (.I0(code_tab_reg_0_31_0_0__0_i_2_n_4),
        .I1(\making_tree_state_reg_n_0_[0] ),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(code_tab_reg_0_31_0_0__3_i_2_n_0),
        .O(code_tab_reg_0_31_0_0__3_i_1_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__3_i_2
       (.I0(code_tab_reg_0_15_0_0__6_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__5_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__2_n_1),
        .O(code_tab_reg_0_31_0_0__3_i_2_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1D_HD2307 code_tab_reg_0_31_0_0__4
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(symbol_it_reg[4]),
        .D(code_tab_reg_0_31_0_0__4_i_1_n_0),
        .DPO(code_tab_reg_0_31_0_0__4_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(i_reg_rep__3[4]),
        .SPO(code_tab_reg_0_31_0_0__4_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_31_0_0_i_2_n_0));
  LUT5 #(
    .INIT(32'hBF0F8000)) 
    code_tab_reg_0_31_0_0__4_i_1
       (.I0(code_tab_reg_0_31_0_0__4_i_2_n_7),
        .I1(\making_tree_state_reg_n_0_[0] ),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(code_tab_reg_0_31_0_0__4_i_3_n_0),
        .O(code_tab_reg_0_31_0_0__4_i_1_n_0));
  CARRY4 code_tab_reg_0_31_0_0__4_i_2
       (.CI(code_tab_reg_0_31_0_0__0_i_2_n_0),
        .CO({NLW_code_tab_reg_0_31_0_0__4_i_2_CO_UNCONNECTED[3:2],code_tab_reg_0_31_0_0__4_i_2_n_2,code_tab_reg_0_31_0_0__4_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_code_tab_reg_0_31_0_0__4_i_2_O_UNCONNECTED[3],code_tab_reg_0_31_0_0__4_i_2_n_5,code_tab_reg_0_31_0_0__4_i_2_n_6,code_tab_reg_0_31_0_0__4_i_2_n_7}),
        .S({1'b0,code_tab_reg_0_31_0_0__4_i_4_n_0,code_tab_reg_0_31_0_0__4_i_5_n_0,code_tab_reg_0_31_0_0__4_i_6_n_0}));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__4_i_3
       (.I0(code_tab_reg_0_15_0_0__8_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__7_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__3_n_1),
        .O(code_tab_reg_0_31_0_0__4_i_3_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__4_i_4
       (.I0(code_tab_reg_0_15_0_0__14_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__13_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__6_n_1),
        .O(code_tab_reg_0_31_0_0__4_i_4_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__4_i_5
       (.I0(code_tab_reg_0_15_0_0__12_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__11_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__5_n_1),
        .O(code_tab_reg_0_31_0_0__4_i_5_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__4_i_6
       (.I0(code_tab_reg_0_15_0_0__10_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__9_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__4_n_1),
        .O(code_tab_reg_0_31_0_0__4_i_6_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1D_HD2308 code_tab_reg_0_31_0_0__5
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(symbol_it_reg[4]),
        .D(code_tab_reg_0_31_0_0__5_i_1_n_0),
        .DPO(code_tab_reg_0_31_0_0__5_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(i_reg_rep__3[4]),
        .SPO(code_tab_reg_0_31_0_0__5_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_31_0_0_i_2_n_0));
  LUT5 #(
    .INIT(32'hBF0F8000)) 
    code_tab_reg_0_31_0_0__5_i_1
       (.I0(code_tab_reg_0_31_0_0__4_i_2_n_6),
        .I1(\making_tree_state_reg_n_0_[0] ),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(code_tab_reg_0_31_0_0__5_i_2_n_0),
        .O(code_tab_reg_0_31_0_0__5_i_1_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__5_i_2
       (.I0(code_tab_reg_0_15_0_0__10_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__9_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__4_n_1),
        .O(code_tab_reg_0_31_0_0__5_i_2_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1D_HD2309 code_tab_reg_0_31_0_0__6
       (.A0(symbol_it_reg[0]),
        .A1(symbol_it_reg[1]),
        .A2(symbol_it_reg[2]),
        .A3(symbol_it_reg[3]),
        .A4(symbol_it_reg[4]),
        .D(code_tab_reg_0_31_0_0__6_i_1_n_0),
        .DPO(code_tab_reg_0_31_0_0__6_n_0),
        .DPRA0(i_reg_rep__3[0]),
        .DPRA1(i_reg_rep__3[1]),
        .DPRA2(i_reg_rep__3[2]),
        .DPRA3(i_reg_rep__3[3]),
        .DPRA4(i_reg_rep__3[4]),
        .SPO(code_tab_reg_0_31_0_0__6_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(code_tab_reg_0_31_0_0_i_2_n_0));
  LUT5 #(
    .INIT(32'hBF0F8000)) 
    code_tab_reg_0_31_0_0__6_i_1
       (.I0(code_tab_reg_0_31_0_0__4_i_2_n_5),
        .I1(\making_tree_state_reg_n_0_[0] ),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(code_tab_reg_0_31_0_0__6_i_2_n_0),
        .O(code_tab_reg_0_31_0_0__6_i_1_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0__6_i_2
       (.I0(code_tab_reg_0_15_0_0__12_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0__11_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0__5_n_1),
        .O(code_tab_reg_0_31_0_0__6_i_2_n_0));
  LUT4 #(
    .INIT(16'h0080)) 
    code_tab_reg_0_31_0_0_i_1
       (.I0(\making_tree_state_reg_n_0_[0] ),
        .I1(\making_tree_state_reg_n_0_[1] ),
        .I2(\making_tree_state_reg_n_0_[2] ),
        .I3(code_tab_reg_0_31_0_0_i_3_n_0),
        .O(code_tab_reg_0_31_0_0_i_1_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    code_tab_reg_0_31_0_0_i_2
       (.I0(code_tab_reg_0_31_0_0_i_4_n_0),
        .I1(symbol_it_reg[5]),
        .O(code_tab_reg_0_31_0_0_i_2_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    code_tab_reg_0_31_0_0_i_3
       (.I0(code_tab_reg_0_15_0_0__0_n_1),
        .I1(symbol_it_reg[4]),
        .I2(code_tab_reg_0_15_0_0_n_1),
        .I3(symbol_it_reg[5]),
        .I4(code_tab_reg_0_31_0_0_n_1),
        .O(code_tab_reg_0_31_0_0_i_3_n_0));
  LUT6 #(
    .INIT(64'h0808080008000000)) 
    code_tab_reg_0_31_0_0_i_4
       (.I0(state_reg[1]),
        .I1(state_reg[0]),
        .I2(code_tab_reg_0_31_0_0_i_5_n_0),
        .I3(\making_tree_state_reg_n_0_[0] ),
        .I4(\making_tree_state_reg_n_0_[2] ),
        .I5(\making_tree_state_reg_n_0_[1] ),
        .O(code_tab_reg_0_31_0_0_i_4_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAAB)) 
    code_tab_reg_0_31_0_0_i_5
       (.I0(state_reg[3]),
        .I1(\FSM_onehot_state_reg_n_0_[7] ),
        .I2(\FSM_onehot_state_reg_n_0_[12] ),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .I4(\FSM_onehot_state_reg_n_0_[6] ),
        .I5(\FSM_onehot_state_reg_n_0_[4] ),
        .O(code_tab_reg_0_31_0_0_i_5_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[3]_i_1_n_7 ),
        .Q(\counter_reg_n_0_[0] ),
        .R(\counter_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[3]_i_1_n_6 ),
        .Q(\counter_reg_n_0_[1] ),
        .R(\counter_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[3]_i_1_n_5 ),
        .Q(\counter_reg_n_0_[2] ),
        .R(\counter_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[3]_i_1_n_4 ),
        .Q(\counter_reg_n_0_[3] ),
        .R(\counter_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[7]_i_3_n_7 ),
        .Q(\counter_reg_n_0_[4] ),
        .R(\counter_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[7]_i_3_n_6 ),
        .Q(\counter_reg_n_0_[5] ),
        .R(\counter_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[7]_i_3_n_5 ),
        .Q(\counter_reg_n_0_[6] ),
        .R(\counter_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[7]_i_3_n_4 ),
        .Q(\counter_reg_n_0_[7] ),
        .R(\counter_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg_rep[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[3]_i_1_n_7 ),
        .Q(counter_reg_rep__0[0]),
        .R(\counter_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg_rep[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[3]_i_1_n_6 ),
        .Q(counter_reg_rep__0[1]),
        .R(\counter_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg_rep[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[3]_i_1_n_5 ),
        .Q(counter_reg_rep__0[2]),
        .R(\counter_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg_rep[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[3]_i_1_n_4 ),
        .Q(counter_reg_rep__0[3]),
        .R(\counter_rep[7]_i_1_n_0 ));
  CARRY4 \counter_reg_rep[3]_i_1 
       (.CI(1'b0),
        .CO({\counter_reg_rep[3]_i_1_n_0 ,\counter_reg_rep[3]_i_1_n_1 ,\counter_reg_rep[3]_i_1_n_2 ,\counter_reg_rep[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\counter_reg_n_0_[1] ,1'b0}),
        .O({\counter_reg_rep[3]_i_1_n_4 ,\counter_reg_rep[3]_i_1_n_5 ,\counter_reg_rep[3]_i_1_n_6 ,\counter_reg_rep[3]_i_1_n_7 }),
        .S({\counter_rep[3]_i_2_n_0 ,\counter_rep[3]_i_3_n_0 ,\counter_rep[3]_i_4_n_0 ,\counter_rep[3]_i_5_n_0 }));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg_rep[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[7]_i_3_n_7 ),
        .Q(counter_reg_rep__0[4]),
        .R(\counter_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg_rep[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[7]_i_3_n_6 ),
        .Q(counter_reg_rep__0[5]),
        .R(\counter_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg_rep[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[7]_i_3_n_5 ),
        .Q(counter_reg_rep__0[6]),
        .R(\counter_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \counter_reg_rep[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\counter_rep[7]_i_2_n_0 ),
        .D(\counter_reg_rep[7]_i_3_n_4 ),
        .Q(counter_reg_rep__0[7]),
        .R(\counter_rep[7]_i_1_n_0 ));
  CARRY4 \counter_reg_rep[7]_i_3 
       (.CI(\counter_reg_rep[3]_i_1_n_0 ),
        .CO({\NLW_counter_reg_rep[7]_i_3_CO_UNCONNECTED [3],\counter_reg_rep[7]_i_3_n_1 ,\counter_reg_rep[7]_i_3_n_2 ,\counter_reg_rep[7]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\counter_reg_rep[7]_i_3_n_4 ,\counter_reg_rep[7]_i_3_n_5 ,\counter_reg_rep[7]_i_3_n_6 ,\counter_reg_rep[7]_i_3_n_7 }),
        .S({\counter_rep[7]_i_5_n_0 ,\counter_rep[7]_i_6_n_0 ,\counter_rep[7]_i_7_n_0 ,\counter_rep[7]_i_8_n_0 }));
  LUT1 #(
    .INIT(2'h2)) 
    \counter_rep[3]_i_2 
       (.I0(\counter_reg_n_0_[3] ),
        .O(\counter_rep[3]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \counter_rep[3]_i_3 
       (.I0(\counter_reg_n_0_[2] ),
        .O(\counter_rep[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \counter_rep[3]_i_4 
       (.I0(\counter_reg_n_0_[1] ),
        .O(\counter_rep[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \counter_rep[3]_i_5 
       (.I0(\counter_reg_n_0_[0] ),
        .O(\counter_rep[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \counter_rep[7]_i_1 
       (.I0(\counter_rep[7]_i_2_n_0 ),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .O(\counter_rep[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1001000100010001)) 
    \counter_rep[7]_i_2 
       (.I0(state_reg[0]),
        .I1(state_reg[3]),
        .I2(state_reg[2]),
        .I3(state_reg[1]),
        .I4(\building_tree_state_reg_n_0_[1] ),
        .I5(\counter_rep[7]_i_4_n_0 ),
        .O(\counter_rep[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \counter_rep[7]_i_4 
       (.I0(\building_tree_state_reg_n_0_[2] ),
        .I1(\building_tree_state_reg_n_0_[0] ),
        .O(\counter_rep[7]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \counter_rep[7]_i_5 
       (.I0(\counter_reg_n_0_[7] ),
        .O(\counter_rep[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \counter_rep[7]_i_6 
       (.I0(\counter_reg_n_0_[6] ),
        .O(\counter_rep[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \counter_rep[7]_i_7 
       (.I0(\counter_reg_n_0_[5] ),
        .O(\counter_rep[7]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \counter_rep[7]_i_8 
       (.I0(\counter_reg_n_0_[4] ),
        .O(\counter_rep[7]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \current_symbol[0]_i_1 
       (.I0(current_symbol0[0]),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .I2(symbol[0]),
        .O(\current_symbol[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[0]_i_2 
       (.I0(Link_reg_r1_192_255_0_2_n_0),
        .I1(Link_reg_r1_128_191_0_2_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_0_2_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_0_2_n_0),
        .O(current_symbol0[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[10]_i_1 
       (.I0(Link_reg_r1_192_255_9_11_n_1),
        .I1(Link_reg_r1_128_191_9_11_n_1),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_9_11_n_1),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_9_11_n_1),
        .O(current_symbol0[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[11]_i_1 
       (.I0(Link_reg_r1_192_255_9_11_n_2),
        .I1(Link_reg_r1_128_191_9_11_n_2),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_9_11_n_2),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_9_11_n_2),
        .O(current_symbol0[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[12]_i_1 
       (.I0(Link_reg_r1_192_255_12_14_n_0),
        .I1(Link_reg_r1_128_191_12_14_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_12_14_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_12_14_n_0),
        .O(current_symbol0[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[13]_i_1 
       (.I0(Link_reg_r1_192_255_12_14_n_1),
        .I1(Link_reg_r1_128_191_12_14_n_1),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_12_14_n_1),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_12_14_n_1),
        .O(current_symbol0[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[14]_i_1 
       (.I0(Link_reg_r1_192_255_12_14_n_2),
        .I1(Link_reg_r1_128_191_12_14_n_2),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_12_14_n_2),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_12_14_n_2),
        .O(current_symbol0[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[15]_i_1 
       (.I0(Link_reg_r1_192_255_15_17_n_0),
        .I1(Link_reg_r1_128_191_15_17_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_15_17_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_15_17_n_0),
        .O(current_symbol0[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[16]_i_1 
       (.I0(Link_reg_r1_192_255_15_17_n_1),
        .I1(Link_reg_r1_128_191_15_17_n_1),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_15_17_n_1),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_15_17_n_1),
        .O(current_symbol0[16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[17]_i_1 
       (.I0(Link_reg_r1_192_255_15_17_n_2),
        .I1(Link_reg_r1_128_191_15_17_n_2),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_15_17_n_2),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_15_17_n_2),
        .O(current_symbol0[17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[18]_i_1 
       (.I0(Link_reg_r1_192_255_18_20_n_0),
        .I1(Link_reg_r1_128_191_18_20_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_18_20_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_18_20_n_0),
        .O(current_symbol0[18]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[19]_i_1 
       (.I0(Link_reg_r1_192_255_18_20_n_1),
        .I1(Link_reg_r1_128_191_18_20_n_1),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_18_20_n_1),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_18_20_n_1),
        .O(current_symbol0[19]));
  LUT3 #(
    .INIT(8'hB8)) 
    \current_symbol[1]_i_1 
       (.I0(current_symbol0[1]),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .I2(symbol[1]),
        .O(\current_symbol[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[1]_i_2 
       (.I0(Link_reg_r1_192_255_0_2_n_1),
        .I1(Link_reg_r1_128_191_0_2_n_1),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_0_2_n_1),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_0_2_n_1),
        .O(current_symbol0[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[20]_i_1 
       (.I0(Link_reg_r1_192_255_18_20_n_2),
        .I1(Link_reg_r1_128_191_18_20_n_2),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_18_20_n_2),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_18_20_n_2),
        .O(current_symbol0[20]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[21]_i_1 
       (.I0(Link_reg_r1_192_255_21_23_n_0),
        .I1(Link_reg_r1_128_191_21_23_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_21_23_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_21_23_n_0),
        .O(current_symbol0[21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[22]_i_1 
       (.I0(Link_reg_r1_192_255_21_23_n_1),
        .I1(Link_reg_r1_128_191_21_23_n_1),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_21_23_n_1),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_21_23_n_1),
        .O(current_symbol0[22]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[23]_i_1 
       (.I0(Link_reg_r1_192_255_21_23_n_2),
        .I1(Link_reg_r1_128_191_21_23_n_2),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_21_23_n_2),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_21_23_n_2),
        .O(current_symbol0[23]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[24]_i_1 
       (.I0(Link_reg_r1_192_255_24_26_n_0),
        .I1(Link_reg_r1_128_191_24_26_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_24_26_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_24_26_n_0),
        .O(current_symbol0[24]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[25]_i_1 
       (.I0(Link_reg_r1_192_255_24_26_n_1),
        .I1(Link_reg_r1_128_191_24_26_n_1),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_24_26_n_1),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_24_26_n_1),
        .O(current_symbol0[25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[26]_i_1 
       (.I0(Link_reg_r1_192_255_24_26_n_2),
        .I1(Link_reg_r1_128_191_24_26_n_2),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_24_26_n_2),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_24_26_n_2),
        .O(current_symbol0[26]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[27]_i_1 
       (.I0(Link_reg_r1_192_255_27_29_n_0),
        .I1(Link_reg_r1_128_191_27_29_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_27_29_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_27_29_n_0),
        .O(current_symbol0[27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[28]_i_1 
       (.I0(Link_reg_r1_192_255_27_29_n_1),
        .I1(Link_reg_r1_128_191_27_29_n_1),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_27_29_n_1),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_27_29_n_1),
        .O(current_symbol0[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[29]_i_1 
       (.I0(Link_reg_r1_192_255_27_29_n_2),
        .I1(Link_reg_r1_128_191_27_29_n_2),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_27_29_n_2),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_27_29_n_2),
        .O(current_symbol0[29]));
  LUT3 #(
    .INIT(8'hB8)) 
    \current_symbol[2]_i_1 
       (.I0(current_symbol0[2]),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .I2(symbol[2]),
        .O(\current_symbol[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[2]_i_2 
       (.I0(Link_reg_r1_192_255_0_2_n_2),
        .I1(Link_reg_r1_128_191_0_2_n_2),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_0_2_n_2),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_0_2_n_2),
        .O(current_symbol0[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[30]_i_1 
       (.I0(Link_reg_r1_192_255_30_30_n_0),
        .I1(Link_reg_r1_128_191_30_30_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_30_30_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_30_30_n_0),
        .O(current_symbol0[30]));
  LUT2 #(
    .INIT(4'h2)) 
    \current_symbol[31]_i_1 
       (.I0(\current_symbol[7]_i_1_n_0 ),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .O(\current_symbol[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[31]_i_2 
       (.I0(Link_reg_r1_192_255_31_31_n_0),
        .I1(Link_reg_r1_128_191_31_31_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_31_31_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_31_31_n_0),
        .O(current_symbol0[31]));
  LUT3 #(
    .INIT(8'hB8)) 
    \current_symbol[3]_i_1 
       (.I0(current_symbol0[3]),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .I2(symbol[3]),
        .O(\current_symbol[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[3]_i_2 
       (.I0(Link_reg_r1_192_255_3_5_n_0),
        .I1(Link_reg_r1_128_191_3_5_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_3_5_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_3_5_n_0),
        .O(current_symbol0[3]));
  LUT3 #(
    .INIT(8'hB8)) 
    \current_symbol[4]_i_1 
       (.I0(current_symbol0[4]),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .I2(symbol[4]),
        .O(\current_symbol[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[4]_i_2 
       (.I0(Link_reg_r1_192_255_3_5_n_1),
        .I1(Link_reg_r1_128_191_3_5_n_1),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_3_5_n_1),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_3_5_n_1),
        .O(current_symbol0[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \current_symbol[5]_i_1 
       (.I0(current_symbol0[5]),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .I2(symbol[5]),
        .O(\current_symbol[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[5]_i_2 
       (.I0(Link_reg_r1_192_255_3_5_n_2),
        .I1(Link_reg_r1_128_191_3_5_n_2),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_3_5_n_2),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_3_5_n_2),
        .O(current_symbol0[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \current_symbol[6]_i_1 
       (.I0(current_symbol0[6]),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .I2(symbol[6]),
        .O(\current_symbol[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[6]_i_2 
       (.I0(Link_reg_r1_192_255_6_8_n_0),
        .I1(Link_reg_r1_128_191_6_8_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_6_8_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_6_8_n_0),
        .O(current_symbol0[6]));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \current_symbol[7]_i_1 
       (.I0(\making_tree_state_reg_n_0_[0] ),
        .I1(state_reg[3]),
        .I2(\current_symbol[7]_i_3_n_0 ),
        .I3(state_reg[1]),
        .I4(state_reg[2]),
        .I5(state_reg[0]),
        .O(\current_symbol[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \current_symbol[7]_i_2 
       (.I0(current_symbol0[7]),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .I2(symbol[7]),
        .O(\current_symbol[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \current_symbol[7]_i_3 
       (.I0(\making_tree_state_reg_n_0_[1] ),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .O(\current_symbol[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \current_symbol[7]_i_4 
       (.I0(\FSM_onehot_state_reg_n_0_[10] ),
        .I1(\FSM_onehot_state_reg_n_0_[11] ),
        .I2(\FSM_onehot_state_reg_n_0_[6] ),
        .I3(\FSM_onehot_state_reg_n_0_[7] ),
        .I4(\FSM_onehot_state_reg_n_0_[5] ),
        .I5(\FSM_onehot_state_reg_n_0_[3] ),
        .O(state_reg[1]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \current_symbol[7]_i_5 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\FSM_onehot_state_reg_n_0_[7] ),
        .O(state_reg[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[7]_i_6 
       (.I0(Link_reg_r1_192_255_6_8_n_1),
        .I1(Link_reg_r1_128_191_6_8_n_1),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_6_8_n_1),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_6_8_n_1),
        .O(current_symbol0[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[8]_i_1 
       (.I0(Link_reg_r1_192_255_6_8_n_2),
        .I1(Link_reg_r1_128_191_6_8_n_2),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_6_8_n_2),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_6_8_n_2),
        .O(current_symbol0[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \current_symbol[9]_i_1 
       (.I0(Link_reg_r1_192_255_9_11_n_0),
        .I1(Link_reg_r1_128_191_9_11_n_0),
        .I2(position_reg_rep__2[7]),
        .I3(Link_reg_r1_64_127_9_11_n_0),
        .I4(position_reg_rep__2[6]),
        .I5(Link_reg_r1_0_63_9_11_n_0),
        .O(current_symbol0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(\current_symbol[0]_i_1_n_0 ),
        .Q(current_symbol[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[10]),
        .Q(current_symbol[10]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[11]),
        .Q(current_symbol[11]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[12]),
        .Q(current_symbol[12]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[13]),
        .Q(current_symbol[13]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[14]),
        .Q(current_symbol[14]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[15]),
        .Q(current_symbol[15]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[16]),
        .Q(current_symbol[16]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[17]),
        .Q(current_symbol[17]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[18]),
        .Q(current_symbol[18]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[19]),
        .Q(current_symbol[19]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(\current_symbol[1]_i_1_n_0 ),
        .Q(current_symbol[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[20]),
        .Q(current_symbol[20]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[21]),
        .Q(current_symbol[21]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[22]),
        .Q(current_symbol[22]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[23]),
        .Q(current_symbol[23]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[24]),
        .Q(current_symbol[24]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[25]),
        .Q(current_symbol[25]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[26]),
        .Q(current_symbol[26]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[27]),
        .Q(current_symbol[27]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[28]),
        .Q(current_symbol[28]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[29]),
        .Q(current_symbol[29]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(\current_symbol[2]_i_1_n_0 ),
        .Q(current_symbol[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[30]),
        .Q(current_symbol[30]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[31]),
        .Q(current_symbol[31]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(\current_symbol[3]_i_1_n_0 ),
        .Q(current_symbol[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(\current_symbol[4]_i_1_n_0 ),
        .Q(current_symbol[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(\current_symbol[5]_i_1_n_0 ),
        .Q(current_symbol[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(\current_symbol[6]_i_1_n_0 ),
        .Q(current_symbol[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(\current_symbol[7]_i_2_n_0 ),
        .Q(current_symbol[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[8]),
        .Q(current_symbol[8]),
        .R(\current_symbol[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \current_symbol_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\current_symbol[7]_i_1_n_0 ),
        .D(current_symbol0[9]),
        .Q(current_symbol[9]),
        .R(\current_symbol[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[10]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[12]_i_2_n_6 ),
        .O(i__0[10]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[11]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[12]_i_2_n_5 ),
        .O(i__0[11]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[12]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[12]_i_2_n_4 ),
        .O(i__0[12]));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_3 
       (.I0(\i_reg_n_0_[12] ),
        .O(\i[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_4 
       (.I0(\i_reg_n_0_[11] ),
        .O(\i[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_5 
       (.I0(\i_reg_n_0_[10] ),
        .O(\i[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_6 
       (.I0(\i_reg_n_0_[9] ),
        .O(\i[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[13]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[16]_i_2_n_7 ),
        .O(i__0[13]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[14]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[16]_i_2_n_6 ),
        .O(i__0[14]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[15]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[16]_i_2_n_5 ),
        .O(i__0[15]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[16]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[16]_i_2_n_4 ),
        .O(i__0[16]));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_3 
       (.I0(\i_reg_n_0_[16] ),
        .O(\i[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_4 
       (.I0(\i_reg_n_0_[15] ),
        .O(\i[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_5 
       (.I0(\i_reg_n_0_[14] ),
        .O(\i[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_6 
       (.I0(\i_reg_n_0_[13] ),
        .O(\i[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[17]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[20]_i_2_n_7 ),
        .O(i__0[17]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[18]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[20]_i_2_n_6 ),
        .O(i__0[18]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[19]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[20]_i_2_n_5 ),
        .O(i__0[19]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[20]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[20]_i_2_n_4 ),
        .O(i__0[20]));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_3 
       (.I0(\i_reg_n_0_[20] ),
        .O(\i[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_4 
       (.I0(\i_reg_n_0_[19] ),
        .O(\i[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_5 
       (.I0(\i_reg_n_0_[18] ),
        .O(\i[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_6 
       (.I0(\i_reg_n_0_[17] ),
        .O(\i[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[21]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[24]_i_2_n_7 ),
        .O(i__0[21]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[22]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[24]_i_2_n_6 ),
        .O(i__0[22]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[23]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[24]_i_2_n_5 ),
        .O(i__0[23]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[24]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[24]_i_2_n_4 ),
        .O(i__0[24]));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_3 
       (.I0(\i_reg_n_0_[24] ),
        .O(\i[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_4 
       (.I0(\i_reg_n_0_[23] ),
        .O(\i[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_5 
       (.I0(\i_reg_n_0_[22] ),
        .O(\i[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_6 
       (.I0(\i_reg_n_0_[21] ),
        .O(\i[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[25]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[28]_i_2_n_7 ),
        .O(i__0[25]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[26]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[28]_i_2_n_6 ),
        .O(i__0[26]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[27]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[28]_i_2_n_5 ),
        .O(i__0[27]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[28]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[28]_i_2_n_4 ),
        .O(i__0[28]));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_3 
       (.I0(\i_reg_n_0_[28] ),
        .O(\i[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_4 
       (.I0(\i_reg_n_0_[27] ),
        .O(\i[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_5 
       (.I0(\i_reg_n_0_[26] ),
        .O(\i[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_6 
       (.I0(\i_reg_n_0_[25] ),
        .O(\i[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[29]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[31]_i_2_n_7 ),
        .O(i__0[29]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[30]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[31]_i_2_n_6 ),
        .O(i__0[30]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[31]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[31]_i_2_n_5 ),
        .O(i__0[31]));
  LUT5 #(
    .INIT(32'h00000040)) 
    \i[31]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[1]),
        .I2(\i[31]_i_4_n_0 ),
        .I3(Q[3]),
        .I4(state_reg_0__s_net_1),
        .O(\i_reg[31]_0 ));
  LUT6 #(
    .INIT(64'h0000000155555501)) 
    \i[31]_i_2 
       (.I0(Q[4]),
        .I1(\i_reg[31]_1 ),
        .I2(Q[1]),
        .I3(\i[31]_i_4_n_0 ),
        .I4(Q[3]),
        .I5(state_reg_0__s_net_1),
        .O(\i_reg_rep[0]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[31]_i_3__0 
       (.I0(\i_reg_n_0_[31] ),
        .O(\i[31]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h1010151055555555)) 
    \i[31]_i_4 
       (.I0(Q[0]),
        .I1(CO),
        .I2(Q[2]),
        .I3(\i[31]_i_8_n_0 ),
        .I4(\i_reg[31]_1 ),
        .I5(Q[1]),
        .O(\i[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[31]_i_4__0 
       (.I0(\i_reg_n_0_[30] ),
        .O(\i[31]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[31]_i_5__0 
       (.I0(\i_reg_n_0_[29] ),
        .O(\i[31]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_8 
       (.I0(\i_reg[30]_0 ),
        .I1(tree_data_ready),
        .O(\i[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[8]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg_rep[7]_i_7_n_4 ),
        .O(i__0[8]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i[9]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg[12]_i_2_n_7 ),
        .O(i__0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[0]),
        .Q(\i_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[10]),
        .Q(\i_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[11]),
        .Q(\i_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[12]),
        .Q(\i_reg_n_0_[12] ),
        .R(1'b0));
  CARRY4 \i_reg[12]_i_2 
       (.CI(\i_reg_rep[7]_i_7_n_0 ),
        .CO({\i_reg[12]_i_2_n_0 ,\i_reg[12]_i_2_n_1 ,\i_reg[12]_i_2_n_2 ,\i_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\i_reg[12]_i_2_n_4 ,\i_reg[12]_i_2_n_5 ,\i_reg[12]_i_2_n_6 ,\i_reg[12]_i_2_n_7 }),
        .S({\i[12]_i_3_n_0 ,\i[12]_i_4_n_0 ,\i[12]_i_5_n_0 ,\i[12]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[13]),
        .Q(\i_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[14]),
        .Q(\i_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[15]),
        .Q(\i_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[16]),
        .Q(\i_reg_n_0_[16] ),
        .R(1'b0));
  CARRY4 \i_reg[16]_i_2 
       (.CI(\i_reg[12]_i_2_n_0 ),
        .CO({\i_reg[16]_i_2_n_0 ,\i_reg[16]_i_2_n_1 ,\i_reg[16]_i_2_n_2 ,\i_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\i_reg[16]_i_2_n_4 ,\i_reg[16]_i_2_n_5 ,\i_reg[16]_i_2_n_6 ,\i_reg[16]_i_2_n_7 }),
        .S({\i[16]_i_3_n_0 ,\i[16]_i_4_n_0 ,\i[16]_i_5_n_0 ,\i[16]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[17]),
        .Q(\i_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[18]),
        .Q(\i_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[19]),
        .Q(\i_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[1]),
        .Q(\i_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[20]),
        .Q(\i_reg_n_0_[20] ),
        .R(1'b0));
  CARRY4 \i_reg[20]_i_2 
       (.CI(\i_reg[16]_i_2_n_0 ),
        .CO({\i_reg[20]_i_2_n_0 ,\i_reg[20]_i_2_n_1 ,\i_reg[20]_i_2_n_2 ,\i_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\i_reg[20]_i_2_n_4 ,\i_reg[20]_i_2_n_5 ,\i_reg[20]_i_2_n_6 ,\i_reg[20]_i_2_n_7 }),
        .S({\i[20]_i_3_n_0 ,\i[20]_i_4_n_0 ,\i[20]_i_5_n_0 ,\i[20]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[21]),
        .Q(\i_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[22]),
        .Q(\i_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[23]),
        .Q(\i_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[24]),
        .Q(\i_reg_n_0_[24] ),
        .R(1'b0));
  CARRY4 \i_reg[24]_i_2 
       (.CI(\i_reg[20]_i_2_n_0 ),
        .CO({\i_reg[24]_i_2_n_0 ,\i_reg[24]_i_2_n_1 ,\i_reg[24]_i_2_n_2 ,\i_reg[24]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\i_reg[24]_i_2_n_4 ,\i_reg[24]_i_2_n_5 ,\i_reg[24]_i_2_n_6 ,\i_reg[24]_i_2_n_7 }),
        .S({\i[24]_i_3_n_0 ,\i[24]_i_4_n_0 ,\i[24]_i_5_n_0 ,\i[24]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[25]),
        .Q(\i_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[26]),
        .Q(\i_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[27]),
        .Q(\i_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[28]),
        .Q(\i_reg_n_0_[28] ),
        .R(1'b0));
  CARRY4 \i_reg[28]_i_2 
       (.CI(\i_reg[24]_i_2_n_0 ),
        .CO({\i_reg[28]_i_2_n_0 ,\i_reg[28]_i_2_n_1 ,\i_reg[28]_i_2_n_2 ,\i_reg[28]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\i_reg[28]_i_2_n_4 ,\i_reg[28]_i_2_n_5 ,\i_reg[28]_i_2_n_6 ,\i_reg[28]_i_2_n_7 }),
        .S({\i[28]_i_3_n_0 ,\i[28]_i_4_n_0 ,\i[28]_i_5_n_0 ,\i[28]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[29]),
        .Q(\i_reg_n_0_[29] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[2]),
        .Q(\i_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[30]),
        .Q(\i_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[31]),
        .Q(\i_reg_n_0_[31] ),
        .R(1'b0));
  CARRY4 \i_reg[31]_i_2 
       (.CI(\i_reg[28]_i_2_n_0 ),
        .CO({\NLW_i_reg[31]_i_2_CO_UNCONNECTED [3:2],\i_reg[31]_i_2_n_2 ,\i_reg[31]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_i_reg[31]_i_2_O_UNCONNECTED [3],\i_reg[31]_i_2_n_5 ,\i_reg[31]_i_2_n_6 ,\i_reg[31]_i_2_n_7 }),
        .S({1'b0,\i[31]_i_3__0_n_0 ,\i[31]_i_4__0_n_0 ,\i[31]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[3]),
        .Q(\i_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[4]),
        .Q(\i_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[5]),
        .Q(\i_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i[6]),
        .Q(\i_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i[7]),
        .Q(\i_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[8]),
        .Q(\i_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i__0[9]),
        .Q(\i_reg_n_0_[9] ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[0]),
        .Q(i_reg_rep__0__1[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[0]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[0]),
        .Q(i_reg_rep__1__0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[0]__0__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[0]),
        .Q(i_reg_rep__3[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[0]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[0]),
        .Q(i_reg_rep__2__0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[0]__2 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[0]),
        .Q(\i_reg_rep[0]__2_n_0 ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[1]),
        .Q(i_reg_rep__0__1[1]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[1]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[1]),
        .Q(i_reg_rep__1__0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[1]__0__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[1]),
        .Q(i_reg_rep__3[1]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[1]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[1]),
        .Q(i_reg_rep__2__0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[1]__2 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[1]),
        .Q(\i_reg_rep[1]__2_n_0 ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[2]),
        .Q(i_reg_rep__0__1[2]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[2]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[2]),
        .Q(i_reg_rep__1__0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[2]__0__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[2]),
        .Q(i_reg_rep__3[2]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[2]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[2]),
        .Q(i_reg_rep__2__0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[2]__2 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[2]),
        .Q(\i_reg_rep[2]__2_n_0 ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[3]),
        .Q(i_reg_rep__0__1[3]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[3]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[3]),
        .Q(i_reg_rep__1__0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[3]__0__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[3]),
        .Q(i_reg_rep__3[3]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[3]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[3]),
        .Q(i_reg_rep__2__0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[3]__2 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[3]),
        .Q(\i_reg_rep[3]__2_n_0 ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[4]),
        .Q(i_reg_rep__0__1[4]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[4]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[4]),
        .Q(i_reg_rep__1__0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[4]__0__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[4]),
        .Q(i_reg_rep__3[4]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[4]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[4]),
        .Q(i_reg_rep__2__0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[4]__2 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[4]),
        .Q(\i_reg_rep[4]__2_n_0 ),
        .R(1'b0));
  CARRY4 \i_reg_rep[4]_i_2 
       (.CI(1'b0),
        .CO({\i_reg_rep[4]_i_2_n_0 ,\i_reg_rep[4]_i_2_n_1 ,\i_reg_rep[4]_i_2_n_2 ,\i_reg_rep[4]_i_2_n_3 }),
        .CYINIT(\i_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\i_reg_rep[4]_i_2_n_4 ,\i_reg_rep[4]_i_2_n_5 ,\i_reg_rep[4]_i_2_n_6 ,\i_reg_rep[4]_i_2_n_7 }),
        .S({\i_rep[4]_i_3_n_0 ,\i_rep[4]_i_4_n_0 ,\i_rep[4]_i_5_n_0 ,\i_rep[4]_i_6_n_0 }));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[5]),
        .Q(i_reg_rep__0__1[5]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[5]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[5]),
        .Q(i_reg_rep__1__0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[5]__0__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[5]),
        .Q(i_reg_rep__3[5]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[5]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[5]),
        .Q(i_reg_rep__2__0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[5]__2 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i2_in[5]),
        .Q(\i_reg_rep[5]__2_n_0 ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i[6]),
        .Q(i_reg_rep__0__1[6]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[6]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i[6]),
        .Q(i_reg_rep__2__0[6]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i[7]),
        .Q(i_reg_rep__0__1[7]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[7]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\i_reg_rep[0]__1_0 ),
        .D(i[7]),
        .Q(i_reg_rep__2__0[7]),
        .R(1'b0));
  CARRY4 \i_reg_rep[7]_i_7 
       (.CI(\i_reg_rep[4]_i_2_n_0 ),
        .CO({\i_reg_rep[7]_i_7_n_0 ,\i_reg_rep[7]_i_7_n_1 ,\i_reg_rep[7]_i_7_n_2 ,\i_reg_rep[7]_i_7_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\i_reg_rep[7]_i_7_n_4 ,\i_reg_rep[7]_i_7_n_5 ,\i_reg_rep[7]_i_7_n_6 ,\i_reg_rep[7]_i_7_n_7 }),
        .S({\i_rep[7]_i_9_n_0 ,\i_rep[7]_i_10_n_0 ,\i_rep[7]_i_11_n_0 ,\i_rep[7]_i_12_n_0 }));
  LUT6 #(
    .INIT(64'h00000000BAFFBAEE)) 
    \i_rep[0]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg_n_0_[0] ),
        .O(i2_in[0]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i_rep[1]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg_rep[4]_i_2_n_7 ),
        .O(i2_in[1]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i_rep[2]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg_rep[4]_i_2_n_6 ),
        .O(i2_in[2]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i_rep[3]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg_rep[4]_i_2_n_5 ),
        .O(i2_in[3]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i_rep[4]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg_rep[4]_i_2_n_4 ),
        .O(i2_in[4]));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[4]_i_3 
       (.I0(\i_reg_n_0_[4] ),
        .O(\i_rep[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[4]_i_4 
       (.I0(\i_reg_n_0_[3] ),
        .O(\i_rep[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[4]_i_5 
       (.I0(\i_reg_n_0_[2] ),
        .O(\i_rep[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[4]_i_6 
       (.I0(\i_reg_n_0_[1] ),
        .O(\i_rep[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i_rep[5]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg_rep[7]_i_7_n_7 ),
        .O(i2_in[5]));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i_rep[6]_i_1 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg_rep[7]_i_7_n_6 ),
        .O(i[6]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \i_rep[7]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[4] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(\FSM_onehot_state_reg_n_0_[5] ),
        .I3(\FSM_onehot_state_reg_n_0_[10] ),
        .I4(\i_rep[7]_i_3_n_0 ),
        .I5(\i_rep[7]_i_4_n_0 ),
        .O(\i_reg_rep[0]__1_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[7]_i_10 
       (.I0(\i_reg_n_0_[7] ),
        .O(\i_rep[7]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[7]_i_11 
       (.I0(\i_reg_n_0_[6] ),
        .O(\i_rep[7]_i_11_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[7]_i_12 
       (.I0(\i_reg_n_0_[5] ),
        .O(\i_rep[7]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hBAFFBAEE00000000)) 
    \i_rep[7]_i_2 
       (.I0(state_reg[3]),
        .I1(\i_rep[7]_i_5_n_0 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\i_rep[7]_i_6_n_0 ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I5(\i_reg_rep[7]_i_7_n_5 ),
        .O(i[7]));
  LUT6 #(
    .INIT(64'h000000B800000000)) 
    \i_rep[7]_i_3 
       (.I0(\last_symbol_reg[31]_i_3_n_7 ),
        .I1(\building_tree_state_reg_n_0_[1] ),
        .I2(\i_rep[7]_i_8_n_0 ),
        .I3(\building_tree_state_reg_n_0_[2] ),
        .I4(\building_tree_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_state_reg_n_0_[6] ),
        .O(\i_rep[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000004700000000)) 
    \i_rep[7]_i_4 
       (.I0(\position_reg_rep[7]_i_4_n_1 ),
        .I1(\making_tree_state_reg_n_0_[0] ),
        .I2(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I3(\making_tree_state_reg_n_0_[1] ),
        .I4(\making_tree_state_reg_n_0_[2] ),
        .I5(\FSM_onehot_state_reg_n_0_[7] ),
        .O(\i_rep[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h5555555555555557)) 
    \i_rep[7]_i_5 
       (.I0(state_reg[1]),
        .I1(\FSM_onehot_state_reg_n_0_[7] ),
        .I2(\FSM_onehot_state_reg_n_0_[12] ),
        .I3(\FSM_onehot_state_reg_n_0_[1] ),
        .I4(\FSM_onehot_state_reg_n_0_[6] ),
        .I5(\FSM_onehot_state_reg_n_0_[4] ),
        .O(\i_rep[7]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'hD5)) 
    \i_rep[7]_i_6 
       (.I0(state_reg[2]),
        .I1(state_reg[1]),
        .I2(state_reg[0]),
        .O(\i_rep[7]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \i_rep[7]_i_8 
       (.I0(\sorting_state_reg_n_0_[0] ),
        .I1(\sorting_state_reg_n_0_[2] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .O(\i_rep[7]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[7]_i_9 
       (.I0(\i_reg_n_0_[8] ),
        .O(\i_rep[7]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \it[0]_i_1 
       (.I0(it[0]),
        .O(\it[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[12]_i_2 
       (.I0(it[12]),
        .O(\it[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[12]_i_3 
       (.I0(it[11]),
        .O(\it[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[12]_i_4 
       (.I0(it[10]),
        .O(\it[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[12]_i_5 
       (.I0(it[9]),
        .O(\it[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[16]_i_2 
       (.I0(it[16]),
        .O(\it[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[16]_i_3 
       (.I0(it[15]),
        .O(\it[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[16]_i_4 
       (.I0(it[14]),
        .O(\it[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[16]_i_5 
       (.I0(it[13]),
        .O(\it[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[20]_i_2 
       (.I0(it[20]),
        .O(\it[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[20]_i_3 
       (.I0(it[19]),
        .O(\it[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[20]_i_4 
       (.I0(it[18]),
        .O(\it[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[20]_i_5 
       (.I0(it[17]),
        .O(\it[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[24]_i_2 
       (.I0(it[24]),
        .O(\it[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[24]_i_3 
       (.I0(it[23]),
        .O(\it[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[24]_i_4 
       (.I0(it[22]),
        .O(\it[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[24]_i_5 
       (.I0(it[21]),
        .O(\it[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[28]_i_2 
       (.I0(it[28]),
        .O(\it[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[28]_i_3 
       (.I0(it[27]),
        .O(\it[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[28]_i_4 
       (.I0(it[26]),
        .O(\it[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[28]_i_5 
       (.I0(it[25]),
        .O(\it[28]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \it[31]_i_1 
       (.I0(\it[31]_i_2_n_0 ),
        .I1(\FSM_onehot_state_reg_n_0_[6] ),
        .O(\it[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000555500400000)) 
    \it[31]_i_2 
       (.I0(\it[31]_i_4_n_0 ),
        .I1(\building_tree_state_reg_n_0_[1] ),
        .I2(\building_tree_state_reg_n_0_[0] ),
        .I3(\building_tree_state_reg_n_0_[2] ),
        .I4(state_reg[2]),
        .I5(state_reg[0]),
        .O(\it[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \it[31]_i_4 
       (.I0(\FSM_onehot_state_reg_n_0_[10] ),
        .I1(\FSM_onehot_state_reg_n_0_[11] ),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[9] ),
        .I4(\FSM_onehot_state_reg_n_0_[8] ),
        .I5(state_reg[1]),
        .O(\it[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[31]_i_5 
       (.I0(it[31]),
        .O(\it[31]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[31]_i_6 
       (.I0(it[30]),
        .O(\it[31]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[31]_i_7 
       (.I0(it[29]),
        .O(\it[31]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[4]_i_2 
       (.I0(it[4]),
        .O(\it[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[4]_i_3 
       (.I0(it[3]),
        .O(\it[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[4]_i_4 
       (.I0(it[2]),
        .O(\it[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[4]_i_5 
       (.I0(it[1]),
        .O(\it[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[8]_i_2 
       (.I0(it[8]),
        .O(\it[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[8]_i_3 
       (.I0(it[7]),
        .O(\it[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[8]_i_4 
       (.I0(it[6]),
        .O(\it[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \it[8]_i_5 
       (.I0(it[5]),
        .O(\it[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it[0]_i_1_n_0 ),
        .Q(it[0]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[12]_i_1_n_6 ),
        .Q(it[10]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[12]_i_1_n_5 ),
        .Q(it[11]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[12]_i_1_n_4 ),
        .Q(it[12]),
        .R(\it[31]_i_1_n_0 ));
  CARRY4 \it_reg[12]_i_1 
       (.CI(\it_reg[8]_i_1_n_0 ),
        .CO({\it_reg[12]_i_1_n_0 ,\it_reg[12]_i_1_n_1 ,\it_reg[12]_i_1_n_2 ,\it_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\it_reg[12]_i_1_n_4 ,\it_reg[12]_i_1_n_5 ,\it_reg[12]_i_1_n_6 ,\it_reg[12]_i_1_n_7 }),
        .S({\it[12]_i_2_n_0 ,\it[12]_i_3_n_0 ,\it[12]_i_4_n_0 ,\it[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[16]_i_1_n_7 ),
        .Q(it[13]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[16]_i_1_n_6 ),
        .Q(it[14]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[16]_i_1_n_5 ),
        .Q(it[15]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[16]_i_1_n_4 ),
        .Q(it[16]),
        .R(\it[31]_i_1_n_0 ));
  CARRY4 \it_reg[16]_i_1 
       (.CI(\it_reg[12]_i_1_n_0 ),
        .CO({\it_reg[16]_i_1_n_0 ,\it_reg[16]_i_1_n_1 ,\it_reg[16]_i_1_n_2 ,\it_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\it_reg[16]_i_1_n_4 ,\it_reg[16]_i_1_n_5 ,\it_reg[16]_i_1_n_6 ,\it_reg[16]_i_1_n_7 }),
        .S({\it[16]_i_2_n_0 ,\it[16]_i_3_n_0 ,\it[16]_i_4_n_0 ,\it[16]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[20]_i_1_n_7 ),
        .Q(it[17]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[20]_i_1_n_6 ),
        .Q(it[18]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[20]_i_1_n_5 ),
        .Q(it[19]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[4]_i_1_n_7 ),
        .Q(it[1]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[20]_i_1_n_4 ),
        .Q(it[20]),
        .R(\it[31]_i_1_n_0 ));
  CARRY4 \it_reg[20]_i_1 
       (.CI(\it_reg[16]_i_1_n_0 ),
        .CO({\it_reg[20]_i_1_n_0 ,\it_reg[20]_i_1_n_1 ,\it_reg[20]_i_1_n_2 ,\it_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\it_reg[20]_i_1_n_4 ,\it_reg[20]_i_1_n_5 ,\it_reg[20]_i_1_n_6 ,\it_reg[20]_i_1_n_7 }),
        .S({\it[20]_i_2_n_0 ,\it[20]_i_3_n_0 ,\it[20]_i_4_n_0 ,\it[20]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[24]_i_1_n_7 ),
        .Q(it[21]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[24]_i_1_n_6 ),
        .Q(it[22]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[24]_i_1_n_5 ),
        .Q(it[23]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[24]_i_1_n_4 ),
        .Q(it[24]),
        .R(\it[31]_i_1_n_0 ));
  CARRY4 \it_reg[24]_i_1 
       (.CI(\it_reg[20]_i_1_n_0 ),
        .CO({\it_reg[24]_i_1_n_0 ,\it_reg[24]_i_1_n_1 ,\it_reg[24]_i_1_n_2 ,\it_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\it_reg[24]_i_1_n_4 ,\it_reg[24]_i_1_n_5 ,\it_reg[24]_i_1_n_6 ,\it_reg[24]_i_1_n_7 }),
        .S({\it[24]_i_2_n_0 ,\it[24]_i_3_n_0 ,\it[24]_i_4_n_0 ,\it[24]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[28]_i_1_n_7 ),
        .Q(it[25]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[28]_i_1_n_6 ),
        .Q(it[26]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[28]_i_1_n_5 ),
        .Q(it[27]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[28]_i_1_n_4 ),
        .Q(it[28]),
        .R(\it[31]_i_1_n_0 ));
  CARRY4 \it_reg[28]_i_1 
       (.CI(\it_reg[24]_i_1_n_0 ),
        .CO({\it_reg[28]_i_1_n_0 ,\it_reg[28]_i_1_n_1 ,\it_reg[28]_i_1_n_2 ,\it_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\it_reg[28]_i_1_n_4 ,\it_reg[28]_i_1_n_5 ,\it_reg[28]_i_1_n_6 ,\it_reg[28]_i_1_n_7 }),
        .S({\it[28]_i_2_n_0 ,\it[28]_i_3_n_0 ,\it[28]_i_4_n_0 ,\it[28]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[31]_i_3_n_7 ),
        .Q(it[29]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[4]_i_1_n_6 ),
        .Q(it[2]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[31]_i_3_n_6 ),
        .Q(it[30]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[31]_i_3_n_5 ),
        .Q(it[31]),
        .R(\it[31]_i_1_n_0 ));
  CARRY4 \it_reg[31]_i_3 
       (.CI(\it_reg[28]_i_1_n_0 ),
        .CO({\NLW_it_reg[31]_i_3_CO_UNCONNECTED [3:2],\it_reg[31]_i_3_n_2 ,\it_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_it_reg[31]_i_3_O_UNCONNECTED [3],\it_reg[31]_i_3_n_5 ,\it_reg[31]_i_3_n_6 ,\it_reg[31]_i_3_n_7 }),
        .S({1'b0,\it[31]_i_5_n_0 ,\it[31]_i_6_n_0 ,\it[31]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[4]_i_1_n_5 ),
        .Q(it[3]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[4]_i_1_n_4 ),
        .Q(it[4]),
        .R(\it[31]_i_1_n_0 ));
  CARRY4 \it_reg[4]_i_1 
       (.CI(1'b0),
        .CO({\it_reg[4]_i_1_n_0 ,\it_reg[4]_i_1_n_1 ,\it_reg[4]_i_1_n_2 ,\it_reg[4]_i_1_n_3 }),
        .CYINIT(it[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\it_reg[4]_i_1_n_4 ,\it_reg[4]_i_1_n_5 ,\it_reg[4]_i_1_n_6 ,\it_reg[4]_i_1_n_7 }),
        .S({\it[4]_i_2_n_0 ,\it[4]_i_3_n_0 ,\it[4]_i_4_n_0 ,\it[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[8]_i_1_n_7 ),
        .Q(it[5]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[8]_i_1_n_6 ),
        .Q(it[6]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[8]_i_1_n_5 ),
        .Q(it[7]),
        .R(\it[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[8]_i_1_n_4 ),
        .Q(it[8]),
        .R(\it[31]_i_1_n_0 ));
  CARRY4 \it_reg[8]_i_1 
       (.CI(\it_reg[4]_i_1_n_0 ),
        .CO({\it_reg[8]_i_1_n_0 ,\it_reg[8]_i_1_n_1 ,\it_reg[8]_i_1_n_2 ,\it_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\it_reg[8]_i_1_n_4 ,\it_reg[8]_i_1_n_5 ,\it_reg[8]_i_1_n_6 ,\it_reg[8]_i_1_n_7 }),
        .S({\it[8]_i_2_n_0 ,\it[8]_i_3_n_0 ,\it[8]_i_4_n_0 ,\it[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \it_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\it[31]_i_2_n_0 ),
        .D(\it_reg[12]_i_1_n_7 ),
        .Q(it[9]),
        .R(\it[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00FF0008)) 
    \j[0]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(j[0]),
        .I4(\FSM_onehot_state_reg_n_0_[12] ),
        .O(\j[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[10]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[12]_i_2_n_6 ),
        .O(\j[10]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[11]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[12]_i_2_n_5 ),
        .O(\j[11]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[12]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[12]_i_2_n_4 ),
        .O(\j[12]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[12]_i_3 
       (.I0(j[12]),
        .O(\j[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[12]_i_4 
       (.I0(j[11]),
        .O(\j[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[12]_i_5 
       (.I0(j[10]),
        .O(\j[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[12]_i_6 
       (.I0(j[9]),
        .O(\j[12]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[13]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[16]_i_2_n_7 ),
        .O(\j[13]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[14]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[16]_i_2_n_6 ),
        .O(\j[14]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[15]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[16]_i_2_n_5 ),
        .O(\j[15]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[16]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[16]_i_2_n_4 ),
        .O(\j[16]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[16]_i_3 
       (.I0(j[16]),
        .O(\j[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[16]_i_4 
       (.I0(j[15]),
        .O(\j[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[16]_i_5 
       (.I0(j[14]),
        .O(\j[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[16]_i_6 
       (.I0(j[13]),
        .O(\j[16]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[17]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[20]_i_2_n_7 ),
        .O(\j[17]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[18]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[20]_i_2_n_6 ),
        .O(\j[18]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[19]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[20]_i_2_n_5 ),
        .O(\j[19]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[1]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(P_reg_r3_0_63_0_2_i_2_n_7),
        .O(\j[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[20]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[20]_i_2_n_4 ),
        .O(\j[20]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[20]_i_3 
       (.I0(j[20]),
        .O(\j[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[20]_i_4 
       (.I0(j[19]),
        .O(\j[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[20]_i_5 
       (.I0(j[18]),
        .O(\j[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[20]_i_6 
       (.I0(j[17]),
        .O(\j[20]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[21]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[24]_i_2_n_7 ),
        .O(\j[21]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[22]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[24]_i_2_n_6 ),
        .O(\j[22]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[23]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[24]_i_2_n_5 ),
        .O(\j[23]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[24]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[24]_i_2_n_4 ),
        .O(\j[24]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[24]_i_3 
       (.I0(j[24]),
        .O(\j[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[24]_i_4 
       (.I0(j[23]),
        .O(\j[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[24]_i_5 
       (.I0(j[22]),
        .O(\j[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[24]_i_6 
       (.I0(j[21]),
        .O(\j[24]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[25]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[28]_i_2_n_7 ),
        .O(\j[25]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[26]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[28]_i_2_n_6 ),
        .O(\j[26]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[27]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[28]_i_2_n_5 ),
        .O(\j[27]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[28]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[28]_i_2_n_4 ),
        .O(\j[28]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[28]_i_3 
       (.I0(j[28]),
        .O(\j[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[28]_i_4 
       (.I0(j[27]),
        .O(\j[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[28]_i_5 
       (.I0(j[26]),
        .O(\j[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[28]_i_6 
       (.I0(j[25]),
        .O(\j[28]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[29]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[31]_i_4_n_7 ),
        .O(\j[29]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[2]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(P_reg_r3_0_63_0_2_i_2_n_6),
        .O(\j[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[30]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[31]_i_4_n_6 ),
        .O(\j[30]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFEFEFE)) 
    \j[31]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[5] ),
        .I1(\FSM_onehot_state_reg_n_0_[12] ),
        .I2(\FSM_onehot_state_reg_n_0_[0] ),
        .I3(\FSM_onehot_state_reg_n_0_[6] ),
        .I4(\j[31]_i_3_n_0 ),
        .O(\j[31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[31]_i_2 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[31]_i_4_n_5 ),
        .O(\j[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1111010000000100)) 
    \j[31]_i_3 
       (.I0(\building_tree_state_reg_n_0_[2] ),
        .I1(\building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[0] ),
        .I3(\sorting_state_reg_n_0_[2] ),
        .I4(\building_tree_state_reg_n_0_[1] ),
        .I5(\last_symbol_reg[31]_i_3_n_7 ),
        .O(\j[31]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[31]_i_5 
       (.I0(j[31]),
        .O(\j[31]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[31]_i_6 
       (.I0(j[30]),
        .O(\j[31]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \j[31]_i_7 
       (.I0(j[29]),
        .O(\j[31]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[3]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(P_reg_r3_0_63_0_2_i_2_n_5),
        .O(\j[3]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[4]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(P_reg_r3_0_63_0_2_i_2_n_4),
        .O(\j[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[5]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(P_reg_r3_0_63_0_2_i_1_n_7),
        .O(\j[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[6]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(P_reg_r3_0_63_0_2_i_1_n_6),
        .O(\j[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[7]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(P_reg_r3_0_63_0_2_i_1_n_5),
        .O(\j[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[8]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(P_reg_r3_0_63_0_2_i_1_n_4),
        .O(\j[8]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFF080000)) 
    \j[9]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[12] ),
        .I4(\j_reg[12]_i_2_n_7 ),
        .O(\j[9]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[0]_i_1_n_0 ),
        .Q(j[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[10]_i_1_n_0 ),
        .Q(j[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[11]_i_1_n_0 ),
        .Q(j[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[12]_i_1_n_0 ),
        .Q(j[12]),
        .R(1'b0));
  CARRY4 \j_reg[12]_i_2 
       (.CI(P_reg_r3_0_63_0_2_i_1_n_0),
        .CO({\j_reg[12]_i_2_n_0 ,\j_reg[12]_i_2_n_1 ,\j_reg[12]_i_2_n_2 ,\j_reg[12]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\j_reg[12]_i_2_n_4 ,\j_reg[12]_i_2_n_5 ,\j_reg[12]_i_2_n_6 ,\j_reg[12]_i_2_n_7 }),
        .S({\j[12]_i_3_n_0 ,\j[12]_i_4_n_0 ,\j[12]_i_5_n_0 ,\j[12]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[13]_i_1_n_0 ),
        .Q(j[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[14]_i_1_n_0 ),
        .Q(j[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[15]_i_1_n_0 ),
        .Q(j[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[16]_i_1_n_0 ),
        .Q(j[16]),
        .R(1'b0));
  CARRY4 \j_reg[16]_i_2 
       (.CI(\j_reg[12]_i_2_n_0 ),
        .CO({\j_reg[16]_i_2_n_0 ,\j_reg[16]_i_2_n_1 ,\j_reg[16]_i_2_n_2 ,\j_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\j_reg[16]_i_2_n_4 ,\j_reg[16]_i_2_n_5 ,\j_reg[16]_i_2_n_6 ,\j_reg[16]_i_2_n_7 }),
        .S({\j[16]_i_3_n_0 ,\j[16]_i_4_n_0 ,\j[16]_i_5_n_0 ,\j[16]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[17]_i_1_n_0 ),
        .Q(j[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[18]_i_1_n_0 ),
        .Q(j[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[19]_i_1_n_0 ),
        .Q(j[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[1]_i_1_n_0 ),
        .Q(j[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[20]_i_1_n_0 ),
        .Q(j[20]),
        .R(1'b0));
  CARRY4 \j_reg[20]_i_2 
       (.CI(\j_reg[16]_i_2_n_0 ),
        .CO({\j_reg[20]_i_2_n_0 ,\j_reg[20]_i_2_n_1 ,\j_reg[20]_i_2_n_2 ,\j_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\j_reg[20]_i_2_n_4 ,\j_reg[20]_i_2_n_5 ,\j_reg[20]_i_2_n_6 ,\j_reg[20]_i_2_n_7 }),
        .S({\j[20]_i_3_n_0 ,\j[20]_i_4_n_0 ,\j[20]_i_5_n_0 ,\j[20]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[21]_i_1_n_0 ),
        .Q(j[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[22]_i_1_n_0 ),
        .Q(j[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[23]_i_1_n_0 ),
        .Q(j[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[24]_i_1_n_0 ),
        .Q(j[24]),
        .R(1'b0));
  CARRY4 \j_reg[24]_i_2 
       (.CI(\j_reg[20]_i_2_n_0 ),
        .CO({\j_reg[24]_i_2_n_0 ,\j_reg[24]_i_2_n_1 ,\j_reg[24]_i_2_n_2 ,\j_reg[24]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\j_reg[24]_i_2_n_4 ,\j_reg[24]_i_2_n_5 ,\j_reg[24]_i_2_n_6 ,\j_reg[24]_i_2_n_7 }),
        .S({\j[24]_i_3_n_0 ,\j[24]_i_4_n_0 ,\j[24]_i_5_n_0 ,\j[24]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[25]_i_1_n_0 ),
        .Q(j[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[26]_i_1_n_0 ),
        .Q(j[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[27]_i_1_n_0 ),
        .Q(j[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[28]_i_1_n_0 ),
        .Q(j[28]),
        .R(1'b0));
  CARRY4 \j_reg[28]_i_2 
       (.CI(\j_reg[24]_i_2_n_0 ),
        .CO({\j_reg[28]_i_2_n_0 ,\j_reg[28]_i_2_n_1 ,\j_reg[28]_i_2_n_2 ,\j_reg[28]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\j_reg[28]_i_2_n_4 ,\j_reg[28]_i_2_n_5 ,\j_reg[28]_i_2_n_6 ,\j_reg[28]_i_2_n_7 }),
        .S({\j[28]_i_3_n_0 ,\j[28]_i_4_n_0 ,\j[28]_i_5_n_0 ,\j[28]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[29]_i_1_n_0 ),
        .Q(j[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[2]_i_1_n_0 ),
        .Q(j[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[30]_i_1_n_0 ),
        .Q(j[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[31]_i_2_n_0 ),
        .Q(j[31]),
        .R(1'b0));
  CARRY4 \j_reg[31]_i_4 
       (.CI(\j_reg[28]_i_2_n_0 ),
        .CO({\NLW_j_reg[31]_i_4_CO_UNCONNECTED [3:2],\j_reg[31]_i_4_n_2 ,\j_reg[31]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_j_reg[31]_i_4_O_UNCONNECTED [3],\j_reg[31]_i_4_n_5 ,\j_reg[31]_i_4_n_6 ,\j_reg[31]_i_4_n_7 }),
        .S({1'b0,\j[31]_i_5_n_0 ,\j[31]_i_6_n_0 ,\j[31]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[3]_i_1_n_0 ),
        .Q(j[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[4]_i_1_n_0 ),
        .Q(j[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[5]_i_1_n_0 ),
        .Q(j[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[6]_i_1_n_0 ),
        .Q(j[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[7]_i_1_n_0 ),
        .Q(j[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[8]_i_1_n_0 ),
        .Q(j[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[9]_i_1_n_0 ),
        .Q(j[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[0]_i_1_n_0 ),
        .Q(j_reg_rep__2[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[0]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[0]_i_1_n_0 ),
        .Q(\j_reg_rep[0]__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[0]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[0]_i_1_n_0 ),
        .Q(\j_reg_rep[0]__1_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[1]_i_1_n_0 ),
        .Q(j_reg_rep__2[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[1]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[1]_i_1_n_0 ),
        .Q(\j_reg_rep[1]__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[1]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[1]_i_1_n_0 ),
        .Q(\j_reg_rep[1]__1_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[2]_i_1_n_0 ),
        .Q(j_reg_rep__2[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[2]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[2]_i_1_n_0 ),
        .Q(\j_reg_rep[2]__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[2]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[2]_i_1_n_0 ),
        .Q(\j_reg_rep[2]__1_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[3]_i_1_n_0 ),
        .Q(j_reg_rep__2[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[3]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[3]_i_1_n_0 ),
        .Q(\j_reg_rep[3]__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[3]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[3]_i_1_n_0 ),
        .Q(\j_reg_rep[3]__1_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[4]_i_1_n_0 ),
        .Q(j_reg_rep__2[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[4]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[4]_i_1_n_0 ),
        .Q(\j_reg_rep[4]__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[4]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[4]_i_1_n_0 ),
        .Q(\j_reg_rep[4]__1_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[5]_i_1_n_0 ),
        .Q(j_reg_rep__2[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[5]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[5]_i_1_n_0 ),
        .Q(\j_reg_rep[5]__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[5]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[5]_i_1_n_0 ),
        .Q(\j_reg_rep[5]__1_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[6]_i_1_n_0 ),
        .Q(j_reg_rep__2[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[6]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[6]_i_1_n_0 ),
        .Q(\j_reg_rep[6]__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[6]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[6]_i_1_n_0 ),
        .Q(\j_reg_rep[6]__1_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[7]_i_1_n_0 ),
        .Q(j_reg_rep__2[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[7]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[7]_i_1_n_0 ),
        .Q(\j_reg_rep[7]__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \j_reg_rep[7]__1 
       (.C(clock_IBUF_BUFG),
        .CE(\j[31]_i_1_n_0 ),
        .D(\j[7]_i_1_n_0 ),
        .Q(\j_reg_rep[7]__1_n_0 ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[0]_i_1 
       (.I0(ID_reg_r3_192_255_0_2_n_0),
        .I1(ID_reg_r3_128_191_0_2_n_0),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_0_2_n_0),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_0_2_n_0),
        .O(last_symbol0[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[1]_i_1 
       (.I0(ID_reg_r3_192_255_0_2_n_1),
        .I1(ID_reg_r3_128_191_0_2_n_1),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_0_2_n_1),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_0_2_n_1),
        .O(last_symbol0[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[27]_i_1 
       (.I0(ID_reg_r3_192_255_27_29_n_0),
        .I1(ID_reg_r3_128_191_27_29_n_0),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_27_29_n_0),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_27_29_n_0),
        .O(last_symbol0[27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[28]_i_1 
       (.I0(ID_reg_r3_192_255_27_29_n_1),
        .I1(ID_reg_r3_128_191_27_29_n_1),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_27_29_n_1),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_27_29_n_1),
        .O(last_symbol0[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[29]_i_1 
       (.I0(ID_reg_r3_192_255_27_29_n_2),
        .I1(ID_reg_r3_128_191_27_29_n_2),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_27_29_n_2),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_27_29_n_2),
        .O(last_symbol0[29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[2]_i_1 
       (.I0(ID_reg_r3_192_255_0_2_n_2),
        .I1(ID_reg_r3_128_191_0_2_n_2),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_0_2_n_2),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_0_2_n_2),
        .O(last_symbol0[2]));
  LUT3 #(
    .INIT(8'h80)) 
    \last_symbol[31]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\FSM_onehot_building_tree_state_reg_n_0_[6] ),
        .I2(\last_symbol_reg[31]_i_3_n_7 ),
        .O(\last_symbol[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[31]_i_2 
       (.I0(ID_reg_r3_192_255_31_31_n_0),
        .I1(ID_reg_r3_128_191_31_31_n_0),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_31_31_n_0),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_31_31_n_0),
        .O(last_symbol0[31]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[3]_i_1 
       (.I0(ID_reg_r3_192_255_3_5_n_0),
        .I1(ID_reg_r3_128_191_3_5_n_0),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_3_5_n_0),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_3_5_n_0),
        .O(last_symbol0[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[4]_i_1 
       (.I0(ID_reg_r3_192_255_3_5_n_1),
        .I1(ID_reg_r3_128_191_3_5_n_1),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_3_5_n_1),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_3_5_n_1),
        .O(last_symbol0[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[5]_i_1 
       (.I0(ID_reg_r3_192_255_3_5_n_2),
        .I1(ID_reg_r3_128_191_3_5_n_2),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_3_5_n_2),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_3_5_n_2),
        .O(last_symbol0[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[6]_i_1 
       (.I0(ID_reg_r3_192_255_6_8_n_0),
        .I1(ID_reg_r3_128_191_6_8_n_0),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_6_8_n_0),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_6_8_n_0),
        .O(last_symbol0[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[7]_i_1 
       (.I0(ID_reg_r3_192_255_6_8_n_1),
        .I1(ID_reg_r3_128_191_6_8_n_1),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_6_8_n_1),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_6_8_n_1),
        .O(last_symbol0[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \last_symbol[8]_i_1 
       (.I0(ID_reg_r3_192_255_6_8_n_2),
        .I1(ID_reg_r3_128_191_6_8_n_2),
        .I2(ID_reg_r3_0_63_0_2_i_1_n_5),
        .I3(ID_reg_r3_64_127_6_8_n_2),
        .I4(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I5(ID_reg_r3_0_63_6_8_n_2),
        .O(last_symbol0[8]));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[0]),
        .Q(last_symbol[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[28]),
        .Q(last_symbol[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[29]),
        .Q(last_symbol[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[27]),
        .Q(last_symbol[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[28]),
        .Q(last_symbol[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[29]),
        .Q(last_symbol[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[27]),
        .Q(last_symbol[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[28]),
        .Q(last_symbol[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[29]),
        .Q(last_symbol[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[27]),
        .Q(last_symbol[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[28]),
        .Q(last_symbol[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[1]),
        .Q(last_symbol[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[29]),
        .Q(last_symbol[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[27]),
        .Q(last_symbol[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[28]),
        .Q(last_symbol[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[29]),
        .Q(last_symbol[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[27]),
        .Q(last_symbol[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[28]),
        .Q(last_symbol[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[29]),
        .Q(last_symbol[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[27]),
        .Q(last_symbol[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[28]),
        .Q(last_symbol[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[29]),
        .Q(last_symbol[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[2]),
        .Q(last_symbol[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[31]),
        .Q(last_symbol[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[31]),
        .Q(last_symbol[31]),
        .R(1'b0));
  CARRY4 \last_symbol_reg[31]_i_3 
       (.CI(\FSM_onehot_building_tree_state_reg[7]_i_2_n_0 ),
        .CO(\NLW_last_symbol_reg[31]_i_3_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_last_symbol_reg[31]_i_3_O_UNCONNECTED [3:1],\last_symbol_reg[31]_i_3_n_7 }),
        .S({1'b0,1'b0,1'b0,1'b1}));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[3]),
        .Q(last_symbol[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[4]),
        .Q(last_symbol[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[5]),
        .Q(last_symbol[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[6]),
        .Q(last_symbol[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[7]),
        .Q(last_symbol[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[8]),
        .Q(last_symbol[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \last_symbol_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\last_symbol[31]_i_1_n_0 ),
        .D(last_symbol0[27]),
        .Q(last_symbol[9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB8)) 
    \making_tree_state[0]_i_1 
       (.I0(\making_tree_state[0]_i_2_n_0 ),
        .I1(making_tree_state),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .O(\making_tree_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hE9E9E9E9E9E9E9FF)) 
    \making_tree_state[0]_i_2 
       (.I0(\making_tree_state_reg_n_0_[0] ),
        .I1(\making_tree_state_reg_n_0_[2] ),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(\making_tree_state[0]_i_3_n_0 ),
        .I4(making_tree_state1[31]),
        .I5(\making_tree_state_reg[2]_i_3_n_1 ),
        .O(\making_tree_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \making_tree_state[0]_i_3 
       (.I0(\making_tree_state[2]_i_13_n_0 ),
        .I1(\making_tree_state[2]_i_10_n_0 ),
        .I2(\making_tree_state[0]_i_4_n_0 ),
        .I3(\making_tree_state[2]_i_12_n_0 ),
        .I4(\making_tree_state[0]_i_5_n_0 ),
        .I5(\making_tree_state[0]_i_6_n_0 ),
        .O(\making_tree_state[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[0]_i_4 
       (.I0(making_tree_state1[16]),
        .I1(making_tree_state1[15]),
        .O(\making_tree_state[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \making_tree_state[0]_i_5 
       (.I0(making_tree_state1[26]),
        .I1(making_tree_state1[25]),
        .I2(\making_tree_state[2]_i_28_n_0 ),
        .I3(making_tree_state1[30]),
        .I4(making_tree_state1[29]),
        .I5(\making_tree_state[2]_i_11_n_0 ),
        .O(\making_tree_state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \making_tree_state[0]_i_6 
       (.I0(making_tree_state1[8]),
        .I1(making_tree_state1[7]),
        .I2(\making_tree_state[2]_i_30_n_0 ),
        .I3(\making_tree_state[2]_i_31_n_0 ),
        .I4(\making_tree_state[2]_i_29_n_0 ),
        .I5(\making_tree_state[0]_i_7_n_0 ),
        .O(\making_tree_state[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \making_tree_state[0]_i_7 
       (.I0(making_tree_state1[2]),
        .I1(making_tree_state1[1]),
        .I2(\making_tree_state[2]_i_38_n_0 ),
        .I3(\making_tree_state[2]_i_37_n_0 ),
        .I4(making_tree_state1[0]),
        .I5(\making_tree_state_reg_n_0_[1] ),
        .O(\making_tree_state[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAA8FFFFAAA80000)) 
    \making_tree_state[1]_i_1 
       (.I0(\making_tree_state[1]_i_2_n_0 ),
        .I1(\making_tree_state[1]_i_3_n_0 ),
        .I2(\making_tree_state[1]_i_4_n_0 ),
        .I3(making_tree_state1[0]),
        .I4(making_tree_state),
        .I5(\making_tree_state_reg_n_0_[1] ),
        .O(\making_tree_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_10 
       (.I0(P_reg_r1_192_255_27_29_n_2),
        .I1(P_reg_r1_128_191_27_29_n_2),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_27_29_n_2),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_27_29_n_2),
        .O(making_tree_state1[29]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \making_tree_state[1]_i_11 
       (.I0(making_tree_state1[21]),
        .I1(making_tree_state1[20]),
        .I2(making_tree_state1[23]),
        .I3(making_tree_state1[22]),
        .I4(\making_tree_state[1]_i_26_n_0 ),
        .O(\making_tree_state[1]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \making_tree_state[1]_i_12 
       (.I0(making_tree_state1[10]),
        .I1(making_tree_state1[11]),
        .I2(making_tree_state1[8]),
        .I3(making_tree_state1[9]),
        .O(\making_tree_state[1]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_13 
       (.I0(P_reg_r1_192_255_12_14_n_2),
        .I1(P_reg_r1_128_191_12_14_n_2),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_12_14_n_2),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_12_14_n_2),
        .O(making_tree_state1[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_14 
       (.I0(P_reg_r1_192_255_15_17_n_0),
        .I1(P_reg_r1_128_191_15_17_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_15_17_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_15_17_n_0),
        .O(making_tree_state1[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_15 
       (.I0(P_reg_r1_192_255_12_14_n_0),
        .I1(P_reg_r1_128_191_12_14_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_12_14_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_12_14_n_0),
        .O(making_tree_state1[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_16 
       (.I0(P_reg_r1_192_255_12_14_n_1),
        .I1(P_reg_r1_128_191_12_14_n_1),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_12_14_n_1),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_12_14_n_1),
        .O(making_tree_state1[13]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \making_tree_state[1]_i_17 
       (.I0(making_tree_state1[5]),
        .I1(making_tree_state1[4]),
        .I2(making_tree_state1[7]),
        .I3(making_tree_state1[6]),
        .I4(\making_tree_state[1]_i_35_n_0 ),
        .O(\making_tree_state[1]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_18 
       (.I0(P_reg_r1_192_255_24_26_n_2),
        .I1(P_reg_r1_128_191_24_26_n_2),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_24_26_n_2),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_24_26_n_2),
        .O(making_tree_state1[26]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_19 
       (.I0(P_reg_r1_192_255_27_29_n_0),
        .I1(P_reg_r1_128_191_27_29_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_27_29_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_27_29_n_0),
        .O(making_tree_state1[27]));
  LUT5 #(
    .INIT(32'h000CFF5F)) 
    \making_tree_state[1]_i_2 
       (.I0(\making_tree_state_reg[2]_i_3_n_1 ),
        .I1(\position_reg_rep[7]_i_4_n_1 ),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(\making_tree_state_reg_n_0_[0] ),
        .O(\making_tree_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_20 
       (.I0(P_reg_r1_192_255_24_26_n_0),
        .I1(P_reg_r1_128_191_24_26_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_24_26_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_24_26_n_0),
        .O(making_tree_state1[24]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_21 
       (.I0(P_reg_r1_192_255_24_26_n_1),
        .I1(P_reg_r1_128_191_24_26_n_1),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_24_26_n_1),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_24_26_n_1),
        .O(making_tree_state1[25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_22 
       (.I0(P_reg_r1_192_255_21_23_n_0),
        .I1(P_reg_r1_128_191_21_23_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_21_23_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_21_23_n_0),
        .O(making_tree_state1[21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_23 
       (.I0(P_reg_r1_192_255_18_20_n_2),
        .I1(P_reg_r1_128_191_18_20_n_2),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_18_20_n_2),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_18_20_n_2),
        .O(making_tree_state1[20]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_24 
       (.I0(P_reg_r1_192_255_21_23_n_2),
        .I1(P_reg_r1_128_191_21_23_n_2),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_21_23_n_2),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_21_23_n_2),
        .O(making_tree_state1[23]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_25 
       (.I0(P_reg_r1_192_255_21_23_n_1),
        .I1(P_reg_r1_128_191_21_23_n_1),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_21_23_n_1),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_21_23_n_1),
        .O(making_tree_state1[22]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \making_tree_state[1]_i_26 
       (.I0(making_tree_state1[18]),
        .I1(making_tree_state1[19]),
        .I2(making_tree_state1[16]),
        .I3(making_tree_state1[17]),
        .O(\making_tree_state[1]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_27 
       (.I0(P_reg_r1_192_255_9_11_n_1),
        .I1(P_reg_r1_128_191_9_11_n_1),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_9_11_n_1),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_9_11_n_1),
        .O(making_tree_state1[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_28 
       (.I0(P_reg_r1_192_255_9_11_n_2),
        .I1(P_reg_r1_128_191_9_11_n_2),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_9_11_n_2),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_9_11_n_2),
        .O(making_tree_state1[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_29 
       (.I0(P_reg_r1_192_255_6_8_n_2),
        .I1(P_reg_r1_128_191_6_8_n_2),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_6_8_n_2),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_6_8_n_2),
        .O(making_tree_state1[8]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \making_tree_state[1]_i_3 
       (.I0(\making_tree_state[1]_i_6_n_0 ),
        .I1(making_tree_state1[30]),
        .I2(making_tree_state1[31]),
        .I3(making_tree_state1[28]),
        .I4(making_tree_state1[29]),
        .I5(\making_tree_state[1]_i_11_n_0 ),
        .O(\making_tree_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_30 
       (.I0(P_reg_r1_192_255_9_11_n_0),
        .I1(P_reg_r1_128_191_9_11_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_9_11_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_9_11_n_0),
        .O(making_tree_state1[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_31 
       (.I0(P_reg_r1_192_255_3_5_n_2),
        .I1(P_reg_r1_128_191_3_5_n_2),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_3_5_n_2),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_3_5_n_2),
        .O(making_tree_state1[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_32 
       (.I0(P_reg_r1_192_255_3_5_n_1),
        .I1(P_reg_r1_128_191_3_5_n_1),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_3_5_n_1),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_3_5_n_1),
        .O(making_tree_state1[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_33 
       (.I0(P_reg_r1_192_255_6_8_n_1),
        .I1(P_reg_r1_128_191_6_8_n_1),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_6_8_n_1),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_6_8_n_1),
        .O(making_tree_state1[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_34 
       (.I0(P_reg_r1_192_255_6_8_n_0),
        .I1(P_reg_r1_128_191_6_8_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_6_8_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_6_8_n_0),
        .O(making_tree_state1[6]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFFFF)) 
    \making_tree_state[1]_i_35 
       (.I0(making_tree_state1[2]),
        .I1(making_tree_state1[3]),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(\making_tree_state_reg_n_0_[1] ),
        .I5(making_tree_state1[1]),
        .O(\making_tree_state[1]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_36 
       (.I0(P_reg_r1_192_255_15_17_n_1),
        .I1(P_reg_r1_128_191_15_17_n_1),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_15_17_n_1),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_15_17_n_1),
        .O(making_tree_state1[16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_37 
       (.I0(P_reg_r1_192_255_0_2_n_2),
        .I1(P_reg_r1_128_191_0_2_n_2),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_0_2_n_2),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_0_2_n_2),
        .O(making_tree_state1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_38 
       (.I0(P_reg_r1_192_255_3_5_n_0),
        .I1(P_reg_r1_128_191_3_5_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_3_5_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_3_5_n_0),
        .O(making_tree_state1[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_39 
       (.I0(P_reg_r1_192_255_0_2_n_1),
        .I1(P_reg_r1_128_191_0_2_n_1),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_0_2_n_1),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_0_2_n_1),
        .O(making_tree_state1[1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \making_tree_state[1]_i_4 
       (.I0(\making_tree_state[1]_i_12_n_0 ),
        .I1(making_tree_state1[14]),
        .I2(making_tree_state1[15]),
        .I3(making_tree_state1[12]),
        .I4(making_tree_state1[13]),
        .I5(\making_tree_state[1]_i_17_n_0 ),
        .O(\making_tree_state[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_5 
       (.I0(P_reg_r1_192_255_0_2_n_0),
        .I1(P_reg_r1_128_191_0_2_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_0_2_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_0_2_n_0),
        .O(making_tree_state1[0]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \making_tree_state[1]_i_6 
       (.I0(making_tree_state1[26]),
        .I1(making_tree_state1[27]),
        .I2(making_tree_state1[24]),
        .I3(making_tree_state1[25]),
        .O(\making_tree_state[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_7 
       (.I0(P_reg_r1_192_255_30_30_n_0),
        .I1(P_reg_r1_128_191_30_30_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_30_30_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_30_30_n_0),
        .O(making_tree_state1[30]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_8 
       (.I0(P_reg_r1_192_255_31_31_n_0),
        .I1(P_reg_r1_128_191_31_31_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_31_31_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_31_31_n_0),
        .O(making_tree_state1[31]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[1]_i_9 
       (.I0(P_reg_r1_192_255_27_29_n_1),
        .I1(P_reg_r1_128_191_27_29_n_1),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_27_29_n_1),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_27_29_n_1),
        .O(making_tree_state1[28]));
  LUT4 #(
    .INIT(16'h2F20)) 
    \making_tree_state[2]_i_1 
       (.I0(\making_tree_state_reg_n_0_[1] ),
        .I1(\making_tree_state_reg_n_0_[0] ),
        .I2(making_tree_state),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .O(\making_tree_state[2]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_10 
       (.I0(making_tree_state1[22]),
        .I1(making_tree_state1[21]),
        .O(\making_tree_state[2]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_11 
       (.I0(making_tree_state1[24]),
        .I1(making_tree_state1[23]),
        .O(\making_tree_state[2]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_12 
       (.I0(making_tree_state1[18]),
        .I1(making_tree_state1[17]),
        .O(\making_tree_state[2]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_13 
       (.I0(making_tree_state1[20]),
        .I1(making_tree_state1[19]),
        .O(\making_tree_state[2]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \making_tree_state[2]_i_14 
       (.I0(making_tree_state1[26]),
        .I1(making_tree_state1[25]),
        .I2(making_tree_state1[31]),
        .I3(making_tree_state1[29]),
        .I4(making_tree_state1[30]),
        .I5(\making_tree_state[2]_i_28_n_0 ),
        .O(\making_tree_state[2]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \making_tree_state[2]_i_15 
       (.I0(\making_tree_state[2]_i_29_n_0 ),
        .I1(\making_tree_state[2]_i_30_n_0 ),
        .I2(\making_tree_state[0]_i_4_n_0 ),
        .I3(\making_tree_state[2]_i_31_n_0 ),
        .I4(\making_tree_state[2]_i_32_n_0 ),
        .O(\making_tree_state[2]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \making_tree_state[2]_i_17 
       (.I0(current_symbol[21]),
        .I1(making_tree_state2[27]),
        .I2(making_tree_state2[29]),
        .I3(current_symbol[23]),
        .I4(making_tree_state2[28]),
        .I5(current_symbol[22]),
        .O(\making_tree_state[2]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \making_tree_state[2]_i_18 
       (.I0(current_symbol[18]),
        .I1(making_tree_state2[27]),
        .I2(making_tree_state2[29]),
        .I3(current_symbol[20]),
        .I4(making_tree_state2[28]),
        .I5(current_symbol[19]),
        .O(\making_tree_state[2]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \making_tree_state[2]_i_19 
       (.I0(current_symbol[15]),
        .I1(making_tree_state2[27]),
        .I2(making_tree_state2[29]),
        .I3(current_symbol[17]),
        .I4(making_tree_state2[28]),
        .I5(current_symbol[16]),
        .O(\making_tree_state[2]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAA8AAA800)) 
    \making_tree_state[2]_i_2 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(\making_tree_state_reg[2]_i_3_n_1 ),
        .I2(\making_tree_state[2]_i_4_n_0 ),
        .I3(\making_tree_state_reg_n_0_[1] ),
        .I4(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I5(\making_tree_state[2]_i_5_n_0 ),
        .O(making_tree_state));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \making_tree_state[2]_i_20 
       (.I0(current_symbol[12]),
        .I1(making_tree_state2[27]),
        .I2(making_tree_state2[29]),
        .I3(current_symbol[14]),
        .I4(making_tree_state2[28]),
        .I5(current_symbol[13]),
        .O(\making_tree_state[2]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_21 
       (.I0(ID_reg_r1_192_255_31_31_n_0),
        .I1(ID_reg_r1_128_191_31_31_n_0),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_31_31_n_0),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_31_31_n_0),
        .O(making_tree_state2[31]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_22 
       (.I0(ID_reg_r1_192_255_27_29_n_0),
        .I1(ID_reg_r1_128_191_27_29_n_0),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_27_29_n_0),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_27_29_n_0),
        .O(making_tree_state2[27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_23 
       (.I0(ID_reg_r1_192_255_27_29_n_2),
        .I1(ID_reg_r1_128_191_27_29_n_2),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_27_29_n_2),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_27_29_n_2),
        .O(making_tree_state2[29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_24 
       (.I0(ID_reg_r1_192_255_27_29_n_1),
        .I1(ID_reg_r1_128_191_27_29_n_1),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_27_29_n_1),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_27_29_n_1),
        .O(making_tree_state2[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_25 
       (.I0(P_reg_r1_192_255_18_20_n_0),
        .I1(P_reg_r1_128_191_18_20_n_0),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_18_20_n_0),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_18_20_n_0),
        .O(making_tree_state1[18]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_26 
       (.I0(P_reg_r1_192_255_15_17_n_2),
        .I1(P_reg_r1_128_191_15_17_n_2),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_15_17_n_2),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_15_17_n_2),
        .O(making_tree_state1[17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_27 
       (.I0(P_reg_r1_192_255_18_20_n_1),
        .I1(P_reg_r1_128_191_18_20_n_1),
        .I2(position_reg_rep__1__0[7]),
        .I3(P_reg_r1_64_127_18_20_n_1),
        .I4(position_reg_rep__1__0[6]),
        .I5(P_reg_r1_0_63_18_20_n_1),
        .O(making_tree_state1[19]));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_28 
       (.I0(making_tree_state1[28]),
        .I1(making_tree_state1[27]),
        .O(\making_tree_state[2]_i_28_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_29 
       (.I0(making_tree_state1[12]),
        .I1(making_tree_state1[11]),
        .O(\making_tree_state[2]_i_29_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_30 
       (.I0(making_tree_state1[10]),
        .I1(making_tree_state1[9]),
        .O(\making_tree_state[2]_i_30_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_31 
       (.I0(making_tree_state1[14]),
        .I1(making_tree_state1[13]),
        .O(\making_tree_state[2]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \making_tree_state[2]_i_32 
       (.I0(making_tree_state1[8]),
        .I1(making_tree_state1[7]),
        .I2(making_tree_state1[2]),
        .I3(making_tree_state1[1]),
        .I4(\making_tree_state[2]_i_37_n_0 ),
        .I5(\making_tree_state[2]_i_38_n_0 ),
        .O(\making_tree_state[2]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \making_tree_state[2]_i_33 
       (.I0(current_symbol[9]),
        .I1(making_tree_state2[27]),
        .I2(making_tree_state2[29]),
        .I3(current_symbol[11]),
        .I4(making_tree_state2[28]),
        .I5(current_symbol[10]),
        .O(\making_tree_state[2]_i_33_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \making_tree_state[2]_i_34 
       (.I0(current_symbol[6]),
        .I1(making_tree_state2[6]),
        .I2(making_tree_state2[8]),
        .I3(current_symbol[8]),
        .I4(making_tree_state2[7]),
        .I5(current_symbol[7]),
        .O(\making_tree_state[2]_i_34_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \making_tree_state[2]_i_35 
       (.I0(current_symbol[3]),
        .I1(making_tree_state2[3]),
        .I2(making_tree_state2[5]),
        .I3(current_symbol[5]),
        .I4(making_tree_state2[4]),
        .I5(current_symbol[4]),
        .O(\making_tree_state[2]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \making_tree_state[2]_i_36 
       (.I0(current_symbol[0]),
        .I1(making_tree_state2[0]),
        .I2(making_tree_state2[2]),
        .I3(current_symbol[2]),
        .I4(making_tree_state2[1]),
        .I5(current_symbol[1]),
        .O(\making_tree_state[2]_i_36_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_37 
       (.I0(making_tree_state1[6]),
        .I1(making_tree_state1[5]),
        .O(\making_tree_state[2]_i_37_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_38 
       (.I0(making_tree_state1[4]),
        .I1(making_tree_state1[3]),
        .O(\making_tree_state[2]_i_38_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_39 
       (.I0(ID_reg_r1_192_255_6_8_n_0),
        .I1(ID_reg_r1_128_191_6_8_n_0),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_6_8_n_0),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_6_8_n_0),
        .O(making_tree_state2[6]));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \making_tree_state[2]_i_4 
       (.I0(\making_tree_state[2]_i_10_n_0 ),
        .I1(\making_tree_state[2]_i_11_n_0 ),
        .I2(\making_tree_state[2]_i_12_n_0 ),
        .I3(\making_tree_state[2]_i_13_n_0 ),
        .I4(\making_tree_state[2]_i_14_n_0 ),
        .I5(\making_tree_state[2]_i_15_n_0 ),
        .O(\making_tree_state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_40 
       (.I0(ID_reg_r1_192_255_6_8_n_2),
        .I1(ID_reg_r1_128_191_6_8_n_2),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_6_8_n_2),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_6_8_n_2),
        .O(making_tree_state2[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_41 
       (.I0(ID_reg_r1_192_255_6_8_n_1),
        .I1(ID_reg_r1_128_191_6_8_n_1),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_6_8_n_1),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_6_8_n_1),
        .O(making_tree_state2[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_42 
       (.I0(ID_reg_r1_192_255_3_5_n_0),
        .I1(ID_reg_r1_128_191_3_5_n_0),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_3_5_n_0),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_3_5_n_0),
        .O(making_tree_state2[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_43 
       (.I0(ID_reg_r1_192_255_3_5_n_2),
        .I1(ID_reg_r1_128_191_3_5_n_2),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_3_5_n_2),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_3_5_n_2),
        .O(making_tree_state2[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_44 
       (.I0(ID_reg_r1_192_255_3_5_n_1),
        .I1(ID_reg_r1_128_191_3_5_n_1),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_3_5_n_1),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_3_5_n_1),
        .O(making_tree_state2[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_45 
       (.I0(ID_reg_r1_192_255_0_2_n_0),
        .I1(ID_reg_r1_128_191_0_2_n_0),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_0_2_n_0),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_0_2_n_0),
        .O(making_tree_state2[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_46 
       (.I0(ID_reg_r1_192_255_0_2_n_2),
        .I1(ID_reg_r1_128_191_0_2_n_2),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_0_2_n_2),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_0_2_n_2),
        .O(making_tree_state2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \making_tree_state[2]_i_47 
       (.I0(ID_reg_r1_192_255_0_2_n_1),
        .I1(ID_reg_r1_128_191_0_2_n_1),
        .I2(position_reg_rep__0__0[7]),
        .I3(ID_reg_r1_64_127_0_2_n_1),
        .I4(position_reg_rep__0__0[6]),
        .I5(ID_reg_r1_0_63_0_2_n_1),
        .O(making_tree_state2[1]));
  LUT2 #(
    .INIT(4'hE)) 
    \making_tree_state[2]_i_5 
       (.I0(\making_tree_state_reg_n_0_[2] ),
        .I1(\making_tree_state_reg_n_0_[0] ),
        .O(\making_tree_state[2]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h81)) 
    \making_tree_state[2]_i_7 
       (.I0(current_symbol[30]),
        .I1(current_symbol[31]),
        .I2(making_tree_state2[31]),
        .O(\making_tree_state[2]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \making_tree_state[2]_i_8 
       (.I0(current_symbol[27]),
        .I1(making_tree_state2[27]),
        .I2(making_tree_state2[29]),
        .I3(current_symbol[29]),
        .I4(making_tree_state2[28]),
        .I5(current_symbol[28]),
        .O(\making_tree_state[2]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \making_tree_state[2]_i_9 
       (.I0(current_symbol[24]),
        .I1(making_tree_state2[27]),
        .I2(making_tree_state2[29]),
        .I3(current_symbol[26]),
        .I4(making_tree_state2[28]),
        .I5(current_symbol[25]),
        .O(\making_tree_state[2]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \making_tree_state_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\making_tree_state[0]_i_1_n_0 ),
        .Q(\making_tree_state_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \making_tree_state_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\making_tree_state[1]_i_1_n_0 ),
        .Q(\making_tree_state_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \making_tree_state_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\making_tree_state[2]_i_1_n_0 ),
        .Q(\making_tree_state_reg_n_0_[2] ),
        .R(1'b0));
  CARRY4 \making_tree_state_reg[2]_i_16 
       (.CI(1'b0),
        .CO({\making_tree_state_reg[2]_i_16_n_0 ,\making_tree_state_reg[2]_i_16_n_1 ,\making_tree_state_reg[2]_i_16_n_2 ,\making_tree_state_reg[2]_i_16_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_making_tree_state_reg[2]_i_16_O_UNCONNECTED [3:0]),
        .S({\making_tree_state[2]_i_33_n_0 ,\making_tree_state[2]_i_34_n_0 ,\making_tree_state[2]_i_35_n_0 ,\making_tree_state[2]_i_36_n_0 }));
  CARRY4 \making_tree_state_reg[2]_i_3 
       (.CI(\making_tree_state_reg[2]_i_6_n_0 ),
        .CO({\NLW_making_tree_state_reg[2]_i_3_CO_UNCONNECTED [3],\making_tree_state_reg[2]_i_3_n_1 ,\making_tree_state_reg[2]_i_3_n_2 ,\making_tree_state_reg[2]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_making_tree_state_reg[2]_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,\making_tree_state[2]_i_7_n_0 ,\making_tree_state[2]_i_8_n_0 ,\making_tree_state[2]_i_9_n_0 }));
  CARRY4 \making_tree_state_reg[2]_i_6 
       (.CI(\making_tree_state_reg[2]_i_16_n_0 ),
        .CO({\making_tree_state_reg[2]_i_6_n_0 ,\making_tree_state_reg[2]_i_6_n_1 ,\making_tree_state_reg[2]_i_6_n_2 ,\making_tree_state_reg[2]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_making_tree_state_reg[2]_i_6_O_UNCONNECTED [3:0]),
        .S({\making_tree_state[2]_i_17_n_0 ,\making_tree_state[2]_i_18_n_0 ,\making_tree_state[2]_i_19_n_0 ,\making_tree_state[2]_i_20_n_0 }));
  LUT5 #(
    .INIT(32'h80000000)) 
    \p_0_out_inferred__9/code_length_tab_reg_r1_0_63_3_5_i_4 
       (.I0(code_length_tab_reg_r2_0_63_3_5_n_1),
        .I1(code_length_tab_reg_r2_0_63_0_2_n_2),
        .I2(code_length_tab_reg_r2_0_63_0_2_n_0),
        .I3(code_length_tab_reg_r2_0_63_0_2_n_1),
        .I4(code_length_tab_reg_r2_0_63_3_5_n_0),
        .O(\p_0_out_inferred__9/code_length_tab_reg_r1_0_63_3_5_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \p_0_out_inferred__9/code_length_tab_reg_r1_0_63_6_7_i_3 
       (.I0(code_length_tab_reg_r2_0_63_3_5_n_2),
        .I1(code_length_tab_reg_r2_0_63_3_5_n_0),
        .I2(code_length_tab_reg_r2_0_63_0_2_n_1),
        .I3(code_length_tab_reg_r2_0_63_0_2_n_0),
        .I4(code_length_tab_reg_r2_0_63_0_2_n_2),
        .I5(code_length_tab_reg_r2_0_63_3_5_n_1),
        .O(\p_0_out_inferred__9/code_length_tab_reg_r1_0_63_6_7_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(\position_rep[0]_i_1_n_0 ),
        .Q(position__0[0]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[1]),
        .Q(position__0[1]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[2]),
        .Q(position__0[2]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[3]),
        .Q(position__0[3]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[4]),
        .Q(position__0[4]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[5]),
        .Q(position__0[5]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[6]),
        .Q(position__0[6]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[7]),
        .Q(position__0[7]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[0] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(\position_rep[0]_i_1_n_0 ),
        .Q(position_reg_rep__0__0[0]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[0]__0 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(\position_rep[0]_i_1_n_0 ),
        .Q(position_reg_rep__1__0[0]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[0]__1 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(\position_rep[0]_i_1_n_0 ),
        .Q(position_reg_rep__2[0]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[1] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[1]),
        .Q(position_reg_rep__0__0[1]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[1]__0 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[1]),
        .Q(position_reg_rep__1__0[1]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[1]__1 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[1]),
        .Q(position_reg_rep__2[1]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[2] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[2]),
        .Q(position_reg_rep__0__0[2]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[2]__0 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[2]),
        .Q(position_reg_rep__1__0[2]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[2]__1 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[2]),
        .Q(position_reg_rep__2[2]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[3] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[3]),
        .Q(position_reg_rep__0__0[3]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[3]__0 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[3]),
        .Q(position_reg_rep__1__0[3]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[3]__1 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[3]),
        .Q(position_reg_rep__2[3]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[4] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[4]),
        .Q(position_reg_rep__0__0[4]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[4]__0 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[4]),
        .Q(position_reg_rep__1__0[4]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[4]__1 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[4]),
        .Q(position_reg_rep__2[4]),
        .R(\position_rep[7]_i_1_n_0 ));
  CARRY4 \position_reg_rep[4]_i_1 
       (.CI(1'b0),
        .CO({\position_reg_rep[4]_i_1_n_0 ,\position_reg_rep[4]_i_1_n_1 ,\position_reg_rep[4]_i_1_n_2 ,\position_reg_rep[4]_i_1_n_3 }),
        .CYINIT(position__0[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(position0[4:1]),
        .S({\position_rep[4]_i_2_n_0 ,\position_rep[4]_i_3_n_0 ,\position_rep[4]_i_4_n_0 ,\position_rep[4]_i_5_n_0 }));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[5] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[5]),
        .Q(position_reg_rep__0__0[5]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[5]__0 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[5]),
        .Q(position_reg_rep__1__0[5]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[5]__1 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[5]),
        .Q(position_reg_rep__2[5]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[6] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[6]),
        .Q(position_reg_rep__0__0[6]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[6]__0 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[6]),
        .Q(position_reg_rep__1__0[6]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[6]__1 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[6]),
        .Q(position_reg_rep__2[6]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[7] 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[7]),
        .Q(position_reg_rep__0__0[7]),
        .R(\position_rep[7]_i_1_n_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[7]__0 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[7]),
        .Q(position_reg_rep__1__0[7]),
        .R(\position_rep[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg_rep[7]__1 
       (.C(clock_IBUF_BUFG),
        .CE(position),
        .D(position0[7]),
        .Q(position_reg_rep__2[7]),
        .R(\position_rep[7]_i_1_n_0 ));
  CARRY4 \position_reg_rep[7]_i_12 
       (.CI(1'b0),
        .CO({\position_reg_rep[7]_i_12_n_0 ,\position_reg_rep[7]_i_12_n_1 ,\position_reg_rep[7]_i_12_n_2 ,\position_reg_rep[7]_i_12_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_position_reg_rep[7]_i_12_O_UNCONNECTED [3:0]),
        .S({\position_rep[7]_i_17_n_0 ,\position_rep[7]_i_18_n_0 ,\position_rep[7]_i_19_n_0 ,\position_rep[7]_i_20_n_0 }));
  CARRY4 \position_reg_rep[7]_i_3 
       (.CI(\position_reg_rep[4]_i_1_n_0 ),
        .CO({\NLW_position_reg_rep[7]_i_3_CO_UNCONNECTED [3:2],\position_reg_rep[7]_i_3_n_2 ,\position_reg_rep[7]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_position_reg_rep[7]_i_3_O_UNCONNECTED [3],position0[7:5]}),
        .S({1'b0,\position_rep[7]_i_5_n_0 ,\position_rep[7]_i_6_n_0 ,\position_rep[7]_i_7_n_0 }));
  CARRY4 \position_reg_rep[7]_i_4 
       (.CI(\position_reg_rep[7]_i_8_n_0 ),
        .CO({\NLW_position_reg_rep[7]_i_4_CO_UNCONNECTED [3],\position_reg_rep[7]_i_4_n_1 ,\position_reg_rep[7]_i_4_n_2 ,\position_reg_rep[7]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_position_reg_rep[7]_i_4_O_UNCONNECTED [3:0]),
        .S({1'b0,\position_rep[7]_i_9_n_0 ,\position_rep[7]_i_10_n_0 ,\position_rep[7]_i_11_n_0 }));
  CARRY4 \position_reg_rep[7]_i_8 
       (.CI(\position_reg_rep[7]_i_12_n_0 ),
        .CO({\position_reg_rep[7]_i_8_n_0 ,\position_reg_rep[7]_i_8_n_1 ,\position_reg_rep[7]_i_8_n_2 ,\position_reg_rep[7]_i_8_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_position_reg_rep[7]_i_8_O_UNCONNECTED [3:0]),
        .S({\position_rep[7]_i_13_n_0 ,\position_rep[7]_i_14_n_0 ,\position_rep[7]_i_15_n_0 ,\position_rep[7]_i_16_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \position_rep[0]_i_1 
       (.I0(position__0[0]),
        .O(\position_rep[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \position_rep[4]_i_2 
       (.I0(position__0[4]),
        .O(\position_rep[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \position_rep[4]_i_3 
       (.I0(position__0[3]),
        .O(\position_rep[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \position_rep[4]_i_4 
       (.I0(position__0[2]),
        .O(\position_rep[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \position_rep[4]_i_5 
       (.I0(position__0[1]),
        .O(\position_rep[4]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00000800)) 
    \position_rep[7]_i_1 
       (.I0(\making_tree_state_reg_n_0_[0] ),
        .I1(\position_reg_rep[7]_i_4_n_1 ),
        .I2(\making_tree_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[7] ),
        .I4(\making_tree_state_reg_n_0_[2] ),
        .O(\position_rep[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \position_rep[7]_i_10 
       (.I0(current_symbol[27]),
        .I1(last_symbol[27]),
        .I2(last_symbol[29]),
        .I3(current_symbol[29]),
        .I4(last_symbol[28]),
        .I5(current_symbol[28]),
        .O(\position_rep[7]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \position_rep[7]_i_11 
       (.I0(current_symbol[24]),
        .I1(last_symbol[24]),
        .I2(last_symbol[26]),
        .I3(current_symbol[26]),
        .I4(last_symbol[25]),
        .I5(current_symbol[25]),
        .O(\position_rep[7]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \position_rep[7]_i_13 
       (.I0(current_symbol[21]),
        .I1(last_symbol[21]),
        .I2(last_symbol[23]),
        .I3(current_symbol[23]),
        .I4(last_symbol[22]),
        .I5(current_symbol[22]),
        .O(\position_rep[7]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \position_rep[7]_i_14 
       (.I0(current_symbol[18]),
        .I1(last_symbol[18]),
        .I2(last_symbol[20]),
        .I3(current_symbol[20]),
        .I4(last_symbol[19]),
        .I5(current_symbol[19]),
        .O(\position_rep[7]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \position_rep[7]_i_15 
       (.I0(current_symbol[15]),
        .I1(last_symbol[15]),
        .I2(last_symbol[17]),
        .I3(current_symbol[17]),
        .I4(last_symbol[16]),
        .I5(current_symbol[16]),
        .O(\position_rep[7]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \position_rep[7]_i_16 
       (.I0(current_symbol[12]),
        .I1(last_symbol[12]),
        .I2(last_symbol[14]),
        .I3(current_symbol[14]),
        .I4(last_symbol[13]),
        .I5(current_symbol[13]),
        .O(\position_rep[7]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \position_rep[7]_i_17 
       (.I0(current_symbol[9]),
        .I1(last_symbol[9]),
        .I2(last_symbol[11]),
        .I3(current_symbol[11]),
        .I4(last_symbol[10]),
        .I5(current_symbol[10]),
        .O(\position_rep[7]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \position_rep[7]_i_18 
       (.I0(current_symbol[6]),
        .I1(last_symbol[6]),
        .I2(last_symbol[8]),
        .I3(current_symbol[8]),
        .I4(last_symbol[7]),
        .I5(current_symbol[7]),
        .O(\position_rep[7]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \position_rep[7]_i_19 
       (.I0(current_symbol[3]),
        .I1(last_symbol[3]),
        .I2(last_symbol[5]),
        .I3(current_symbol[5]),
        .I4(last_symbol[4]),
        .I5(current_symbol[4]),
        .O(\position_rep[7]_i_19_n_0 ));
  LUT5 #(
    .INIT(32'h00222000)) 
    \position_rep[7]_i_2 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(\making_tree_state_reg_n_0_[1] ),
        .I2(\position_reg_rep[7]_i_4_n_1 ),
        .I3(\making_tree_state_reg_n_0_[0] ),
        .I4(\making_tree_state_reg_n_0_[2] ),
        .O(position));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \position_rep[7]_i_20 
       (.I0(current_symbol[0]),
        .I1(last_symbol[0]),
        .I2(last_symbol[2]),
        .I3(current_symbol[2]),
        .I4(last_symbol[1]),
        .I5(current_symbol[1]),
        .O(\position_rep[7]_i_20_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \position_rep[7]_i_5 
       (.I0(position__0[7]),
        .O(\position_rep[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \position_rep[7]_i_6 
       (.I0(position__0[6]),
        .O(\position_rep[7]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \position_rep[7]_i_7 
       (.I0(position__0[5]),
        .O(\position_rep[7]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \position_rep[7]_i_9 
       (.I0(current_symbol[30]),
        .I1(last_symbol[30]),
        .I2(current_symbol[31]),
        .I3(last_symbol[31]),
        .O(\position_rep[7]_i_9_n_0 ));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d32" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d32" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-16 {cell *THIS*}} {SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "1632" *) 
  (* RTL_RAM_NAME = "probabilities_tab" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "511" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "31" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    probabilities_tab_reg
       (.ADDRARDADDR({1'b1,1'b1,1'b1,probabilities_tab_reg_i_1_n_0,probabilities_tab_reg_i_2_n_0,probabilities_tab_reg_i_3_n_0,probabilities_tab_reg_i_4_n_0,probabilities_tab_reg_i_5_n_0,probabilities_tab_reg_i_6_n_0,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,j[5:0],1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CLKARDCLK(clock_IBUF_BUFG),
        .CLKBWRCLK(clock_IBUF_BUFG),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,DIADI[5:4],1'b0,DIADI[3],1'b0,DIADI[2:0],1'b0,1'b0,1'b0}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b1,1'b1}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO({probabilities_tab_reg_n_0,probabilities_tab_reg_n_1,probabilities_tab_reg_n_2,probabilities_tab_reg_n_3,probabilities_tab_reg_n_4,probabilities_tab_reg_n_5,probabilities_tab_reg_n_6,probabilities_tab_reg_n_7,probabilities_tab_reg_n_8,probabilities_tab_reg_n_9,probabilities_tab_reg_n_10,probabilities_tab_reg_n_11,probabilities_tab_reg_n_12,probabilities_tab_reg_n_13,probabilities_tab_reg_n_14,probabilities_tab_reg_n_15}),
        .DOBDO({probabilities_tab_reg_n_16,probabilities_tab_reg_n_17,probabilities_tab_reg_n_18,probabilities_tab_reg_n_19,probabilities_tab_reg_n_20,probabilities_tab_reg_n_21,probabilities_tab_reg_n_22,probabilities_tab_reg_n_23,probabilities_tab_reg_n_24,probabilities_tab_reg_n_25,probabilities_tab_reg_n_26,probabilities_tab_reg_n_27,probabilities_tab_reg_n_28,probabilities_tab_reg_n_29,probabilities_tab_reg_n_30,probabilities_tab_reg_n_31}),
        .DOPADOP(NLW_probabilities_tab_reg_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_probabilities_tab_reg_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({\FSM_onehot_state_reg_n_0_[2] ,\FSM_onehot_state_reg_n_0_[2] ,\FSM_onehot_state_reg_n_0_[2] ,\FSM_onehot_state_reg_n_0_[2] }));
  LUT3 #(
    .INIT(8'hB8)) 
    probabilities_tab_reg_i_1
       (.I0(i2_in[5]),
        .I1(\i_reg_rep[0]__1_0 ),
        .I2(probabilities_tab_reg_i_7),
        .O(probabilities_tab_reg_i_1_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    probabilities_tab_reg_i_2
       (.I0(i2_in[4]),
        .I1(\i_reg_rep[0]__1_0 ),
        .I2(probabilities_tab_reg_i_8),
        .O(probabilities_tab_reg_i_2_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    probabilities_tab_reg_i_3
       (.I0(i2_in[3]),
        .I1(\i_reg_rep[0]__1_0 ),
        .I2(probabilities_tab_reg_i_9),
        .O(probabilities_tab_reg_i_3_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    probabilities_tab_reg_i_4
       (.I0(i2_in[2]),
        .I1(\i_reg_rep[0]__1_0 ),
        .I2(probabilities_tab_reg_i_10),
        .O(probabilities_tab_reg_i_4_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    probabilities_tab_reg_i_5
       (.I0(i2_in[1]),
        .I1(\i_reg_rep[0]__1_0 ),
        .I2(probabilities_tab_reg_i_11),
        .O(probabilities_tab_reg_i_5_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    probabilities_tab_reg_i_6
       (.I0(i2_in[0]),
        .I1(\i_reg_rep[0]__1_0 ),
        .I2(probabilities_tab_reg_i_12),
        .O(probabilities_tab_reg_i_6_n_0));
  LUT6 #(
    .INIT(64'h1015FFFF55550000)) 
    \sorting_state[0]_i_1 
       (.I0(\sorting_state_reg_n_0_[2] ),
        .I1(\sorting_state_reg[0]_i_2_n_4 ),
        .I2(\sorting_state_reg_n_0_[1] ),
        .I3(ID_reg_r5_0_63_0_2_i_7_n_0),
        .I4(sorting_state),
        .I5(\sorting_state_reg_n_0_[0] ),
        .O(\sorting_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sorting_state[0]_i_10 
       (.I0(j[18]),
        .I1(p_4_in__0[18]),
        .I2(p_4_in__0[20]),
        .I3(j[20]),
        .I4(p_4_in__0[19]),
        .I5(j[19]),
        .O(\sorting_state[0]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sorting_state[0]_i_11 
       (.I0(j[15]),
        .I1(p_4_in__0[15]),
        .I2(p_4_in__0[17]),
        .I3(j[17]),
        .I4(p_4_in__0[16]),
        .I5(j[16]),
        .O(\sorting_state[0]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sorting_state[0]_i_12 
       (.I0(j[12]),
        .I1(p_4_in__0[12]),
        .I2(p_4_in__0[14]),
        .I3(j[14]),
        .I4(p_4_in__0[13]),
        .I5(j[13]),
        .O(\sorting_state[0]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sorting_state[0]_i_13 
       (.I0(j[9]),
        .I1(p_4_in__0[9]),
        .I2(p_4_in__0[11]),
        .I3(j[11]),
        .I4(p_4_in__0[10]),
        .I5(j[10]),
        .O(\sorting_state[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sorting_state[0]_i_14 
       (.I0(j[6]),
        .I1(p_4_in[6]),
        .I2(p_4_in__0[8]),
        .I3(j[8]),
        .I4(p_4_in[7]),
        .I5(j[7]),
        .O(\sorting_state[0]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sorting_state[0]_i_15 
       (.I0(j[3]),
        .I1(p_4_in[3]),
        .I2(p_4_in[5]),
        .I3(j[5]),
        .I4(p_4_in[4]),
        .I5(j[4]),
        .O(\sorting_state[0]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'h0000900990090000)) 
    \sorting_state[0]_i_16 
       (.I0(j[0]),
        .I1(it[0]),
        .I2(p_4_in[2]),
        .I3(j[2]),
        .I4(it[1]),
        .I5(j[1]),
        .O(\sorting_state[0]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[0]_i_18 
       (.I0(it[13]),
        .O(\sorting_state[0]_i_18_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[0]_i_19 
       (.I0(it[12]),
        .O(\sorting_state[0]_i_19_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[0]_i_20 
       (.I0(it[11]),
        .O(\sorting_state[0]_i_20_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[0]_i_21 
       (.I0(it[10]),
        .O(\sorting_state[0]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h20AAAAAA00000000)) 
    \sorting_state[0]_i_3 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\sorting_state_reg_n_0_[1] ),
        .I2(\sorting_state_reg[1]_i_2_n_0 ),
        .I3(\sorting_state_reg_n_0_[2] ),
        .I4(\sorting_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(sorting_state));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[0]_i_5 
       (.I0(j[30]),
        .I1(p_4_in__0[30]),
        .I2(j[31]),
        .I3(p_4_in__0[31]),
        .O(\sorting_state[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sorting_state[0]_i_6 
       (.I0(j[27]),
        .I1(p_4_in__0[27]),
        .I2(p_4_in__0[29]),
        .I3(j[29]),
        .I4(p_4_in__0[28]),
        .I5(j[28]),
        .O(\sorting_state[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sorting_state[0]_i_7 
       (.I0(j[24]),
        .I1(p_4_in__0[24]),
        .I2(p_4_in__0[26]),
        .I3(j[26]),
        .I4(p_4_in__0[25]),
        .I5(j[25]),
        .O(\sorting_state[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \sorting_state[0]_i_9 
       (.I0(j[21]),
        .I1(p_4_in__0[21]),
        .I2(p_4_in__0[23]),
        .I3(j[23]),
        .I4(p_4_in__0[22]),
        .I5(j[22]),
        .O(\sorting_state[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hEC6644CCCCCCCCCC)) 
    \sorting_state[1]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\sorting_state_reg_n_0_[1] ),
        .I2(\sorting_state_reg[1]_i_2_n_0 ),
        .I3(\sorting_state_reg_n_0_[2] ),
        .I4(\sorting_state_reg_n_0_[0] ),
        .I5(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(\sorting_state[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_10 
       (.I0(p_4_in__0[26]),
        .I1(\i_reg_n_0_[26] ),
        .I2(p_4_in__0[27]),
        .I3(\i_reg_n_0_[27] ),
        .O(\sorting_state[1]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_11 
       (.I0(p_4_in__0[24]),
        .I1(\i_reg_n_0_[24] ),
        .I2(p_4_in__0[25]),
        .I3(\i_reg_n_0_[25] ),
        .O(\sorting_state[1]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_13 
       (.I0(p_4_in__0[22]),
        .I1(\i_reg_n_0_[22] ),
        .I2(\i_reg_n_0_[23] ),
        .I3(p_4_in__0[23]),
        .O(\sorting_state[1]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_14 
       (.I0(p_4_in__0[20]),
        .I1(\i_reg_n_0_[20] ),
        .I2(\i_reg_n_0_[21] ),
        .I3(p_4_in__0[21]),
        .O(\sorting_state[1]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_15 
       (.I0(p_4_in__0[18]),
        .I1(\i_reg_n_0_[18] ),
        .I2(\i_reg_n_0_[19] ),
        .I3(p_4_in__0[19]),
        .O(\sorting_state[1]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_16 
       (.I0(p_4_in__0[16]),
        .I1(\i_reg_n_0_[16] ),
        .I2(\i_reg_n_0_[17] ),
        .I3(p_4_in__0[17]),
        .O(\sorting_state[1]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_17 
       (.I0(p_4_in__0[22]),
        .I1(\i_reg_n_0_[22] ),
        .I2(p_4_in__0[23]),
        .I3(\i_reg_n_0_[23] ),
        .O(\sorting_state[1]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_18 
       (.I0(p_4_in__0[20]),
        .I1(\i_reg_n_0_[20] ),
        .I2(p_4_in__0[21]),
        .I3(\i_reg_n_0_[21] ),
        .O(\sorting_state[1]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_19 
       (.I0(p_4_in__0[18]),
        .I1(\i_reg_n_0_[18] ),
        .I2(p_4_in__0[19]),
        .I3(\i_reg_n_0_[19] ),
        .O(\sorting_state[1]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_20 
       (.I0(p_4_in__0[16]),
        .I1(\i_reg_n_0_[16] ),
        .I2(p_4_in__0[17]),
        .I3(\i_reg_n_0_[17] ),
        .O(\sorting_state[1]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_25 
       (.I0(p_4_in__0[14]),
        .I1(\i_reg_n_0_[14] ),
        .I2(\i_reg_n_0_[15] ),
        .I3(p_4_in__0[15]),
        .O(\sorting_state[1]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_26 
       (.I0(p_4_in__0[12]),
        .I1(\i_reg_n_0_[12] ),
        .I2(\i_reg_n_0_[13] ),
        .I3(p_4_in__0[13]),
        .O(\sorting_state[1]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_27 
       (.I0(p_4_in__0[10]),
        .I1(\i_reg_n_0_[10] ),
        .I2(\i_reg_n_0_[11] ),
        .I3(p_4_in__0[11]),
        .O(\sorting_state[1]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_28 
       (.I0(p_4_in__0[8]),
        .I1(\i_reg_n_0_[8] ),
        .I2(\i_reg_n_0_[9] ),
        .I3(p_4_in__0[9]),
        .O(\sorting_state[1]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_29 
       (.I0(p_4_in__0[14]),
        .I1(\i_reg_n_0_[14] ),
        .I2(p_4_in__0[15]),
        .I3(\i_reg_n_0_[15] ),
        .O(\sorting_state[1]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_30 
       (.I0(p_4_in__0[12]),
        .I1(\i_reg_n_0_[12] ),
        .I2(p_4_in__0[13]),
        .I3(\i_reg_n_0_[13] ),
        .O(\sorting_state[1]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_31 
       (.I0(p_4_in__0[10]),
        .I1(\i_reg_n_0_[10] ),
        .I2(p_4_in__0[11]),
        .I3(\i_reg_n_0_[11] ),
        .O(\sorting_state[1]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_32 
       (.I0(p_4_in__0[8]),
        .I1(\i_reg_n_0_[8] ),
        .I2(p_4_in__0[9]),
        .I3(\i_reg_n_0_[9] ),
        .O(\sorting_state[1]_i_32_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_35 
       (.I0(it[31]),
        .O(\sorting_state[1]_i_35_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_36 
       (.I0(it[30]),
        .O(\sorting_state[1]_i_36_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_37 
       (.I0(it[29]),
        .O(\sorting_state[1]_i_37_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_38 
       (.I0(it[28]),
        .O(\sorting_state[1]_i_38_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_39 
       (.I0(it[27]),
        .O(\sorting_state[1]_i_39_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_4 
       (.I0(p_4_in__0[30]),
        .I1(\i_reg_n_0_[30] ),
        .I2(\i_reg_n_0_[31] ),
        .I3(p_4_in__0[31]),
        .O(\sorting_state[1]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_40 
       (.I0(it[26]),
        .O(\sorting_state[1]_i_40_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_41 
       (.I0(it[25]),
        .O(\sorting_state[1]_i_41_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_42 
       (.I0(it[24]),
        .O(\sorting_state[1]_i_42_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_43 
       (.I0(it[23]),
        .O(\sorting_state[1]_i_43_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_44 
       (.I0(it[22]),
        .O(\sorting_state[1]_i_44_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_45 
       (.I0(p_4_in[6]),
        .I1(\i_reg_n_0_[6] ),
        .I2(\i_reg_n_0_[7] ),
        .I3(p_4_in[7]),
        .O(\sorting_state[1]_i_45_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_46 
       (.I0(p_4_in[4]),
        .I1(\i_reg_n_0_[4] ),
        .I2(\i_reg_n_0_[5] ),
        .I3(p_4_in[5]),
        .O(\sorting_state[1]_i_46_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_47 
       (.I0(p_4_in[2]),
        .I1(\i_reg_n_0_[2] ),
        .I2(\i_reg_n_0_[3] ),
        .I3(p_4_in[3]),
        .O(\sorting_state[1]_i_47_n_0 ));
  LUT4 #(
    .INIT(16'h022F)) 
    \sorting_state[1]_i_48 
       (.I0(it[0]),
        .I1(\i_reg_n_0_[0] ),
        .I2(it[1]),
        .I3(\i_reg_n_0_[1] ),
        .O(\sorting_state[1]_i_48_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_49 
       (.I0(p_4_in[6]),
        .I1(\i_reg_n_0_[6] ),
        .I2(p_4_in[7]),
        .I3(\i_reg_n_0_[7] ),
        .O(\sorting_state[1]_i_49_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_5 
       (.I0(p_4_in__0[28]),
        .I1(\i_reg_n_0_[28] ),
        .I2(\i_reg_n_0_[29] ),
        .I3(p_4_in__0[29]),
        .O(\sorting_state[1]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_50 
       (.I0(p_4_in[4]),
        .I1(\i_reg_n_0_[4] ),
        .I2(p_4_in[5]),
        .I3(\i_reg_n_0_[5] ),
        .O(\sorting_state[1]_i_50_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_51 
       (.I0(p_4_in[2]),
        .I1(\i_reg_n_0_[2] ),
        .I2(p_4_in[3]),
        .I3(\i_reg_n_0_[3] ),
        .O(\sorting_state[1]_i_51_n_0 ));
  LUT4 #(
    .INIT(16'h0990)) 
    \sorting_state[1]_i_52 
       (.I0(it[0]),
        .I1(\i_reg_n_0_[0] ),
        .I2(it[1]),
        .I3(\i_reg_n_0_[1] ),
        .O(\sorting_state[1]_i_52_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_53 
       (.I0(it[21]),
        .O(\sorting_state[1]_i_53_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_54 
       (.I0(it[20]),
        .O(\sorting_state[1]_i_54_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_55 
       (.I0(it[19]),
        .O(\sorting_state[1]_i_55_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_56 
       (.I0(it[18]),
        .O(\sorting_state[1]_i_56_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_57 
       (.I0(it[17]),
        .O(\sorting_state[1]_i_57_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_58 
       (.I0(it[16]),
        .O(\sorting_state[1]_i_58_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_59 
       (.I0(it[15]),
        .O(\sorting_state[1]_i_59_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_6 
       (.I0(p_4_in__0[26]),
        .I1(\i_reg_n_0_[26] ),
        .I2(\i_reg_n_0_[27] ),
        .I3(p_4_in__0[27]),
        .O(\sorting_state[1]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \sorting_state[1]_i_60 
       (.I0(it[14]),
        .O(\sorting_state[1]_i_60_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \sorting_state[1]_i_7 
       (.I0(p_4_in__0[24]),
        .I1(\i_reg_n_0_[24] ),
        .I2(\i_reg_n_0_[25] ),
        .I3(p_4_in__0[25]),
        .O(\sorting_state[1]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_8 
       (.I0(p_4_in__0[30]),
        .I1(\i_reg_n_0_[30] ),
        .I2(p_4_in__0[31]),
        .I3(\i_reg_n_0_[31] ),
        .O(\sorting_state[1]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sorting_state[1]_i_9 
       (.I0(p_4_in__0[28]),
        .I1(\i_reg_n_0_[28] ),
        .I2(p_4_in__0[29]),
        .I3(\i_reg_n_0_[29] ),
        .O(\sorting_state[1]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hF850F0F0)) 
    \sorting_state[2]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[6] ),
        .I1(\sorting_state_reg_n_0_[1] ),
        .I2(\sorting_state_reg_n_0_[2] ),
        .I3(\sorting_state_reg_n_0_[0] ),
        .I4(\FSM_onehot_building_tree_state_reg_n_0_[0] ),
        .O(\sorting_state[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sorting_state_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\sorting_state[0]_i_1_n_0 ),
        .Q(\sorting_state_reg_n_0_[0] ),
        .R(1'b0));
  CARRY4 \sorting_state_reg[0]_i_17 
       (.CI(ID_reg_r1_0_63_0_2_i_53_n_0),
        .CO({\sorting_state_reg[0]_i_17_n_0 ,\sorting_state_reg[0]_i_17_n_1 ,\sorting_state_reg[0]_i_17_n_2 ,\sorting_state_reg[0]_i_17_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_4_in__0[13:10]),
        .S({\sorting_state[0]_i_18_n_0 ,\sorting_state[0]_i_19_n_0 ,\sorting_state[0]_i_20_n_0 ,\sorting_state[0]_i_21_n_0 }));
  CARRY4 \sorting_state_reg[0]_i_2 
       (.CI(\sorting_state_reg[0]_i_4_n_0 ),
        .CO({\NLW_sorting_state_reg[0]_i_2_CO_UNCONNECTED [3],sorting_state1,\sorting_state_reg[0]_i_2_n_2 ,\sorting_state_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\sorting_state_reg[0]_i_2_n_4 ,\NLW_sorting_state_reg[0]_i_2_O_UNCONNECTED [2:0]}),
        .S({1'b1,\sorting_state[0]_i_5_n_0 ,\sorting_state[0]_i_6_n_0 ,\sorting_state[0]_i_7_n_0 }));
  CARRY4 \sorting_state_reg[0]_i_4 
       (.CI(\sorting_state_reg[0]_i_8_n_0 ),
        .CO({\sorting_state_reg[0]_i_4_n_0 ,\sorting_state_reg[0]_i_4_n_1 ,\sorting_state_reg[0]_i_4_n_2 ,\sorting_state_reg[0]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_sorting_state_reg[0]_i_4_O_UNCONNECTED [3:0]),
        .S({\sorting_state[0]_i_9_n_0 ,\sorting_state[0]_i_10_n_0 ,\sorting_state[0]_i_11_n_0 ,\sorting_state[0]_i_12_n_0 }));
  CARRY4 \sorting_state_reg[0]_i_8 
       (.CI(1'b0),
        .CO({\sorting_state_reg[0]_i_8_n_0 ,\sorting_state_reg[0]_i_8_n_1 ,\sorting_state_reg[0]_i_8_n_2 ,\sorting_state_reg[0]_i_8_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_sorting_state_reg[0]_i_8_O_UNCONNECTED [3:0]),
        .S({\sorting_state[0]_i_13_n_0 ,\sorting_state[0]_i_14_n_0 ,\sorting_state[0]_i_15_n_0 ,\sorting_state[0]_i_16_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sorting_state_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\sorting_state[1]_i_1_n_0 ),
        .Q(\sorting_state_reg_n_0_[1] ),
        .R(1'b0));
  CARRY4 \sorting_state_reg[1]_i_12 
       (.CI(\sorting_state_reg[1]_i_24_n_0 ),
        .CO({\sorting_state_reg[1]_i_12_n_0 ,\sorting_state_reg[1]_i_12_n_1 ,\sorting_state_reg[1]_i_12_n_2 ,\sorting_state_reg[1]_i_12_n_3 }),
        .CYINIT(1'b0),
        .DI({\sorting_state[1]_i_25_n_0 ,\sorting_state[1]_i_26_n_0 ,\sorting_state[1]_i_27_n_0 ,\sorting_state[1]_i_28_n_0 }),
        .O(\NLW_sorting_state_reg[1]_i_12_O_UNCONNECTED [3:0]),
        .S({\sorting_state[1]_i_29_n_0 ,\sorting_state[1]_i_30_n_0 ,\sorting_state[1]_i_31_n_0 ,\sorting_state[1]_i_32_n_0 }));
  CARRY4 \sorting_state_reg[1]_i_2 
       (.CI(\sorting_state_reg[1]_i_3_n_0 ),
        .CO({\sorting_state_reg[1]_i_2_n_0 ,\sorting_state_reg[1]_i_2_n_1 ,\sorting_state_reg[1]_i_2_n_2 ,\sorting_state_reg[1]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({\sorting_state[1]_i_4_n_0 ,\sorting_state[1]_i_5_n_0 ,\sorting_state[1]_i_6_n_0 ,\sorting_state[1]_i_7_n_0 }),
        .O(\NLW_sorting_state_reg[1]_i_2_O_UNCONNECTED [3:0]),
        .S({\sorting_state[1]_i_8_n_0 ,\sorting_state[1]_i_9_n_0 ,\sorting_state[1]_i_10_n_0 ,\sorting_state[1]_i_11_n_0 }));
  CARRY4 \sorting_state_reg[1]_i_21 
       (.CI(\sorting_state_reg[1]_i_22_n_0 ),
        .CO({\NLW_sorting_state_reg[1]_i_21_CO_UNCONNECTED [3:1],\sorting_state_reg[1]_i_21_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_sorting_state_reg[1]_i_21_O_UNCONNECTED [3:2],p_4_in__0[31:30]}),
        .S({1'b0,1'b0,\sorting_state[1]_i_35_n_0 ,\sorting_state[1]_i_36_n_0 }));
  CARRY4 \sorting_state_reg[1]_i_22 
       (.CI(\sorting_state_reg[1]_i_23_n_0 ),
        .CO({\sorting_state_reg[1]_i_22_n_0 ,\sorting_state_reg[1]_i_22_n_1 ,\sorting_state_reg[1]_i_22_n_2 ,\sorting_state_reg[1]_i_22_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_4_in__0[29:26]),
        .S({\sorting_state[1]_i_37_n_0 ,\sorting_state[1]_i_38_n_0 ,\sorting_state[1]_i_39_n_0 ,\sorting_state[1]_i_40_n_0 }));
  CARRY4 \sorting_state_reg[1]_i_23 
       (.CI(\sorting_state_reg[1]_i_33_n_0 ),
        .CO({\sorting_state_reg[1]_i_23_n_0 ,\sorting_state_reg[1]_i_23_n_1 ,\sorting_state_reg[1]_i_23_n_2 ,\sorting_state_reg[1]_i_23_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_4_in__0[25:22]),
        .S({\sorting_state[1]_i_41_n_0 ,\sorting_state[1]_i_42_n_0 ,\sorting_state[1]_i_43_n_0 ,\sorting_state[1]_i_44_n_0 }));
  CARRY4 \sorting_state_reg[1]_i_24 
       (.CI(1'b0),
        .CO({\sorting_state_reg[1]_i_24_n_0 ,\sorting_state_reg[1]_i_24_n_1 ,\sorting_state_reg[1]_i_24_n_2 ,\sorting_state_reg[1]_i_24_n_3 }),
        .CYINIT(1'b0),
        .DI({\sorting_state[1]_i_45_n_0 ,\sorting_state[1]_i_46_n_0 ,\sorting_state[1]_i_47_n_0 ,\sorting_state[1]_i_48_n_0 }),
        .O(\NLW_sorting_state_reg[1]_i_24_O_UNCONNECTED [3:0]),
        .S({\sorting_state[1]_i_49_n_0 ,\sorting_state[1]_i_50_n_0 ,\sorting_state[1]_i_51_n_0 ,\sorting_state[1]_i_52_n_0 }));
  CARRY4 \sorting_state_reg[1]_i_3 
       (.CI(\sorting_state_reg[1]_i_12_n_0 ),
        .CO({\sorting_state_reg[1]_i_3_n_0 ,\sorting_state_reg[1]_i_3_n_1 ,\sorting_state_reg[1]_i_3_n_2 ,\sorting_state_reg[1]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({\sorting_state[1]_i_13_n_0 ,\sorting_state[1]_i_14_n_0 ,\sorting_state[1]_i_15_n_0 ,\sorting_state[1]_i_16_n_0 }),
        .O(\NLW_sorting_state_reg[1]_i_3_O_UNCONNECTED [3:0]),
        .S({\sorting_state[1]_i_17_n_0 ,\sorting_state[1]_i_18_n_0 ,\sorting_state[1]_i_19_n_0 ,\sorting_state[1]_i_20_n_0 }));
  CARRY4 \sorting_state_reg[1]_i_33 
       (.CI(\sorting_state_reg[1]_i_34_n_0 ),
        .CO({\sorting_state_reg[1]_i_33_n_0 ,\sorting_state_reg[1]_i_33_n_1 ,\sorting_state_reg[1]_i_33_n_2 ,\sorting_state_reg[1]_i_33_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_4_in__0[21:18]),
        .S({\sorting_state[1]_i_53_n_0 ,\sorting_state[1]_i_54_n_0 ,\sorting_state[1]_i_55_n_0 ,\sorting_state[1]_i_56_n_0 }));
  CARRY4 \sorting_state_reg[1]_i_34 
       (.CI(\sorting_state_reg[0]_i_17_n_0 ),
        .CO({\sorting_state_reg[1]_i_34_n_0 ,\sorting_state_reg[1]_i_34_n_1 ,\sorting_state_reg[1]_i_34_n_2 ,\sorting_state_reg[1]_i_34_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(p_4_in__0[17:14]),
        .S({\sorting_state[1]_i_57_n_0 ,\sorting_state[1]_i_58_n_0 ,\sorting_state[1]_i_59_n_0 ,\sorting_state[1]_i_60_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sorting_state_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\sorting_state[2]_i_1_n_0 ),
        .Q(\sorting_state_reg_n_0_[2] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h77775F7D)) 
    \state[4]_i_1 
       (.I0(\state[4]_i_3_n_0 ),
        .I1(Q[4]),
        .I2(Q[3]),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(E));
  LUT6 #(
    .INIT(64'hFFF0FFF0CFD0CFDF)) 
    \state[4]_i_3 
       (.I0(\i[31]_i_8_n_0 ),
        .I1(Q[4]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(\bit_counter_reg[30] ),
        .I5(Q[2]),
        .O(\state[4]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \symbol[7]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(\making_tree_state_reg_n_0_[1] ),
        .I2(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(\making_tree_state_reg_n_0_[0] ),
        .O(\symbol[7]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \symbol_it[0]_i_2 
       (.I0(symbol_it_reg[3]),
        .O(\symbol_it[0]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \symbol_it[0]_i_3 
       (.I0(symbol_it_reg[2]),
        .O(\symbol_it[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \symbol_it[0]_i_4 
       (.I0(symbol_it_reg[1]),
        .O(\symbol_it[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \symbol_it[0]_i_5 
       (.I0(symbol_it_reg[0]),
        .O(\symbol_it[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \symbol_it[4]_i_2 
       (.I0(symbol_it_reg[5]),
        .O(\symbol_it[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \symbol_it[4]_i_3 
       (.I0(symbol_it_reg[4]),
        .O(\symbol_it[4]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg[0]_i_1_n_7 ),
        .Q(symbol_it_reg[0]),
        .R(1'b0));
  CARRY4 \symbol_it_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\symbol_it_reg[0]_i_1_n_0 ,\symbol_it_reg[0]_i_1_n_1 ,\symbol_it_reg[0]_i_1_n_2 ,\symbol_it_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\symbol_it_reg[0]_i_1_n_4 ,\symbol_it_reg[0]_i_1_n_5 ,\symbol_it_reg[0]_i_1_n_6 ,\symbol_it_reg[0]_i_1_n_7 }),
        .S({\symbol_it[0]_i_2_n_0 ,\symbol_it[0]_i_3_n_0 ,\symbol_it[0]_i_4_n_0 ,\symbol_it[0]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg[0]_i_1_n_6 ),
        .Q(symbol_it_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg[0]_i_1_n_5 ),
        .Q(symbol_it_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg[0]_i_1_n_4 ),
        .Q(symbol_it_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg[4]_i_1_n_7 ),
        .Q(symbol_it_reg[4]),
        .R(1'b0));
  CARRY4 \symbol_it_reg[4]_i_1 
       (.CI(\symbol_it_reg[0]_i_1_n_0 ),
        .CO({\NLW_symbol_it_reg[4]_i_1_CO_UNCONNECTED [3:1],\symbol_it_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_symbol_it_reg[4]_i_1_O_UNCONNECTED [3:2],\symbol_it_reg[4]_i_1_n_6 ,\symbol_it_reg[4]_i_1_n_7 }),
        .S({1'b0,1'b0,\symbol_it[4]_i_2_n_0 ,\symbol_it[4]_i_3_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg[4]_i_1_n_6 ),
        .Q(symbol_it_reg[5]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[0] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_rep[0]_i_1_n_0 ),
        .Q(symbol_it_reg_rep__0__0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[0]__0 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_rep[0]_i_1_n_0 ),
        .Q(symbol_it_reg_rep__1[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[1] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg_rep[4]_i_1_n_7 ),
        .Q(symbol_it_reg_rep__0__0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[1]__0 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg_rep[4]_i_1_n_7 ),
        .Q(symbol_it_reg_rep__1[1]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[2] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg_rep[4]_i_1_n_6 ),
        .Q(symbol_it_reg_rep__0__0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[2]__0 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg_rep[4]_i_1_n_6 ),
        .Q(symbol_it_reg_rep__1[2]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[3] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg_rep[4]_i_1_n_5 ),
        .Q(symbol_it_reg_rep__0__0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[3]__0 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg_rep[4]_i_1_n_5 ),
        .Q(symbol_it_reg_rep__1[3]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[4] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg_rep[4]_i_1_n_4 ),
        .Q(symbol_it_reg_rep__0__0[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[4]__0 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg_rep[4]_i_1_n_4 ),
        .Q(symbol_it_reg_rep__1[4]),
        .R(1'b0));
  CARRY4 \symbol_it_reg_rep[4]_i_1 
       (.CI(1'b0),
        .CO({\symbol_it_reg_rep[4]_i_1_n_0 ,\symbol_it_reg_rep[4]_i_1_n_1 ,\symbol_it_reg_rep[4]_i_1_n_2 ,\symbol_it_reg_rep[4]_i_1_n_3 }),
        .CYINIT(symbol_it_reg[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\symbol_it_reg_rep[4]_i_1_n_4 ,\symbol_it_reg_rep[4]_i_1_n_5 ,\symbol_it_reg_rep[4]_i_1_n_6 ,\symbol_it_reg_rep[4]_i_1_n_7 }),
        .S({\symbol_it_rep[4]_i_2_n_0 ,\symbol_it_rep[4]_i_3_n_0 ,\symbol_it_rep[4]_i_4_n_0 ,\symbol_it_rep[4]_i_5_n_0 }));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[5] 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg_rep[5]_i_2_n_7 ),
        .Q(symbol_it_reg_rep__0__0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_it_reg_rep[5]__0 
       (.C(clock_IBUF_BUFG),
        .CE(symbol_it),
        .D(\symbol_it_reg_rep[5]_i_2_n_7 ),
        .Q(symbol_it_reg_rep__1[5]),
        .R(1'b0));
  CARRY4 \symbol_it_reg_rep[5]_i_2 
       (.CI(\symbol_it_reg_rep[4]_i_1_n_0 ),
        .CO(\NLW_symbol_it_reg_rep[5]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_symbol_it_reg_rep[5]_i_2_O_UNCONNECTED [3:1],\symbol_it_reg_rep[5]_i_2_n_7 }),
        .S({1'b0,1'b0,1'b0,\symbol_it_rep[5]_i_3_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \symbol_it_rep[0]_i_1 
       (.I0(symbol_it_reg[0]),
        .O(\symbol_it_rep[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \symbol_it_rep[4]_i_2 
       (.I0(symbol_it_reg[4]),
        .O(\symbol_it_rep[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \symbol_it_rep[4]_i_3 
       (.I0(symbol_it_reg[3]),
        .O(\symbol_it_rep[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \symbol_it_rep[4]_i_4 
       (.I0(symbol_it_reg[2]),
        .O(\symbol_it_rep[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \symbol_it_rep[4]_i_5 
       (.I0(symbol_it_reg[1]),
        .O(\symbol_it_rep[4]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h00000020)) 
    \symbol_it_rep[5]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[7] ),
        .I1(\position_reg_rep[7]_i_4_n_1 ),
        .I2(\making_tree_state_reg_n_0_[0] ),
        .I3(\making_tree_state_reg_n_0_[2] ),
        .I4(\making_tree_state_reg_n_0_[1] ),
        .O(symbol_it));
  LUT1 #(
    .INIT(2'h2)) 
    \symbol_it_rep[5]_i_3 
       (.I0(symbol_it_reg[5]),
        .O(\symbol_it_rep[5]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\symbol[7]_i_1_n_0 ),
        .D(symbol0[6]),
        .Q(symbol[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\symbol[7]_i_1_n_0 ),
        .D(symbol0[7]),
        .Q(symbol[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\symbol[7]_i_1_n_0 ),
        .D(symbol0[2]),
        .Q(symbol[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\symbol[7]_i_1_n_0 ),
        .D(symbol0[3]),
        .Q(symbol[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\symbol[7]_i_1_n_0 ),
        .D(symbol0[4]),
        .Q(symbol[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\symbol[7]_i_1_n_0 ),
        .D(symbol0[5]),
        .Q(symbol[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\symbol[7]_i_1_n_0 ),
        .D(symbol0[6]),
        .Q(symbol[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\symbol[7]_i_1_n_0 ),
        .D(symbol0[7]),
        .Q(symbol[7]),
        .R(1'b0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2310 symbols_tab_reg_r1_0_63_3_5
       (.ADDRA(symbol_it_reg_rep__1),
        .ADDRB(symbol_it_reg_rep__1),
        .ADDRC(symbol_it_reg_rep__1),
        .ADDRD(j[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(symbol_in),
        .DID(1'b0),
        .DOA(symbol0[3]),
        .DOB(symbol0[4]),
        .DOC(symbol0[5]),
        .DOD(NLW_symbols_tab_reg_r1_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(\FSM_onehot_state_reg_n_0_[2] ));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2311 symbols_tab_reg_r1_0_63_6_7
       (.ADDRA(symbol_it_reg_rep__1),
        .ADDRB(symbol_it_reg_rep__1),
        .ADDRC(symbol_it_reg_rep__1),
        .ADDRD(j[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(symbol0[6]),
        .DOB(symbol0[7]),
        .DOC(symbol0[2]),
        .DOD(NLW_symbols_tab_reg_r1_0_63_6_7_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(\FSM_onehot_state_reg_n_0_[2] ));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2312 symbols_tab_reg_r2_0_63_3_5
       (.ADDRA(i_reg_rep__1__0),
        .ADDRB(i_reg_rep__1__0),
        .ADDRC(i_reg_rep__1__0),
        .ADDRD(j[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(symbol_in),
        .DID(1'b0),
        .DOA(symbols_tab_reg_r2_0_63_3_5_n_0),
        .DOB(symbols_tab_reg_r2_0_63_3_5_n_1),
        .DOC(symbols_tab_reg_r2_0_63_3_5_n_2),
        .DOD(NLW_symbols_tab_reg_r2_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(\FSM_onehot_state_reg_n_0_[2] ));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD2313 symbols_tab_reg_r2_0_63_6_7
       (.ADDRA(i_reg_rep__1__0),
        .ADDRB(i_reg_rep__1__0),
        .ADDRC(i_reg_rep__1__0),
        .ADDRD(j[5:0]),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(symbols_tab_reg_r2_0_63_6_7_n_0),
        .DOB(symbols_tab_reg_r2_0_63_6_7_n_1),
        .DOC(symbols_tab_reg_r2_0_63_6_7_n_2),
        .DOD(NLW_symbols_tab_reg_r2_0_63_6_7_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(\FSM_onehot_state_reg_n_0_[2] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp1[0]_i_1 
       (.I0(ID_reg_r6_192_255_0_2_n_0),
        .I1(ID_reg_r6_128_191_0_2_n_0),
        .I2(j_reg_rep__2[7]),
        .I3(ID_reg_r6_64_127_0_2_n_0),
        .I4(j_reg_rep__2[6]),
        .I5(ID_reg_r6_0_63_0_2_n_0),
        .O(temp10[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp1[1]_i_1 
       (.I0(ID_reg_r6_192_255_0_2_n_1),
        .I1(ID_reg_r6_128_191_0_2_n_1),
        .I2(j_reg_rep__2[7]),
        .I3(ID_reg_r6_64_127_0_2_n_1),
        .I4(j_reg_rep__2[6]),
        .I5(ID_reg_r6_0_63_0_2_n_1),
        .O(temp10[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp1[2]_i_1 
       (.I0(ID_reg_r6_192_255_0_2_n_2),
        .I1(ID_reg_r6_128_191_0_2_n_2),
        .I2(j_reg_rep__2[7]),
        .I3(ID_reg_r6_64_127_0_2_n_2),
        .I4(j_reg_rep__2[6]),
        .I5(ID_reg_r6_0_63_0_2_n_2),
        .O(temp10[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp1[3]_i_1 
       (.I0(ID_reg_r6_192_255_3_5_n_0),
        .I1(ID_reg_r6_128_191_3_5_n_0),
        .I2(j_reg_rep__2[7]),
        .I3(ID_reg_r6_64_127_3_5_n_0),
        .I4(j_reg_rep__2[6]),
        .I5(ID_reg_r6_0_63_3_5_n_0),
        .O(temp10[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp1[4]_i_1 
       (.I0(ID_reg_r6_192_255_3_5_n_1),
        .I1(ID_reg_r6_128_191_3_5_n_1),
        .I2(j_reg_rep__2[7]),
        .I3(ID_reg_r6_64_127_3_5_n_1),
        .I4(j_reg_rep__2[6]),
        .I5(ID_reg_r6_0_63_3_5_n_1),
        .O(temp10[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp1[5]_i_1 
       (.I0(ID_reg_r6_192_255_3_5_n_2),
        .I1(ID_reg_r6_128_191_3_5_n_2),
        .I2(j_reg_rep__2[7]),
        .I3(ID_reg_r6_64_127_3_5_n_2),
        .I4(j_reg_rep__2[6]),
        .I5(ID_reg_r6_0_63_3_5_n_2),
        .O(temp10[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp1[6]_i_1 
       (.I0(ID_reg_r6_192_255_6_8_n_0),
        .I1(ID_reg_r6_128_191_6_8_n_0),
        .I2(j_reg_rep__2[7]),
        .I3(ID_reg_r6_64_127_6_8_n_0),
        .I4(j_reg_rep__2[6]),
        .I5(ID_reg_r6_0_63_6_8_n_0),
        .O(temp10[6]));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \temp1[7]_i_1 
       (.I0(state_reg[3]),
        .I1(\sorting_state_reg_n_0_[1] ),
        .I2(\temp1[7]_i_4_n_0 ),
        .I3(state_reg[0]),
        .I4(\sorting_state_reg_n_0_[0] ),
        .I5(\temp1[7]_i_6_n_0 ),
        .O(\temp1[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp1[7]_i_2 
       (.I0(ID_reg_r6_192_255_6_8_n_1),
        .I1(ID_reg_r6_128_191_6_8_n_1),
        .I2(j_reg_rep__2[7]),
        .I3(ID_reg_r6_64_127_6_8_n_1),
        .I4(j_reg_rep__2[6]),
        .I5(ID_reg_r6_0_63_6_8_n_1),
        .O(temp10[7]));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \temp1[7]_i_3 
       (.I0(\FSM_onehot_state_reg_n_0_[8] ),
        .I1(\FSM_onehot_state_reg_n_0_[9] ),
        .I2(\FSM_onehot_state_reg_n_0_[1] ),
        .I3(\FSM_onehot_state_reg_n_0_[11] ),
        .I4(\FSM_onehot_state_reg_n_0_[10] ),
        .O(state_reg[3]));
  LUT4 #(
    .INIT(16'hEFFF)) 
    \temp1[7]_i_4 
       (.I0(\sorting_state_reg_n_0_[2] ),
        .I1(\building_tree_state_reg_n_0_[0] ),
        .I2(state_reg[1]),
        .I3(state_reg[2]),
        .O(\temp1[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \temp1[7]_i_5 
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[7] ),
        .I2(\FSM_onehot_state_reg_n_0_[9] ),
        .I3(\FSM_onehot_state_reg_n_0_[5] ),
        .I4(\FSM_onehot_state_reg_n_0_[12] ),
        .I5(\FSM_onehot_state_reg_n_0_[11] ),
        .O(state_reg[0]));
  LUT2 #(
    .INIT(4'h1)) 
    \temp1[7]_i_6 
       (.I0(\building_tree_state_reg_n_0_[1] ),
        .I1(\building_tree_state_reg_n_0_[2] ),
        .O(\temp1[7]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \temp1_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp10[0]),
        .Q(temp1[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp1_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp10[1]),
        .Q(temp1[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp1_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp10[2]),
        .Q(temp1[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp1_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp10[3]),
        .Q(temp1[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp1_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp10[4]),
        .Q(temp1[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp1_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp10[5]),
        .Q(temp1[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp1_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp10[6]),
        .Q(temp1[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp1_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp10[7]),
        .Q(temp1[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[0]_i_1 
       (.I0(Link_reg_r2_192_255_0_2_n_0),
        .I1(Link_reg_r2_128_191_0_2_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_0_2_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_0_2_n_0),
        .O(temp20[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[10]_i_1 
       (.I0(Link_reg_r2_192_255_9_11_n_1),
        .I1(Link_reg_r2_128_191_9_11_n_1),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_9_11_n_1),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_9_11_n_1),
        .O(temp20[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[11]_i_1 
       (.I0(Link_reg_r2_192_255_9_11_n_2),
        .I1(Link_reg_r2_128_191_9_11_n_2),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_9_11_n_2),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_9_11_n_2),
        .O(temp20[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[12]_i_1 
       (.I0(Link_reg_r2_192_255_12_14_n_0),
        .I1(Link_reg_r2_128_191_12_14_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_12_14_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_12_14_n_0),
        .O(temp20[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[13]_i_1 
       (.I0(Link_reg_r2_192_255_12_14_n_1),
        .I1(Link_reg_r2_128_191_12_14_n_1),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_12_14_n_1),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_12_14_n_1),
        .O(temp20[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[14]_i_1 
       (.I0(Link_reg_r2_192_255_12_14_n_2),
        .I1(Link_reg_r2_128_191_12_14_n_2),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_12_14_n_2),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_12_14_n_2),
        .O(temp20[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[15]_i_1 
       (.I0(Link_reg_r2_192_255_15_17_n_0),
        .I1(Link_reg_r2_128_191_15_17_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_15_17_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_15_17_n_0),
        .O(temp20[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[16]_i_1 
       (.I0(Link_reg_r2_192_255_15_17_n_1),
        .I1(Link_reg_r2_128_191_15_17_n_1),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_15_17_n_1),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_15_17_n_1),
        .O(temp20[16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[17]_i_1 
       (.I0(Link_reg_r2_192_255_15_17_n_2),
        .I1(Link_reg_r2_128_191_15_17_n_2),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_15_17_n_2),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_15_17_n_2),
        .O(temp20[17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[18]_i_1 
       (.I0(Link_reg_r2_192_255_18_20_n_0),
        .I1(Link_reg_r2_128_191_18_20_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_18_20_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_18_20_n_0),
        .O(temp20[18]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[19]_i_1 
       (.I0(Link_reg_r2_192_255_18_20_n_1),
        .I1(Link_reg_r2_128_191_18_20_n_1),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_18_20_n_1),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_18_20_n_1),
        .O(temp20[19]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[1]_i_1 
       (.I0(Link_reg_r2_192_255_0_2_n_1),
        .I1(Link_reg_r2_128_191_0_2_n_1),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_0_2_n_1),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_0_2_n_1),
        .O(temp20[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[20]_i_1 
       (.I0(Link_reg_r2_192_255_18_20_n_2),
        .I1(Link_reg_r2_128_191_18_20_n_2),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_18_20_n_2),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_18_20_n_2),
        .O(temp20[20]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[21]_i_1 
       (.I0(Link_reg_r2_192_255_21_23_n_0),
        .I1(Link_reg_r2_128_191_21_23_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_21_23_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_21_23_n_0),
        .O(temp20[21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[22]_i_1 
       (.I0(Link_reg_r2_192_255_21_23_n_1),
        .I1(Link_reg_r2_128_191_21_23_n_1),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_21_23_n_1),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_21_23_n_1),
        .O(temp20[22]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[23]_i_1 
       (.I0(Link_reg_r2_192_255_21_23_n_2),
        .I1(Link_reg_r2_128_191_21_23_n_2),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_21_23_n_2),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_21_23_n_2),
        .O(temp20[23]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[24]_i_1 
       (.I0(Link_reg_r2_192_255_24_26_n_0),
        .I1(Link_reg_r2_128_191_24_26_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_24_26_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_24_26_n_0),
        .O(temp20[24]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[25]_i_1 
       (.I0(Link_reg_r2_192_255_24_26_n_1),
        .I1(Link_reg_r2_128_191_24_26_n_1),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_24_26_n_1),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_24_26_n_1),
        .O(temp20[25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[26]_i_1 
       (.I0(Link_reg_r2_192_255_24_26_n_2),
        .I1(Link_reg_r2_128_191_24_26_n_2),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_24_26_n_2),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_24_26_n_2),
        .O(temp20[26]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[27]_i_1 
       (.I0(Link_reg_r2_192_255_27_29_n_0),
        .I1(Link_reg_r2_128_191_27_29_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_27_29_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_27_29_n_0),
        .O(temp20[27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[28]_i_1 
       (.I0(Link_reg_r2_192_255_27_29_n_1),
        .I1(Link_reg_r2_128_191_27_29_n_1),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_27_29_n_1),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_27_29_n_1),
        .O(temp20[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[29]_i_1 
       (.I0(Link_reg_r2_192_255_27_29_n_2),
        .I1(Link_reg_r2_128_191_27_29_n_2),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_27_29_n_2),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_27_29_n_2),
        .O(temp20[29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[2]_i_1 
       (.I0(Link_reg_r2_192_255_0_2_n_2),
        .I1(Link_reg_r2_128_191_0_2_n_2),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_0_2_n_2),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_0_2_n_2),
        .O(temp20[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[30]_i_1 
       (.I0(Link_reg_r2_192_255_30_30_n_0),
        .I1(Link_reg_r2_128_191_30_30_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_30_30_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_30_30_n_0),
        .O(temp20[30]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[31]_i_1 
       (.I0(Link_reg_r2_192_255_31_31_n_0),
        .I1(Link_reg_r2_128_191_31_31_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_31_31_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_31_31_n_0),
        .O(temp20[31]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[3]_i_1 
       (.I0(Link_reg_r2_192_255_3_5_n_0),
        .I1(Link_reg_r2_128_191_3_5_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_3_5_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_3_5_n_0),
        .O(temp20[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[4]_i_1 
       (.I0(Link_reg_r2_192_255_3_5_n_1),
        .I1(Link_reg_r2_128_191_3_5_n_1),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_3_5_n_1),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_3_5_n_1),
        .O(temp20[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[5]_i_1 
       (.I0(Link_reg_r2_192_255_3_5_n_2),
        .I1(Link_reg_r2_128_191_3_5_n_2),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_3_5_n_2),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_3_5_n_2),
        .O(temp20[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[6]_i_1 
       (.I0(Link_reg_r2_192_255_6_8_n_0),
        .I1(Link_reg_r2_128_191_6_8_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_6_8_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_6_8_n_0),
        .O(temp20[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[7]_i_1 
       (.I0(Link_reg_r2_192_255_6_8_n_1),
        .I1(Link_reg_r2_128_191_6_8_n_1),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_6_8_n_1),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_6_8_n_1),
        .O(temp20[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[8]_i_1 
       (.I0(Link_reg_r2_192_255_6_8_n_2),
        .I1(Link_reg_r2_128_191_6_8_n_2),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_6_8_n_2),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_6_8_n_2),
        .O(temp20[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp2[9]_i_1 
       (.I0(Link_reg_r2_192_255_9_11_n_0),
        .I1(Link_reg_r2_128_191_9_11_n_0),
        .I2(\j_reg_rep[7]__0_n_0 ),
        .I3(Link_reg_r2_64_127_9_11_n_0),
        .I4(\j_reg_rep[6]__0_n_0 ),
        .I5(Link_reg_r2_0_63_9_11_n_0),
        .O(temp20[9]));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[0]),
        .Q(temp2[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[10]),
        .Q(temp2[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[11]),
        .Q(temp2[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[12]),
        .Q(temp2[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[13]),
        .Q(temp2[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[14]),
        .Q(temp2[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[15]),
        .Q(temp2[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[16]),
        .Q(temp2[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[17]),
        .Q(temp2[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[18]),
        .Q(temp2[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[19]),
        .Q(temp2[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[1]),
        .Q(temp2[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[20]),
        .Q(temp2[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[21]),
        .Q(temp2[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[22]),
        .Q(temp2[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[23]),
        .Q(temp2[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[24]),
        .Q(temp2[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[25]),
        .Q(temp2[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[26]),
        .Q(temp2[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[27]),
        .Q(temp2[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[28]),
        .Q(temp2[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[29]),
        .Q(temp2[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[2]),
        .Q(temp2[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[30]),
        .Q(temp2[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[31]),
        .Q(temp2[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[3]),
        .Q(temp2[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[4]),
        .Q(temp2[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[5]),
        .Q(temp2[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[6]),
        .Q(temp2[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[7]),
        .Q(temp2[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[8]),
        .Q(temp2[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp2_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp20[9]),
        .Q(temp2[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[0]_i_1 
       (.I0(P_reg_r2_192_255_0_2_n_0),
        .I1(P_reg_r2_128_191_0_2_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_0_2_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_0_2_n_0),
        .O(temp0[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[10]_i_1 
       (.I0(P_reg_r2_192_255_9_11_n_1),
        .I1(P_reg_r2_128_191_9_11_n_1),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_9_11_n_1),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_9_11_n_1),
        .O(temp0[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[11]_i_1 
       (.I0(P_reg_r2_192_255_9_11_n_2),
        .I1(P_reg_r2_128_191_9_11_n_2),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_9_11_n_2),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_9_11_n_2),
        .O(temp0[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[12]_i_1 
       (.I0(P_reg_r2_192_255_12_14_n_0),
        .I1(P_reg_r2_128_191_12_14_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_12_14_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_12_14_n_0),
        .O(temp0[12]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[13]_i_1 
       (.I0(P_reg_r2_192_255_12_14_n_1),
        .I1(P_reg_r2_128_191_12_14_n_1),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_12_14_n_1),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_12_14_n_1),
        .O(temp0[13]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[14]_i_1 
       (.I0(P_reg_r2_192_255_12_14_n_2),
        .I1(P_reg_r2_128_191_12_14_n_2),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_12_14_n_2),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_12_14_n_2),
        .O(temp0[14]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[15]_i_1 
       (.I0(P_reg_r2_192_255_15_17_n_0),
        .I1(P_reg_r2_128_191_15_17_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_15_17_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_15_17_n_0),
        .O(temp0[15]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[16]_i_1 
       (.I0(P_reg_r2_192_255_15_17_n_1),
        .I1(P_reg_r2_128_191_15_17_n_1),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_15_17_n_1),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_15_17_n_1),
        .O(temp0[16]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[17]_i_1 
       (.I0(P_reg_r2_192_255_15_17_n_2),
        .I1(P_reg_r2_128_191_15_17_n_2),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_15_17_n_2),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_15_17_n_2),
        .O(temp0[17]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[18]_i_1 
       (.I0(P_reg_r2_192_255_18_20_n_0),
        .I1(P_reg_r2_128_191_18_20_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_18_20_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_18_20_n_0),
        .O(temp0[18]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[19]_i_1 
       (.I0(P_reg_r2_192_255_18_20_n_1),
        .I1(P_reg_r2_128_191_18_20_n_1),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_18_20_n_1),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_18_20_n_1),
        .O(temp0[19]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[1]_i_1 
       (.I0(P_reg_r2_192_255_0_2_n_1),
        .I1(P_reg_r2_128_191_0_2_n_1),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_0_2_n_1),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_0_2_n_1),
        .O(temp0[1]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[20]_i_1 
       (.I0(P_reg_r2_192_255_18_20_n_2),
        .I1(P_reg_r2_128_191_18_20_n_2),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_18_20_n_2),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_18_20_n_2),
        .O(temp0[20]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[21]_i_1 
       (.I0(P_reg_r2_192_255_21_23_n_0),
        .I1(P_reg_r2_128_191_21_23_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_21_23_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_21_23_n_0),
        .O(temp0[21]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[22]_i_1 
       (.I0(P_reg_r2_192_255_21_23_n_1),
        .I1(P_reg_r2_128_191_21_23_n_1),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_21_23_n_1),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_21_23_n_1),
        .O(temp0[22]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[23]_i_1 
       (.I0(P_reg_r2_192_255_21_23_n_2),
        .I1(P_reg_r2_128_191_21_23_n_2),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_21_23_n_2),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_21_23_n_2),
        .O(temp0[23]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[24]_i_1 
       (.I0(P_reg_r2_192_255_24_26_n_0),
        .I1(P_reg_r2_128_191_24_26_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_24_26_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_24_26_n_0),
        .O(temp0[24]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[25]_i_1 
       (.I0(P_reg_r2_192_255_24_26_n_1),
        .I1(P_reg_r2_128_191_24_26_n_1),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_24_26_n_1),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_24_26_n_1),
        .O(temp0[25]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[26]_i_1 
       (.I0(P_reg_r2_192_255_24_26_n_2),
        .I1(P_reg_r2_128_191_24_26_n_2),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_24_26_n_2),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_24_26_n_2),
        .O(temp0[26]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[27]_i_1 
       (.I0(P_reg_r2_192_255_27_29_n_0),
        .I1(P_reg_r2_128_191_27_29_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_27_29_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_27_29_n_0),
        .O(temp0[27]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[28]_i_1 
       (.I0(P_reg_r2_192_255_27_29_n_1),
        .I1(P_reg_r2_128_191_27_29_n_1),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_27_29_n_1),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_27_29_n_1),
        .O(temp0[28]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[29]_i_1 
       (.I0(P_reg_r2_192_255_27_29_n_2),
        .I1(P_reg_r2_128_191_27_29_n_2),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_27_29_n_2),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_27_29_n_2),
        .O(temp0[29]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[2]_i_1 
       (.I0(P_reg_r2_192_255_0_2_n_2),
        .I1(P_reg_r2_128_191_0_2_n_2),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_0_2_n_2),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_0_2_n_2),
        .O(temp0[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[30]_i_1 
       (.I0(P_reg_r2_192_255_30_30_n_0),
        .I1(P_reg_r2_128_191_30_30_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_30_30_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_30_30_n_0),
        .O(temp0[30]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[31]_i_1 
       (.I0(P_reg_r2_192_255_31_31_n_0),
        .I1(P_reg_r2_128_191_31_31_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_31_31_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_31_31_n_0),
        .O(temp0[31]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[3]_i_1 
       (.I0(P_reg_r2_192_255_3_5_n_0),
        .I1(P_reg_r2_128_191_3_5_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_3_5_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_3_5_n_0),
        .O(temp0[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[4]_i_1 
       (.I0(P_reg_r2_192_255_3_5_n_1),
        .I1(P_reg_r2_128_191_3_5_n_1),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_3_5_n_1),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_3_5_n_1),
        .O(temp0[4]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[5]_i_1 
       (.I0(P_reg_r2_192_255_3_5_n_2),
        .I1(P_reg_r2_128_191_3_5_n_2),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_3_5_n_2),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_3_5_n_2),
        .O(temp0[5]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[6]_i_1 
       (.I0(P_reg_r2_192_255_6_8_n_0),
        .I1(P_reg_r2_128_191_6_8_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_6_8_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_6_8_n_0),
        .O(temp0[6]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[7]_i_1 
       (.I0(P_reg_r2_192_255_6_8_n_1),
        .I1(P_reg_r2_128_191_6_8_n_1),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_6_8_n_1),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_6_8_n_1),
        .O(temp0[7]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[8]_i_1 
       (.I0(P_reg_r2_192_255_6_8_n_2),
        .I1(P_reg_r2_128_191_6_8_n_2),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_6_8_n_2),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_6_8_n_2),
        .O(temp0[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \temp[9]_i_1 
       (.I0(P_reg_r2_192_255_9_11_n_0),
        .I1(P_reg_r2_128_191_9_11_n_0),
        .I2(\j_reg_rep[7]__1_n_0 ),
        .I3(P_reg_r2_64_127_9_11_n_0),
        .I4(\j_reg_rep[6]__1_n_0 ),
        .I5(P_reg_r2_0_63_9_11_n_0),
        .O(temp0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[0]),
        .Q(temp[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[10]),
        .Q(temp[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[11]),
        .Q(temp[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[12]),
        .Q(temp[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[13]),
        .Q(temp[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[14]),
        .Q(temp[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[15]),
        .Q(temp[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[16]),
        .Q(temp[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[17]),
        .Q(temp[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[18]),
        .Q(temp[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[19]),
        .Q(temp[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[1]),
        .Q(temp[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[20]),
        .Q(temp[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[21]),
        .Q(temp[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[22]),
        .Q(temp[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[23]),
        .Q(temp[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[24]),
        .Q(temp[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[25]),
        .Q(temp[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[26]),
        .Q(temp[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[27]),
        .Q(temp[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[28]),
        .Q(temp[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[29]),
        .Q(temp[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[2]),
        .Q(temp[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[30]),
        .Q(temp[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[31]),
        .Q(temp[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[3]),
        .Q(temp[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[4]),
        .Q(temp[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[5]),
        .Q(temp[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[6]),
        .Q(temp[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[7]),
        .Q(temp[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[8]),
        .Q(temp[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \temp_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\temp1[7]_i_1_n_0 ),
        .D(temp0[9]),
        .Q(temp[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hBABBAAAA)) 
    tree_data_ready_i_1
       (.I0(\FSM_onehot_state_reg_n_0_[9] ),
        .I1(\FSM_onehot_state_reg_n_0_[0] ),
        .I2(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I3(\FSM_onehot_state_reg_n_0_[8] ),
        .I4(tree_data_ready),
        .O(tree_data_ready_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tree_data_ready_reg
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(tree_data_ready_i_1_n_0),
        .Q(tree_data_ready),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFEFFF20)) 
    \tree_tab_length[2]_i_1 
       (.I0(ID_reg_r3_0_63_0_2_i_2_n_6),
        .I1(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(tree_tab_length[2]),
        .O(\tree_tab_length[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEFFF20)) 
    \tree_tab_length[5]_i_1 
       (.I0(ID_reg_r3_0_63_0_2_i_1_n_7),
        .I1(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(tree_tab_length[5]),
        .O(\tree_tab_length[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFEFFF20)) 
    \tree_tab_length[6]_i_1 
       (.I0(ID_reg_r3_0_63_0_2_i_1_n_6),
        .I1(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I2(\FSM_onehot_state_reg_n_0_[3] ),
        .I3(\FSM_onehot_state_reg_n_0_[2] ),
        .I4(tree_tab_length[6]),
        .O(\tree_tab_length[6]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \tree_tab_length[7]_i_1 
       (.I0(\FSM_onehot_state_reg_n_0_[2] ),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .O(\tree_tab_length[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF4)) 
    \tree_tab_length[7]_i_2 
       (.I0(ID_reg_r1_0_63_0_2_i_19_n_0),
        .I1(\FSM_onehot_state_reg_n_0_[3] ),
        .I2(\FSM_onehot_state_reg_n_0_[2] ),
        .O(\tree_tab_length[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_tab_length_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\tree_tab_length[7]_i_2_n_0 ),
        .D(ID_reg_r3_0_63_0_2_i_3_n_0),
        .Q(tree_tab_length[0]),
        .R(\tree_tab_length[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_tab_length_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\tree_tab_length[7]_i_2_n_0 ),
        .D(ID_reg_r3_0_63_0_2_i_2_n_7),
        .Q(tree_tab_length[1]),
        .R(\tree_tab_length[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_tab_length_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\tree_tab_length[2]_i_1_n_0 ),
        .Q(tree_tab_length[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_tab_length_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\tree_tab_length[7]_i_2_n_0 ),
        .D(ID_reg_r3_0_63_0_2_i_2_n_5),
        .Q(tree_tab_length[3]),
        .R(\tree_tab_length[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_tab_length_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\tree_tab_length[7]_i_2_n_0 ),
        .D(ID_reg_r3_0_63_0_2_i_2_n_4),
        .Q(tree_tab_length[4]),
        .R(\tree_tab_length[7]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_tab_length_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\tree_tab_length[5]_i_1_n_0 ),
        .Q(tree_tab_length[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_tab_length_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\tree_tab_length[6]_i_1_n_0 ),
        .Q(tree_tab_length[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \tree_tab_length_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\tree_tab_length[7]_i_2_n_0 ),
        .D(ID_reg_r3_0_63_0_2_i_1_n_5),
        .Q(tree_tab_length[7]),
        .R(\tree_tab_length[7]_i_1_n_0 ));
endmodule

(* max_data_count = "1024" *) (* max_decoder_input_bit_count = "1024" *) (* symbols_amount = "50" *) 
(* NotValidForBitStream *)
module huffman_decoder
   (clock,
    data_enable,
    data_in,
    data_in_length,
    decoded_out,
    decoded_out_data_ready);
  input clock;
  input data_enable;
  input data_in;
  input [31:0]data_in_length;
  output [7:0]decoded_out;
  output decoded_out_data_ready;

  wire \bit_counter[0]_i_1_n_0 ;
  wire \bit_counter[0]_i_3_n_0 ;
  wire \bit_counter[0]_i_4_n_0 ;
  wire \bit_counter[0]_i_5_n_0 ;
  wire \bit_counter[0]_i_6_n_0 ;
  wire \bit_counter[12]_i_2_n_0 ;
  wire \bit_counter[12]_i_3_n_0 ;
  wire \bit_counter[12]_i_4_n_0 ;
  wire \bit_counter[12]_i_5_n_0 ;
  wire \bit_counter[16]_i_2_n_0 ;
  wire \bit_counter[16]_i_3_n_0 ;
  wire \bit_counter[16]_i_4_n_0 ;
  wire \bit_counter[16]_i_5_n_0 ;
  wire \bit_counter[20]_i_2_n_0 ;
  wire \bit_counter[20]_i_3_n_0 ;
  wire \bit_counter[20]_i_4_n_0 ;
  wire \bit_counter[20]_i_5_n_0 ;
  wire \bit_counter[24]_i_2_n_0 ;
  wire \bit_counter[24]_i_3_n_0 ;
  wire \bit_counter[24]_i_4_n_0 ;
  wire \bit_counter[24]_i_5_n_0 ;
  wire \bit_counter[28]_i_2_n_0 ;
  wire \bit_counter[28]_i_3_n_0 ;
  wire \bit_counter[28]_i_4_n_0 ;
  wire \bit_counter[28]_i_5_n_0 ;
  wire \bit_counter[4]_i_2_n_0 ;
  wire \bit_counter[4]_i_3_n_0 ;
  wire \bit_counter[4]_i_4_n_0 ;
  wire \bit_counter[4]_i_5_n_0 ;
  wire \bit_counter[8]_i_2_n_0 ;
  wire \bit_counter[8]_i_3_n_0 ;
  wire \bit_counter[8]_i_4_n_0 ;
  wire \bit_counter[8]_i_5_n_0 ;
  wire [9:0]bit_counter_reg;
  wire \bit_counter_reg[0]_i_2_n_0 ;
  wire \bit_counter_reg[0]_i_2_n_1 ;
  wire \bit_counter_reg[0]_i_2_n_2 ;
  wire \bit_counter_reg[0]_i_2_n_3 ;
  wire \bit_counter_reg[0]_i_2_n_4 ;
  wire \bit_counter_reg[0]_i_2_n_5 ;
  wire \bit_counter_reg[0]_i_2_n_6 ;
  wire \bit_counter_reg[0]_i_2_n_7 ;
  wire \bit_counter_reg[12]_i_1_n_0 ;
  wire \bit_counter_reg[12]_i_1_n_1 ;
  wire \bit_counter_reg[12]_i_1_n_2 ;
  wire \bit_counter_reg[12]_i_1_n_3 ;
  wire \bit_counter_reg[12]_i_1_n_4 ;
  wire \bit_counter_reg[12]_i_1_n_5 ;
  wire \bit_counter_reg[12]_i_1_n_6 ;
  wire \bit_counter_reg[12]_i_1_n_7 ;
  wire \bit_counter_reg[16]_i_1_n_0 ;
  wire \bit_counter_reg[16]_i_1_n_1 ;
  wire \bit_counter_reg[16]_i_1_n_2 ;
  wire \bit_counter_reg[16]_i_1_n_3 ;
  wire \bit_counter_reg[16]_i_1_n_4 ;
  wire \bit_counter_reg[16]_i_1_n_5 ;
  wire \bit_counter_reg[16]_i_1_n_6 ;
  wire \bit_counter_reg[16]_i_1_n_7 ;
  wire \bit_counter_reg[20]_i_1_n_0 ;
  wire \bit_counter_reg[20]_i_1_n_1 ;
  wire \bit_counter_reg[20]_i_1_n_2 ;
  wire \bit_counter_reg[20]_i_1_n_3 ;
  wire \bit_counter_reg[20]_i_1_n_4 ;
  wire \bit_counter_reg[20]_i_1_n_5 ;
  wire \bit_counter_reg[20]_i_1_n_6 ;
  wire \bit_counter_reg[20]_i_1_n_7 ;
  wire \bit_counter_reg[24]_i_1_n_0 ;
  wire \bit_counter_reg[24]_i_1_n_1 ;
  wire \bit_counter_reg[24]_i_1_n_2 ;
  wire \bit_counter_reg[24]_i_1_n_3 ;
  wire \bit_counter_reg[24]_i_1_n_4 ;
  wire \bit_counter_reg[24]_i_1_n_5 ;
  wire \bit_counter_reg[24]_i_1_n_6 ;
  wire \bit_counter_reg[24]_i_1_n_7 ;
  wire \bit_counter_reg[28]_i_1_n_1 ;
  wire \bit_counter_reg[28]_i_1_n_2 ;
  wire \bit_counter_reg[28]_i_1_n_3 ;
  wire \bit_counter_reg[28]_i_1_n_4 ;
  wire \bit_counter_reg[28]_i_1_n_5 ;
  wire \bit_counter_reg[28]_i_1_n_6 ;
  wire \bit_counter_reg[28]_i_1_n_7 ;
  wire \bit_counter_reg[4]_i_1_n_0 ;
  wire \bit_counter_reg[4]_i_1_n_1 ;
  wire \bit_counter_reg[4]_i_1_n_2 ;
  wire \bit_counter_reg[4]_i_1_n_3 ;
  wire \bit_counter_reg[4]_i_1_n_4 ;
  wire \bit_counter_reg[4]_i_1_n_5 ;
  wire \bit_counter_reg[4]_i_1_n_6 ;
  wire \bit_counter_reg[4]_i_1_n_7 ;
  wire \bit_counter_reg[8]_i_1_n_0 ;
  wire \bit_counter_reg[8]_i_1_n_1 ;
  wire \bit_counter_reg[8]_i_1_n_2 ;
  wire \bit_counter_reg[8]_i_1_n_3 ;
  wire \bit_counter_reg[8]_i_1_n_4 ;
  wire \bit_counter_reg[8]_i_1_n_5 ;
  wire \bit_counter_reg[8]_i_1_n_6 ;
  wire \bit_counter_reg[8]_i_1_n_7 ;
  wire [31:10]bit_counter_reg__0;
  wire clock;
  wire clock_IBUF;
  wire clock_IBUF_BUFG;
  wire code_list_reg_i_10_n_0;
  wire code_list_reg_i_11_n_0;
  wire code_list_reg_i_12_n_0;
  wire code_list_reg_i_7_n_0;
  wire code_list_reg_i_8_n_0;
  wire code_list_reg_i_9_n_0;
  wire [3:2]code_position0;
  wire coder_codes_tab_length_reg_0_15_0_0__0_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__10_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__11_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__12_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__13_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__14_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__1_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__2_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__3_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__4_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__5_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__6_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__7_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__8_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0__9_n_0;
  wire coder_codes_tab_length_reg_0_15_0_0_n_0;
  wire coder_codes_tab_length_reg_0_31_0_0__0_n_0;
  wire coder_codes_tab_length_reg_0_31_0_0__1_n_0;
  wire coder_codes_tab_length_reg_0_31_0_0__2_n_0;
  wire coder_codes_tab_length_reg_0_31_0_0__3_n_0;
  wire coder_codes_tab_length_reg_0_31_0_0__4_n_0;
  wire coder_codes_tab_length_reg_0_31_0_0__5_n_0;
  wire coder_codes_tab_length_reg_0_31_0_0__6_n_0;
  wire coder_codes_tab_length_reg_0_31_0_0_n_0;
  wire coder_codes_tab_reg_0_15_0_0__0_i_1_n_0;
  wire coder_codes_tab_reg_0_15_0_0__0_n_0;
  wire coder_codes_tab_reg_0_15_0_0__10_n_0;
  wire coder_codes_tab_reg_0_15_0_0__11_n_0;
  wire coder_codes_tab_reg_0_15_0_0__12_n_0;
  wire coder_codes_tab_reg_0_15_0_0__13_n_0;
  wire coder_codes_tab_reg_0_15_0_0__14_n_0;
  wire coder_codes_tab_reg_0_15_0_0__1_n_0;
  wire coder_codes_tab_reg_0_15_0_0__2_n_0;
  wire coder_codes_tab_reg_0_15_0_0__3_n_0;
  wire coder_codes_tab_reg_0_15_0_0__4_n_0;
  wire coder_codes_tab_reg_0_15_0_0__5_n_0;
  wire coder_codes_tab_reg_0_15_0_0__6_n_0;
  wire coder_codes_tab_reg_0_15_0_0__7_n_0;
  wire coder_codes_tab_reg_0_15_0_0__8_n_0;
  wire coder_codes_tab_reg_0_15_0_0__9_n_0;
  wire coder_codes_tab_reg_0_15_0_0_i_1_n_0;
  wire coder_codes_tab_reg_0_15_0_0_n_0;
  wire coder_codes_tab_reg_0_31_0_0__0_n_0;
  wire coder_codes_tab_reg_0_31_0_0__1_n_0;
  wire coder_codes_tab_reg_0_31_0_0__2_n_0;
  wire coder_codes_tab_reg_0_31_0_0__3_n_0;
  wire coder_codes_tab_reg_0_31_0_0__4_n_0;
  wire coder_codes_tab_reg_0_31_0_0__5_n_0;
  wire coder_codes_tab_reg_0_31_0_0__6_n_0;
  wire coder_codes_tab_reg_0_31_0_0_i_1_n_0;
  wire coder_codes_tab_reg_0_31_0_0_n_0;
  wire [31:1]data0;
  wire data_enable;
  wire data_enable_IBUF;
  wire data_in;
  wire data_in_IBUF;
  wire [31:0]data_in_length;
  wire [31:0]data_in_length_IBUF;
  wire [7:0]decoded_out;
  wire [7:0]decoded_out_OBUF;
  wire decoded_out_data_ready;
  wire decoded_out_data_ready_OBUF;
  wire decoded_out_data_ready_i_10_n_0;
  wire decoded_out_data_ready_i_11_n_0;
  wire decoded_out_data_ready_i_13_n_0;
  wire decoded_out_data_ready_i_14_n_0;
  wire decoded_out_data_ready_i_15_n_0;
  wire decoded_out_data_ready_i_16_n_0;
  wire decoded_out_data_ready_i_17_n_0;
  wire decoded_out_data_ready_i_18_n_0;
  wire decoded_out_data_ready_i_19_n_0;
  wire decoded_out_data_ready_i_1_n_0;
  wire decoded_out_data_ready_i_20_n_0;
  wire decoded_out_data_ready_i_22_n_0;
  wire decoded_out_data_ready_i_23_n_0;
  wire decoded_out_data_ready_i_24_n_0;
  wire decoded_out_data_ready_i_25_n_0;
  wire decoded_out_data_ready_i_26_n_0;
  wire decoded_out_data_ready_i_27_n_0;
  wire decoded_out_data_ready_i_28_n_0;
  wire decoded_out_data_ready_i_29_n_0;
  wire decoded_out_data_ready_i_30_n_0;
  wire decoded_out_data_ready_i_31_n_0;
  wire decoded_out_data_ready_i_32_n_0;
  wire decoded_out_data_ready_i_33_n_0;
  wire decoded_out_data_ready_i_34_n_0;
  wire decoded_out_data_ready_i_35_n_0;
  wire decoded_out_data_ready_i_36_n_0;
  wire decoded_out_data_ready_i_37_n_0;
  wire decoded_out_data_ready_i_4_n_0;
  wire decoded_out_data_ready_i_5_n_0;
  wire decoded_out_data_ready_i_6_n_0;
  wire decoded_out_data_ready_i_7_n_0;
  wire decoded_out_data_ready_i_8_n_0;
  wire decoded_out_data_ready_i_9_n_0;
  wire decoded_out_data_ready_reg_i_12_n_0;
  wire decoded_out_data_ready_reg_i_12_n_1;
  wire decoded_out_data_ready_reg_i_12_n_2;
  wire decoded_out_data_ready_reg_i_12_n_3;
  wire decoded_out_data_ready_reg_i_21_n_0;
  wire decoded_out_data_ready_reg_i_21_n_1;
  wire decoded_out_data_ready_reg_i_21_n_2;
  wire decoded_out_data_ready_reg_i_21_n_3;
  wire decoded_out_data_ready_reg_i_2_n_0;
  wire decoded_out_data_ready_reg_i_2_n_1;
  wire decoded_out_data_ready_reg_i_2_n_2;
  wire decoded_out_data_ready_reg_i_2_n_3;
  wire decoded_out_data_ready_reg_i_3_n_0;
  wire decoded_out_data_ready_reg_i_3_n_1;
  wire decoded_out_data_ready_reg_i_3_n_2;
  wire decoded_out_data_ready_reg_i_3_n_3;
  wire decoded_output_reg_i_1_n_0;
  wire decoded_output_reg_i_2_n_0;
  wire \decoded_symbols_number[0]_i_2_n_0 ;
  wire \decoded_symbols_number[0]_i_3_n_0 ;
  wire \decoded_symbols_number[0]_i_4_n_0 ;
  wire \decoded_symbols_number[0]_i_5_n_0 ;
  wire \decoded_symbols_number[12]_i_2_n_0 ;
  wire \decoded_symbols_number[12]_i_3_n_0 ;
  wire \decoded_symbols_number[12]_i_4_n_0 ;
  wire \decoded_symbols_number[12]_i_5_n_0 ;
  wire \decoded_symbols_number[16]_i_2_n_0 ;
  wire \decoded_symbols_number[16]_i_3_n_0 ;
  wire \decoded_symbols_number[16]_i_4_n_0 ;
  wire \decoded_symbols_number[16]_i_5_n_0 ;
  wire \decoded_symbols_number[20]_i_2_n_0 ;
  wire \decoded_symbols_number[20]_i_3_n_0 ;
  wire \decoded_symbols_number[20]_i_4_n_0 ;
  wire \decoded_symbols_number[20]_i_5_n_0 ;
  wire \decoded_symbols_number[24]_i_2_n_0 ;
  wire \decoded_symbols_number[24]_i_3_n_0 ;
  wire \decoded_symbols_number[24]_i_4_n_0 ;
  wire \decoded_symbols_number[24]_i_5_n_0 ;
  wire \decoded_symbols_number[28]_i_2_n_0 ;
  wire \decoded_symbols_number[28]_i_3_n_0 ;
  wire \decoded_symbols_number[28]_i_4_n_0 ;
  wire \decoded_symbols_number[28]_i_5_n_0 ;
  wire \decoded_symbols_number[4]_i_2_n_0 ;
  wire \decoded_symbols_number[4]_i_3_n_0 ;
  wire \decoded_symbols_number[4]_i_4_n_0 ;
  wire \decoded_symbols_number[4]_i_5_n_0 ;
  wire \decoded_symbols_number[8]_i_2_n_0 ;
  wire \decoded_symbols_number[8]_i_3_n_0 ;
  wire \decoded_symbols_number[8]_i_4_n_0 ;
  wire \decoded_symbols_number[8]_i_5_n_0 ;
  wire [31:0]decoded_symbols_number_reg;
  wire \decoded_symbols_number_reg[0]_i_1_n_0 ;
  wire \decoded_symbols_number_reg[0]_i_1_n_1 ;
  wire \decoded_symbols_number_reg[0]_i_1_n_2 ;
  wire \decoded_symbols_number_reg[0]_i_1_n_3 ;
  wire \decoded_symbols_number_reg[0]_i_1_n_4 ;
  wire \decoded_symbols_number_reg[0]_i_1_n_5 ;
  wire \decoded_symbols_number_reg[0]_i_1_n_6 ;
  wire \decoded_symbols_number_reg[0]_i_1_n_7 ;
  wire \decoded_symbols_number_reg[12]_i_1_n_0 ;
  wire \decoded_symbols_number_reg[12]_i_1_n_1 ;
  wire \decoded_symbols_number_reg[12]_i_1_n_2 ;
  wire \decoded_symbols_number_reg[12]_i_1_n_3 ;
  wire \decoded_symbols_number_reg[12]_i_1_n_4 ;
  wire \decoded_symbols_number_reg[12]_i_1_n_5 ;
  wire \decoded_symbols_number_reg[12]_i_1_n_6 ;
  wire \decoded_symbols_number_reg[12]_i_1_n_7 ;
  wire \decoded_symbols_number_reg[16]_i_1_n_0 ;
  wire \decoded_symbols_number_reg[16]_i_1_n_1 ;
  wire \decoded_symbols_number_reg[16]_i_1_n_2 ;
  wire \decoded_symbols_number_reg[16]_i_1_n_3 ;
  wire \decoded_symbols_number_reg[16]_i_1_n_4 ;
  wire \decoded_symbols_number_reg[16]_i_1_n_5 ;
  wire \decoded_symbols_number_reg[16]_i_1_n_6 ;
  wire \decoded_symbols_number_reg[16]_i_1_n_7 ;
  wire \decoded_symbols_number_reg[20]_i_1_n_0 ;
  wire \decoded_symbols_number_reg[20]_i_1_n_1 ;
  wire \decoded_symbols_number_reg[20]_i_1_n_2 ;
  wire \decoded_symbols_number_reg[20]_i_1_n_3 ;
  wire \decoded_symbols_number_reg[20]_i_1_n_4 ;
  wire \decoded_symbols_number_reg[20]_i_1_n_5 ;
  wire \decoded_symbols_number_reg[20]_i_1_n_6 ;
  wire \decoded_symbols_number_reg[20]_i_1_n_7 ;
  wire \decoded_symbols_number_reg[24]_i_1_n_0 ;
  wire \decoded_symbols_number_reg[24]_i_1_n_1 ;
  wire \decoded_symbols_number_reg[24]_i_1_n_2 ;
  wire \decoded_symbols_number_reg[24]_i_1_n_3 ;
  wire \decoded_symbols_number_reg[24]_i_1_n_4 ;
  wire \decoded_symbols_number_reg[24]_i_1_n_5 ;
  wire \decoded_symbols_number_reg[24]_i_1_n_6 ;
  wire \decoded_symbols_number_reg[24]_i_1_n_7 ;
  wire \decoded_symbols_number_reg[28]_i_1_n_1 ;
  wire \decoded_symbols_number_reg[28]_i_1_n_2 ;
  wire \decoded_symbols_number_reg[28]_i_1_n_3 ;
  wire \decoded_symbols_number_reg[28]_i_1_n_4 ;
  wire \decoded_symbols_number_reg[28]_i_1_n_5 ;
  wire \decoded_symbols_number_reg[28]_i_1_n_6 ;
  wire \decoded_symbols_number_reg[28]_i_1_n_7 ;
  wire \decoded_symbols_number_reg[4]_i_1_n_0 ;
  wire \decoded_symbols_number_reg[4]_i_1_n_1 ;
  wire \decoded_symbols_number_reg[4]_i_1_n_2 ;
  wire \decoded_symbols_number_reg[4]_i_1_n_3 ;
  wire \decoded_symbols_number_reg[4]_i_1_n_4 ;
  wire \decoded_symbols_number_reg[4]_i_1_n_5 ;
  wire \decoded_symbols_number_reg[4]_i_1_n_6 ;
  wire \decoded_symbols_number_reg[4]_i_1_n_7 ;
  wire \decoded_symbols_number_reg[8]_i_1_n_0 ;
  wire \decoded_symbols_number_reg[8]_i_1_n_1 ;
  wire \decoded_symbols_number_reg[8]_i_1_n_2 ;
  wire \decoded_symbols_number_reg[8]_i_1_n_3 ;
  wire \decoded_symbols_number_reg[8]_i_1_n_4 ;
  wire \decoded_symbols_number_reg[8]_i_1_n_5 ;
  wire \decoded_symbols_number_reg[8]_i_1_n_6 ;
  wire \decoded_symbols_number_reg[8]_i_1_n_7 ;
  wire decoder_bit_input_reg_i_10_n_0;
  wire decoder_bit_input_reg_i_11_n_0;
  wire decoder_bit_input_reg_i_12_n_0;
  wire decoder_bit_input_reg_i_13_n_0;
  wire decoder_bit_input_reg_i_14_n_0;
  wire decoder_bit_input_reg_i_15_n_0;
  wire decoder_bit_input_reg_i_15_n_1;
  wire decoder_bit_input_reg_i_15_n_2;
  wire decoder_bit_input_reg_i_15_n_3;
  wire decoder_bit_input_reg_i_16_n_0;
  wire decoder_bit_input_reg_i_17_n_0;
  wire decoder_bit_input_reg_i_18_n_0;
  wire decoder_bit_input_reg_i_19_n_0;
  wire decoder_bit_input_reg_i_1_n_0;
  wire decoder_bit_input_reg_i_20_n_0;
  wire decoder_bit_input_reg_i_21_n_0;
  wire decoder_bit_input_reg_i_22_n_0;
  wire decoder_bit_input_reg_i_23_n_0;
  wire decoder_bit_input_reg_i_24_n_0;
  wire decoder_bit_input_reg_i_24_n_1;
  wire decoder_bit_input_reg_i_24_n_2;
  wire decoder_bit_input_reg_i_24_n_3;
  wire decoder_bit_input_reg_i_25_n_0;
  wire decoder_bit_input_reg_i_26_n_0;
  wire decoder_bit_input_reg_i_27_n_0;
  wire decoder_bit_input_reg_i_28_n_0;
  wire decoder_bit_input_reg_i_29_n_0;
  wire decoder_bit_input_reg_i_2_n_0;
  wire decoder_bit_input_reg_i_30_n_0;
  wire decoder_bit_input_reg_i_31_n_0;
  wire decoder_bit_input_reg_i_32_n_0;
  wire decoder_bit_input_reg_i_33_n_0;
  wire decoder_bit_input_reg_i_33_n_1;
  wire decoder_bit_input_reg_i_33_n_2;
  wire decoder_bit_input_reg_i_33_n_3;
  wire decoder_bit_input_reg_i_34_n_0;
  wire decoder_bit_input_reg_i_35_n_0;
  wire decoder_bit_input_reg_i_36_n_0;
  wire decoder_bit_input_reg_i_37_n_0;
  wire decoder_bit_input_reg_i_38_n_0;
  wire decoder_bit_input_reg_i_39_n_0;
  wire decoder_bit_input_reg_i_3_n_0;
  wire decoder_bit_input_reg_i_40_n_0;
  wire decoder_bit_input_reg_i_41_n_0;
  wire decoder_bit_input_reg_i_42_n_0;
  wire decoder_bit_input_reg_i_42_n_1;
  wire decoder_bit_input_reg_i_42_n_2;
  wire decoder_bit_input_reg_i_42_n_3;
  wire decoder_bit_input_reg_i_43_n_0;
  wire decoder_bit_input_reg_i_44_n_0;
  wire decoder_bit_input_reg_i_45_n_0;
  wire decoder_bit_input_reg_i_46_n_0;
  wire decoder_bit_input_reg_i_47_n_0;
  wire decoder_bit_input_reg_i_48_n_0;
  wire decoder_bit_input_reg_i_49_n_0;
  wire decoder_bit_input_reg_i_4_n_0;
  wire decoder_bit_input_reg_i_4_n_1;
  wire decoder_bit_input_reg_i_4_n_2;
  wire decoder_bit_input_reg_i_4_n_3;
  wire decoder_bit_input_reg_i_50_n_0;
  wire decoder_bit_input_reg_i_51_n_0;
  wire decoder_bit_input_reg_i_51_n_1;
  wire decoder_bit_input_reg_i_51_n_2;
  wire decoder_bit_input_reg_i_51_n_3;
  wire decoder_bit_input_reg_i_52_n_0;
  wire decoder_bit_input_reg_i_53_n_0;
  wire decoder_bit_input_reg_i_54_n_0;
  wire decoder_bit_input_reg_i_55_n_0;
  wire decoder_bit_input_reg_i_56_n_0;
  wire decoder_bit_input_reg_i_57_n_0;
  wire decoder_bit_input_reg_i_58_n_0;
  wire decoder_bit_input_reg_i_59_n_0;
  wire decoder_bit_input_reg_i_5_n_0;
  wire decoder_bit_input_reg_i_5_n_1;
  wire decoder_bit_input_reg_i_5_n_2;
  wire decoder_bit_input_reg_i_5_n_3;
  wire decoder_bit_input_reg_i_60_n_0;
  wire decoder_bit_input_reg_i_61_n_0;
  wire decoder_bit_input_reg_i_62_n_0;
  wire decoder_bit_input_reg_i_63_n_0;
  wire decoder_bit_input_reg_i_64_n_0;
  wire decoder_bit_input_reg_i_65_n_0;
  wire decoder_bit_input_reg_i_66_n_0;
  wire decoder_bit_input_reg_i_67_n_0;
  wire decoder_bit_input_reg_i_68_n_0;
  wire decoder_bit_input_reg_i_69_n_0;
  wire decoder_bit_input_reg_i_6_n_0;
  wire decoder_bit_input_reg_i_6_n_1;
  wire decoder_bit_input_reg_i_6_n_2;
  wire decoder_bit_input_reg_i_6_n_3;
  wire decoder_bit_input_reg_i_70_n_0;
  wire decoder_bit_input_reg_i_71_n_0;
  wire decoder_bit_input_reg_i_72_n_0;
  wire decoder_bit_input_reg_i_73_n_0;
  wire decoder_bit_input_reg_i_74_n_0;
  wire decoder_bit_input_reg_i_75_n_0;
  wire decoder_bit_input_reg_i_7_n_0;
  wire decoder_bit_input_reg_i_8_n_0;
  wire decoder_bit_input_reg_i_9_n_0;
  wire [7:0]decoder_code_in;
  wire [7:0]decoder_code_in0;
  wire \decoder_code_in[7]_i_1_n_0 ;
  wire [7:0]decoder_code_length_in;
  wire [7:0]decoder_code_length_in0;
  wire decoder_data_enable_i_1_n_0;
  wire decoder_data_enable_i_2_n_0;
  wire decoder_data_enable_i_3_n_0;
  wire decoder_data_enable_reg_n_0;
  wire decoder_data_in;
  wire [31:0]decoder_data_length_in;
  wire \decoder_data_length_in[31]_i_1_n_0 ;
  wire \decoder_data_length_in[31]_i_2_n_0 ;
  wire [7:0]decoder_decoded_number;
  wire decoder_n_11;
  wire decoder_n_44;
  wire decoder_n_45;
  wire decoder_n_46;
  wire decoder_n_47;
  wire decoder_n_48;
  wire decoder_n_49;
  wire decoder_n_50;
  wire decoder_n_51;
  wire decoder_n_8;
  wire \decoder_symbols_in_reg_n_0_[5] ;
  wire [31:0]i;
  wire [31:1]i0;
  wire \i[0]_i_1_n_0 ;
  wire \i[10]_i_1__0_n_0 ;
  wire \i[11]_i_1__0_n_0 ;
  wire \i[12]_i_1__0_n_0 ;
  wire \i[12]_i_3__1_n_0 ;
  wire \i[12]_i_4__1_n_0 ;
  wire \i[12]_i_5__1_n_0 ;
  wire \i[12]_i_6__0_n_0 ;
  wire \i[13]_i_1__0_n_0 ;
  wire \i[14]_i_1__0_n_0 ;
  wire \i[15]_i_1__0_n_0 ;
  wire \i[16]_i_1__0_n_0 ;
  wire \i[16]_i_3__1_n_0 ;
  wire \i[16]_i_4__1_n_0 ;
  wire \i[16]_i_5__1_n_0 ;
  wire \i[16]_i_6__0_n_0 ;
  wire \i[17]_i_1__0_n_0 ;
  wire \i[18]_i_1__0_n_0 ;
  wire \i[19]_i_1__0_n_0 ;
  wire \i[1]_i_1_n_0 ;
  wire \i[20]_i_1__0_n_0 ;
  wire \i[20]_i_3__1_n_0 ;
  wire \i[20]_i_4__1_n_0 ;
  wire \i[20]_i_5__1_n_0 ;
  wire \i[20]_i_6__0_n_0 ;
  wire \i[21]_i_1__0_n_0 ;
  wire \i[22]_i_1__0_n_0 ;
  wire \i[23]_i_1__0_n_0 ;
  wire \i[24]_i_1__0_n_0 ;
  wire \i[24]_i_3__1_n_0 ;
  wire \i[24]_i_4__1_n_0 ;
  wire \i[24]_i_5__1_n_0 ;
  wire \i[24]_i_6__0_n_0 ;
  wire \i[25]_i_1__0_n_0 ;
  wire \i[26]_i_1__0_n_0 ;
  wire \i[27]_i_1__0_n_0 ;
  wire \i[28]_i_1__0_n_0 ;
  wire \i[28]_i_3__1_n_0 ;
  wire \i[28]_i_4__1_n_0 ;
  wire \i[28]_i_5__1_n_0 ;
  wire \i[28]_i_6__0_n_0 ;
  wire \i[29]_i_1__0_n_0 ;
  wire \i[2]_i_1_n_0 ;
  wire \i[30]_i_1__0_n_0 ;
  wire \i[31]_i_100_n_0 ;
  wire \i[31]_i_101_n_0 ;
  wire \i[31]_i_102_n_0 ;
  wire \i[31]_i_103_n_0 ;
  wire \i[31]_i_104_n_0 ;
  wire \i[31]_i_11_n_0 ;
  wire \i[31]_i_12_n_0 ;
  wire \i[31]_i_13_n_0 ;
  wire \i[31]_i_14_n_0 ;
  wire \i[31]_i_15_n_0 ;
  wire \i[31]_i_16_n_0 ;
  wire \i[31]_i_17_n_0 ;
  wire \i[31]_i_20_n_0 ;
  wire \i[31]_i_21_n_0 ;
  wire \i[31]_i_22_n_0 ;
  wire \i[31]_i_23_n_0 ;
  wire \i[31]_i_24_n_0 ;
  wire \i[31]_i_25_n_0 ;
  wire \i[31]_i_26_n_0 ;
  wire \i[31]_i_27_n_0 ;
  wire \i[31]_i_29_n_0 ;
  wire \i[31]_i_30_n_0 ;
  wire \i[31]_i_31_n_0 ;
  wire \i[31]_i_32_n_0 ;
  wire \i[31]_i_34_n_0 ;
  wire \i[31]_i_35_n_0 ;
  wire \i[31]_i_36_n_0 ;
  wire \i[31]_i_37_n_0 ;
  wire \i[31]_i_38_n_0 ;
  wire \i[31]_i_39_n_0 ;
  wire \i[31]_i_3_n_0 ;
  wire \i[31]_i_40_n_0 ;
  wire \i[31]_i_41_n_0 ;
  wire \i[31]_i_43_n_0 ;
  wire \i[31]_i_44_n_0 ;
  wire \i[31]_i_45_n_0 ;
  wire \i[31]_i_46_n_0 ;
  wire \i[31]_i_47_n_0 ;
  wire \i[31]_i_48_n_0 ;
  wire \i[31]_i_49_n_0 ;
  wire \i[31]_i_50_n_0 ;
  wire \i[31]_i_52_n_0 ;
  wire \i[31]_i_53_n_0 ;
  wire \i[31]_i_54_n_0 ;
  wire \i[31]_i_55_n_0 ;
  wire \i[31]_i_57_n_0 ;
  wire \i[31]_i_58_n_0 ;
  wire \i[31]_i_59_n_0 ;
  wire \i[31]_i_60_n_0 ;
  wire \i[31]_i_61_n_0 ;
  wire \i[31]_i_62_n_0 ;
  wire \i[31]_i_63_n_0 ;
  wire \i[31]_i_64_n_0 ;
  wire \i[31]_i_66_n_0 ;
  wire \i[31]_i_67_n_0 ;
  wire \i[31]_i_68_n_0 ;
  wire \i[31]_i_69_n_0 ;
  wire \i[31]_i_70_n_0 ;
  wire \i[31]_i_71_n_0 ;
  wire \i[31]_i_72_n_0 ;
  wire \i[31]_i_73_n_0 ;
  wire \i[31]_i_74_n_0 ;
  wire \i[31]_i_75_n_0 ;
  wire \i[31]_i_76_n_0 ;
  wire \i[31]_i_77_n_0 ;
  wire \i[31]_i_78_n_0 ;
  wire \i[31]_i_79_n_0 ;
  wire \i[31]_i_81_n_0 ;
  wire \i[31]_i_82_n_0 ;
  wire \i[31]_i_83_n_0 ;
  wire \i[31]_i_84_n_0 ;
  wire \i[31]_i_85_n_0 ;
  wire \i[31]_i_86_n_0 ;
  wire \i[31]_i_87_n_0 ;
  wire \i[31]_i_88_n_0 ;
  wire \i[31]_i_89_n_0 ;
  wire \i[31]_i_90_n_0 ;
  wire \i[31]_i_91_n_0 ;
  wire \i[31]_i_92_n_0 ;
  wire \i[31]_i_93_n_0 ;
  wire \i[31]_i_94_n_0 ;
  wire \i[31]_i_95_n_0 ;
  wire \i[31]_i_96_n_0 ;
  wire \i[31]_i_97_n_0 ;
  wire \i[31]_i_98_n_0 ;
  wire \i[31]_i_99_n_0 ;
  wire \i[3]_i_1_n_0 ;
  wire \i[4]_i_1_n_0 ;
  wire \i[4]_i_3_n_0 ;
  wire \i[4]_i_4_n_0 ;
  wire \i[4]_i_5_n_0 ;
  wire \i[4]_i_6_n_0 ;
  wire \i[5]_i_1_n_0 ;
  wire \i[6]_i_1_n_0 ;
  wire \i[7]_i_1_n_0 ;
  wire \i[8]_i_1__0_n_0 ;
  wire \i[8]_i_3_n_0 ;
  wire \i[8]_i_4_n_0 ;
  wire \i[8]_i_5_n_0 ;
  wire \i[8]_i_6_n_0 ;
  wire \i[9]_i_1__0_n_0 ;
  wire [5:0]i_0;
  wire \i_reg[12]_i_2__0_n_0 ;
  wire \i_reg[12]_i_2__0_n_1 ;
  wire \i_reg[12]_i_2__0_n_2 ;
  wire \i_reg[12]_i_2__0_n_3 ;
  wire \i_reg[16]_i_2__0_n_0 ;
  wire \i_reg[16]_i_2__0_n_1 ;
  wire \i_reg[16]_i_2__0_n_2 ;
  wire \i_reg[16]_i_2__0_n_3 ;
  wire \i_reg[20]_i_2__0_n_0 ;
  wire \i_reg[20]_i_2__0_n_1 ;
  wire \i_reg[20]_i_2__0_n_2 ;
  wire \i_reg[20]_i_2__0_n_3 ;
  wire \i_reg[24]_i_2__0_n_0 ;
  wire \i_reg[24]_i_2__0_n_1 ;
  wire \i_reg[24]_i_2__0_n_2 ;
  wire \i_reg[24]_i_2__0_n_3 ;
  wire \i_reg[28]_i_2__0_n_0 ;
  wire \i_reg[28]_i_2__0_n_1 ;
  wire \i_reg[28]_i_2__0_n_2 ;
  wire \i_reg[28]_i_2__0_n_3 ;
  wire \i_reg[31]_i_10_n_0 ;
  wire \i_reg[31]_i_10_n_1 ;
  wire \i_reg[31]_i_10_n_2 ;
  wire \i_reg[31]_i_10_n_3 ;
  wire \i_reg[31]_i_18_n_0 ;
  wire \i_reg[31]_i_18_n_1 ;
  wire \i_reg[31]_i_18_n_2 ;
  wire \i_reg[31]_i_18_n_3 ;
  wire \i_reg[31]_i_19_n_0 ;
  wire \i_reg[31]_i_19_n_1 ;
  wire \i_reg[31]_i_19_n_2 ;
  wire \i_reg[31]_i_19_n_3 ;
  wire \i_reg[31]_i_28_n_0 ;
  wire \i_reg[31]_i_28_n_1 ;
  wire \i_reg[31]_i_28_n_2 ;
  wire \i_reg[31]_i_28_n_3 ;
  wire \i_reg[31]_i_33_n_0 ;
  wire \i_reg[31]_i_33_n_1 ;
  wire \i_reg[31]_i_33_n_2 ;
  wire \i_reg[31]_i_33_n_3 ;
  wire \i_reg[31]_i_42_n_0 ;
  wire \i_reg[31]_i_42_n_1 ;
  wire \i_reg[31]_i_42_n_2 ;
  wire \i_reg[31]_i_42_n_3 ;
  wire \i_reg[31]_i_51_n_0 ;
  wire \i_reg[31]_i_51_n_1 ;
  wire \i_reg[31]_i_51_n_2 ;
  wire \i_reg[31]_i_51_n_3 ;
  wire \i_reg[31]_i_56_n_0 ;
  wire \i_reg[31]_i_56_n_1 ;
  wire \i_reg[31]_i_56_n_2 ;
  wire \i_reg[31]_i_56_n_3 ;
  wire \i_reg[31]_i_65_n_0 ;
  wire \i_reg[31]_i_65_n_1 ;
  wire \i_reg[31]_i_65_n_2 ;
  wire \i_reg[31]_i_65_n_3 ;
  wire \i_reg[31]_i_6_n_0 ;
  wire \i_reg[31]_i_6_n_1 ;
  wire \i_reg[31]_i_6_n_2 ;
  wire \i_reg[31]_i_6_n_3 ;
  wire \i_reg[31]_i_7_n_2 ;
  wire \i_reg[31]_i_7_n_3 ;
  wire \i_reg[31]_i_80_n_0 ;
  wire \i_reg[31]_i_80_n_1 ;
  wire \i_reg[31]_i_80_n_2 ;
  wire \i_reg[31]_i_80_n_3 ;
  wire \i_reg[31]_i_9_n_0 ;
  wire \i_reg[31]_i_9_n_1 ;
  wire \i_reg[31]_i_9_n_2 ;
  wire \i_reg[31]_i_9_n_3 ;
  wire \i_reg[4]_i_2_n_0 ;
  wire \i_reg[4]_i_2_n_1 ;
  wire \i_reg[4]_i_2_n_2 ;
  wire \i_reg[4]_i_2_n_3 ;
  wire \i_reg[8]_i_2_n_0 ;
  wire \i_reg[8]_i_2_n_1 ;
  wire \i_reg[8]_i_2_n_2 ;
  wire \i_reg[8]_i_2_n_3 ;
  wire [9:0]i_reg_rep__5;
  wire [9:0]k;
  wire \k[16]_i_3_n_0 ;
  wire \k[16]_i_4_n_0 ;
  wire \k[16]_i_5_n_0 ;
  wire \k[16]_i_6_n_0 ;
  wire \k[20]_i_3_n_0 ;
  wire \k[20]_i_4_n_0 ;
  wire \k[20]_i_5_n_0 ;
  wire \k[20]_i_6_n_0 ;
  wire \k[24]_i_3_n_0 ;
  wire \k[24]_i_4_n_0 ;
  wire \k[24]_i_5_n_0 ;
  wire \k[24]_i_6_n_0 ;
  wire \k[28]_i_3_n_0 ;
  wire \k[28]_i_4_n_0 ;
  wire \k[28]_i_5_n_0 ;
  wire \k[28]_i_6_n_0 ;
  wire \k[31]_i_3_n_0 ;
  wire \k[31]_i_4_n_0 ;
  wire \k[31]_i_5_n_0 ;
  wire [31:10]k__0;
  wire [31:0]k__1;
  wire \k_reg[16]_i_2_n_0 ;
  wire \k_reg[16]_i_2_n_1 ;
  wire \k_reg[16]_i_2_n_2 ;
  wire \k_reg[16]_i_2_n_3 ;
  wire \k_reg[20]_i_2_n_0 ;
  wire \k_reg[20]_i_2_n_1 ;
  wire \k_reg[20]_i_2_n_2 ;
  wire \k_reg[20]_i_2_n_3 ;
  wire \k_reg[24]_i_2_n_0 ;
  wire \k_reg[24]_i_2_n_1 ;
  wire \k_reg[24]_i_2_n_2 ;
  wire \k_reg[24]_i_2_n_3 ;
  wire \k_reg[28]_i_2_n_0 ;
  wire \k_reg[28]_i_2_n_1 ;
  wire \k_reg[28]_i_2_n_2 ;
  wire \k_reg[28]_i_2_n_3 ;
  wire \k_reg[31]_i_2_n_2 ;
  wire \k_reg[31]_i_2_n_3 ;
  wire \k_reg_rep[4]_i_2_n_0 ;
  wire \k_reg_rep[4]_i_2_n_1 ;
  wire \k_reg_rep[4]_i_2_n_2 ;
  wire \k_reg_rep[4]_i_2_n_3 ;
  wire \k_reg_rep[8]_i_2_n_0 ;
  wire \k_reg_rep[8]_i_2_n_1 ;
  wire \k_reg_rep[8]_i_2_n_2 ;
  wire \k_reg_rep[8]_i_2_n_3 ;
  wire \k_reg_rep[9]_i_7_n_0 ;
  wire \k_reg_rep[9]_i_7_n_1 ;
  wire \k_reg_rep[9]_i_7_n_2 ;
  wire \k_reg_rep[9]_i_7_n_3 ;
  wire [9:0]k_reg_rep__0;
  wire \k_rep[4]_i_3_n_0 ;
  wire \k_rep[4]_i_4_n_0 ;
  wire \k_rep[4]_i_5_n_0 ;
  wire \k_rep[4]_i_6_n_0 ;
  wire \k_rep[8]_i_3_n_0 ;
  wire \k_rep[8]_i_4_n_0 ;
  wire \k_rep[8]_i_5_n_0 ;
  wire \k_rep[8]_i_6_n_0 ;
  wire \k_rep[9]_i_10_n_0 ;
  wire \k_rep[9]_i_11_n_0 ;
  wire \k_rep[9]_i_4_n_0 ;
  wire \k_rep[9]_i_6_n_0 ;
  wire \k_rep[9]_i_8_n_0 ;
  wire \k_rep[9]_i_9_n_0 ;
  wire p_0_in;
  wire probabilities_tab_reg_i_10_n_0;
  wire probabilities_tab_reg_i_11_n_0;
  wire probabilities_tab_reg_i_12_n_0;
  wire probabilities_tab_reg_i_7_n_0;
  wire probabilities_tab_reg_i_8_n_0;
  wire probabilities_tab_reg_i_9_n_0;
  wire state;
  wire \state[1]_i_1__0_n_0 ;
  wire \state[1]_i_2_n_0 ;
  wire \state[2]_i_3_n_0 ;
  wire \state[2]_i_4_n_0 ;
  wire \state[3]_i_1__0_n_0 ;
  wire \state[4]_i_2_n_0 ;
  wire \state_reg_n_0_[0] ;
  wire \state_reg_n_0_[1] ;
  wire \state_reg_n_0_[2] ;
  wire \state_reg_n_0_[3] ;
  wire \state_reg_n_0_[4] ;
  wire [7:0]tree_codes;
  wire [7:0]tree_codes_length;
  wire tree_data_enable;
  wire tree_data_enable_i_1_n_0;
  wire tree_data_enable_i_2_n_0;
  wire tree_data_enable_i_3_n_0;
  wire tree_n_6;
  wire tree_n_8;
  wire tree_n_9;
  wire tree_probability_in;
  wire \tree_probability_in[10]_i_1_n_0 ;
  wire \tree_probability_in[10]_i_3_n_0 ;
  wire \tree_probability_in_reg_n_0_[10] ;
  wire \tree_probability_in_reg_n_0_[3] ;
  wire \tree_probability_in_reg_n_0_[4] ;
  wire \tree_probability_in_reg_n_0_[5] ;
  wire \tree_probability_in_reg_n_0_[7] ;
  wire \tree_probability_in_reg_n_0_[9] ;
  wire [5:5]tree_symbol_in;
  wire [5:5]tree_symbol_in0;
  wire [3:3]\NLW_bit_counter_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:0]NLW_decoded_out_data_ready_reg_i_12_O_UNCONNECTED;
  wire [3:0]NLW_decoded_out_data_ready_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_decoded_out_data_ready_reg_i_21_O_UNCONNECTED;
  wire [3:0]NLW_decoded_out_data_ready_reg_i_3_O_UNCONNECTED;
  wire [15:0]NLW_decoded_output_reg_DOADO_UNCONNECTED;
  wire [15:8]NLW_decoded_output_reg_DOBDO_UNCONNECTED;
  wire [1:0]NLW_decoded_output_reg_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_decoded_output_reg_DOPBDOP_UNCONNECTED;
  wire [3:3]\NLW_decoded_symbols_number_reg[28]_i_1_CO_UNCONNECTED ;
  wire [15:0]NLW_decoder_bit_input_reg_DOADO_UNCONNECTED;
  wire [15:1]NLW_decoder_bit_input_reg_DOBDO_UNCONNECTED;
  wire [1:0]NLW_decoder_bit_input_reg_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_decoder_bit_input_reg_DOPBDOP_UNCONNECTED;
  wire [3:0]NLW_decoder_bit_input_reg_i_15_O_UNCONNECTED;
  wire [3:0]NLW_decoder_bit_input_reg_i_24_O_UNCONNECTED;
  wire [3:0]NLW_decoder_bit_input_reg_i_33_O_UNCONNECTED;
  wire [3:0]NLW_decoder_bit_input_reg_i_4_O_UNCONNECTED;
  wire [3:0]NLW_decoder_bit_input_reg_i_42_O_UNCONNECTED;
  wire [3:0]NLW_decoder_bit_input_reg_i_5_O_UNCONNECTED;
  wire [3:0]NLW_decoder_bit_input_reg_i_51_O_UNCONNECTED;
  wire [3:0]NLW_decoder_bit_input_reg_i_6_O_UNCONNECTED;
  wire [3:0]\NLW_i_reg[31]_i_10_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_18_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_19_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_28_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_33_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_42_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_51_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_56_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_6_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_65_O_UNCONNECTED ;
  wire [3:2]\NLW_i_reg[31]_i_7_CO_UNCONNECTED ;
  wire [3:3]\NLW_i_reg[31]_i_7_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_80_O_UNCONNECTED ;
  wire [3:0]\NLW_i_reg[31]_i_9_O_UNCONNECTED ;
  wire [3:2]\NLW_k_reg[31]_i_2_CO_UNCONNECTED ;
  wire [3:3]\NLW_k_reg[31]_i_2_O_UNCONNECTED ;

initial begin
 $sdf_annotate("huffman_decoder_tb_time_synth.sdf",,,,"tool_control");
end
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \bit_counter[0]_i_1 
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(decoder_bit_input_reg_i_1_n_0),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[2] ),
        .I5(\state_reg_n_0_[4] ),
        .O(\bit_counter[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[0]_i_3 
       (.I0(bit_counter_reg[3]),
        .O(\bit_counter[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[0]_i_4 
       (.I0(bit_counter_reg[2]),
        .O(\bit_counter[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[0]_i_5 
       (.I0(bit_counter_reg[1]),
        .O(\bit_counter[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \bit_counter[0]_i_6 
       (.I0(bit_counter_reg[0]),
        .O(\bit_counter[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[12]_i_2 
       (.I0(bit_counter_reg__0[15]),
        .O(\bit_counter[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[12]_i_3 
       (.I0(bit_counter_reg__0[14]),
        .O(\bit_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[12]_i_4 
       (.I0(bit_counter_reg__0[13]),
        .O(\bit_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[12]_i_5 
       (.I0(bit_counter_reg__0[12]),
        .O(\bit_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[16]_i_2 
       (.I0(bit_counter_reg__0[19]),
        .O(\bit_counter[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[16]_i_3 
       (.I0(bit_counter_reg__0[18]),
        .O(\bit_counter[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[16]_i_4 
       (.I0(bit_counter_reg__0[17]),
        .O(\bit_counter[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[16]_i_5 
       (.I0(bit_counter_reg__0[16]),
        .O(\bit_counter[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[20]_i_2 
       (.I0(bit_counter_reg__0[23]),
        .O(\bit_counter[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[20]_i_3 
       (.I0(bit_counter_reg__0[22]),
        .O(\bit_counter[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[20]_i_4 
       (.I0(bit_counter_reg__0[21]),
        .O(\bit_counter[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[20]_i_5 
       (.I0(bit_counter_reg__0[20]),
        .O(\bit_counter[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[24]_i_2 
       (.I0(bit_counter_reg__0[27]),
        .O(\bit_counter[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[24]_i_3 
       (.I0(bit_counter_reg__0[26]),
        .O(\bit_counter[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[24]_i_4 
       (.I0(bit_counter_reg__0[25]),
        .O(\bit_counter[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[24]_i_5 
       (.I0(bit_counter_reg__0[24]),
        .O(\bit_counter[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[28]_i_2 
       (.I0(bit_counter_reg__0[31]),
        .O(\bit_counter[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[28]_i_3 
       (.I0(bit_counter_reg__0[30]),
        .O(\bit_counter[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[28]_i_4 
       (.I0(bit_counter_reg__0[29]),
        .O(\bit_counter[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[28]_i_5 
       (.I0(bit_counter_reg__0[28]),
        .O(\bit_counter[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[4]_i_2 
       (.I0(bit_counter_reg[7]),
        .O(\bit_counter[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[4]_i_3 
       (.I0(bit_counter_reg[6]),
        .O(\bit_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[4]_i_4 
       (.I0(bit_counter_reg[5]),
        .O(\bit_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[4]_i_5 
       (.I0(bit_counter_reg[4]),
        .O(\bit_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[8]_i_2 
       (.I0(bit_counter_reg__0[11]),
        .O(\bit_counter[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[8]_i_3 
       (.I0(bit_counter_reg__0[10]),
        .O(\bit_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[8]_i_4 
       (.I0(bit_counter_reg[9]),
        .O(\bit_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_counter[8]_i_5 
       (.I0(bit_counter_reg[8]),
        .O(\bit_counter[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[0]_i_2_n_7 ),
        .Q(bit_counter_reg[0]),
        .R(1'b0));
  CARRY4 \bit_counter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\bit_counter_reg[0]_i_2_n_0 ,\bit_counter_reg[0]_i_2_n_1 ,\bit_counter_reg[0]_i_2_n_2 ,\bit_counter_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\bit_counter_reg[0]_i_2_n_4 ,\bit_counter_reg[0]_i_2_n_5 ,\bit_counter_reg[0]_i_2_n_6 ,\bit_counter_reg[0]_i_2_n_7 }),
        .S({\bit_counter[0]_i_3_n_0 ,\bit_counter[0]_i_4_n_0 ,\bit_counter[0]_i_5_n_0 ,\bit_counter[0]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[8]_i_1_n_5 ),
        .Q(bit_counter_reg__0[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[8]_i_1_n_4 ),
        .Q(bit_counter_reg__0[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[12]_i_1_n_7 ),
        .Q(bit_counter_reg__0[12]),
        .R(1'b0));
  CARRY4 \bit_counter_reg[12]_i_1 
       (.CI(\bit_counter_reg[8]_i_1_n_0 ),
        .CO({\bit_counter_reg[12]_i_1_n_0 ,\bit_counter_reg[12]_i_1_n_1 ,\bit_counter_reg[12]_i_1_n_2 ,\bit_counter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\bit_counter_reg[12]_i_1_n_4 ,\bit_counter_reg[12]_i_1_n_5 ,\bit_counter_reg[12]_i_1_n_6 ,\bit_counter_reg[12]_i_1_n_7 }),
        .S({\bit_counter[12]_i_2_n_0 ,\bit_counter[12]_i_3_n_0 ,\bit_counter[12]_i_4_n_0 ,\bit_counter[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[12]_i_1_n_6 ),
        .Q(bit_counter_reg__0[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[12]_i_1_n_5 ),
        .Q(bit_counter_reg__0[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[12]_i_1_n_4 ),
        .Q(bit_counter_reg__0[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[16]_i_1_n_7 ),
        .Q(bit_counter_reg__0[16]),
        .R(1'b0));
  CARRY4 \bit_counter_reg[16]_i_1 
       (.CI(\bit_counter_reg[12]_i_1_n_0 ),
        .CO({\bit_counter_reg[16]_i_1_n_0 ,\bit_counter_reg[16]_i_1_n_1 ,\bit_counter_reg[16]_i_1_n_2 ,\bit_counter_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\bit_counter_reg[16]_i_1_n_4 ,\bit_counter_reg[16]_i_1_n_5 ,\bit_counter_reg[16]_i_1_n_6 ,\bit_counter_reg[16]_i_1_n_7 }),
        .S({\bit_counter[16]_i_2_n_0 ,\bit_counter[16]_i_3_n_0 ,\bit_counter[16]_i_4_n_0 ,\bit_counter[16]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[16]_i_1_n_6 ),
        .Q(bit_counter_reg__0[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[16]_i_1_n_5 ),
        .Q(bit_counter_reg__0[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[16]_i_1_n_4 ),
        .Q(bit_counter_reg__0[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[0]_i_2_n_6 ),
        .Q(bit_counter_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[20]_i_1_n_7 ),
        .Q(bit_counter_reg__0[20]),
        .R(1'b0));
  CARRY4 \bit_counter_reg[20]_i_1 
       (.CI(\bit_counter_reg[16]_i_1_n_0 ),
        .CO({\bit_counter_reg[20]_i_1_n_0 ,\bit_counter_reg[20]_i_1_n_1 ,\bit_counter_reg[20]_i_1_n_2 ,\bit_counter_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\bit_counter_reg[20]_i_1_n_4 ,\bit_counter_reg[20]_i_1_n_5 ,\bit_counter_reg[20]_i_1_n_6 ,\bit_counter_reg[20]_i_1_n_7 }),
        .S({\bit_counter[20]_i_2_n_0 ,\bit_counter[20]_i_3_n_0 ,\bit_counter[20]_i_4_n_0 ,\bit_counter[20]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[20]_i_1_n_6 ),
        .Q(bit_counter_reg__0[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[20]_i_1_n_5 ),
        .Q(bit_counter_reg__0[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[20]_i_1_n_4 ),
        .Q(bit_counter_reg__0[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[24]_i_1_n_7 ),
        .Q(bit_counter_reg__0[24]),
        .R(1'b0));
  CARRY4 \bit_counter_reg[24]_i_1 
       (.CI(\bit_counter_reg[20]_i_1_n_0 ),
        .CO({\bit_counter_reg[24]_i_1_n_0 ,\bit_counter_reg[24]_i_1_n_1 ,\bit_counter_reg[24]_i_1_n_2 ,\bit_counter_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\bit_counter_reg[24]_i_1_n_4 ,\bit_counter_reg[24]_i_1_n_5 ,\bit_counter_reg[24]_i_1_n_6 ,\bit_counter_reg[24]_i_1_n_7 }),
        .S({\bit_counter[24]_i_2_n_0 ,\bit_counter[24]_i_3_n_0 ,\bit_counter[24]_i_4_n_0 ,\bit_counter[24]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[24]_i_1_n_6 ),
        .Q(bit_counter_reg__0[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[24]_i_1_n_5 ),
        .Q(bit_counter_reg__0[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[24]_i_1_n_4 ),
        .Q(bit_counter_reg__0[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[28]_i_1_n_7 ),
        .Q(bit_counter_reg__0[28]),
        .R(1'b0));
  CARRY4 \bit_counter_reg[28]_i_1 
       (.CI(\bit_counter_reg[24]_i_1_n_0 ),
        .CO({\NLW_bit_counter_reg[28]_i_1_CO_UNCONNECTED [3],\bit_counter_reg[28]_i_1_n_1 ,\bit_counter_reg[28]_i_1_n_2 ,\bit_counter_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\bit_counter_reg[28]_i_1_n_4 ,\bit_counter_reg[28]_i_1_n_5 ,\bit_counter_reg[28]_i_1_n_6 ,\bit_counter_reg[28]_i_1_n_7 }),
        .S({\bit_counter[28]_i_2_n_0 ,\bit_counter[28]_i_3_n_0 ,\bit_counter[28]_i_4_n_0 ,\bit_counter[28]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[28]_i_1_n_6 ),
        .Q(bit_counter_reg__0[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[0]_i_2_n_5 ),
        .Q(bit_counter_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[28]_i_1_n_5 ),
        .Q(bit_counter_reg__0[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[28]_i_1_n_4 ),
        .Q(bit_counter_reg__0[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[0]_i_2_n_4 ),
        .Q(bit_counter_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[4]_i_1_n_7 ),
        .Q(bit_counter_reg[4]),
        .R(1'b0));
  CARRY4 \bit_counter_reg[4]_i_1 
       (.CI(\bit_counter_reg[0]_i_2_n_0 ),
        .CO({\bit_counter_reg[4]_i_1_n_0 ,\bit_counter_reg[4]_i_1_n_1 ,\bit_counter_reg[4]_i_1_n_2 ,\bit_counter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\bit_counter_reg[4]_i_1_n_4 ,\bit_counter_reg[4]_i_1_n_5 ,\bit_counter_reg[4]_i_1_n_6 ,\bit_counter_reg[4]_i_1_n_7 }),
        .S({\bit_counter[4]_i_2_n_0 ,\bit_counter[4]_i_3_n_0 ,\bit_counter[4]_i_4_n_0 ,\bit_counter[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[4]_i_1_n_6 ),
        .Q(bit_counter_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[4]_i_1_n_5 ),
        .Q(bit_counter_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[4]_i_1_n_4 ),
        .Q(bit_counter_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[8]_i_1_n_7 ),
        .Q(bit_counter_reg[8]),
        .R(1'b0));
  CARRY4 \bit_counter_reg[8]_i_1 
       (.CI(\bit_counter_reg[4]_i_1_n_0 ),
        .CO({\bit_counter_reg[8]_i_1_n_0 ,\bit_counter_reg[8]_i_1_n_1 ,\bit_counter_reg[8]_i_1_n_2 ,\bit_counter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\bit_counter_reg[8]_i_1_n_4 ,\bit_counter_reg[8]_i_1_n_5 ,\bit_counter_reg[8]_i_1_n_6 ,\bit_counter_reg[8]_i_1_n_7 }),
        .S({\bit_counter[8]_i_2_n_0 ,\bit_counter[8]_i_3_n_0 ,\bit_counter[8]_i_4_n_0 ,\bit_counter[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_counter_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_counter[0]_i_1_n_0 ),
        .D(\bit_counter_reg[8]_i_1_n_6 ),
        .Q(bit_counter_reg[9]),
        .R(1'b0));
  BUFG clock_IBUF_BUFG_inst
       (.I(clock_IBUF),
        .O(clock_IBUF_BUFG));
  IBUF clock_IBUF_inst
       (.I(clock),
        .O(clock_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    code_list_reg_i_10
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_8),
        .D(code_position0[2]),
        .Q(code_list_reg_i_10_n_0),
        .R(decoder_n_46));
  FDRE #(
    .INIT(1'b0)) 
    code_list_reg_i_11
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_8),
        .D(decoder_n_50),
        .Q(code_list_reg_i_11_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    code_list_reg_i_12
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_8),
        .D(decoder_n_51),
        .Q(code_list_reg_i_12_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    code_list_reg_i_7
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_8),
        .D(decoder_n_48),
        .Q(code_list_reg_i_7_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    code_list_reg_i_8
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_8),
        .D(decoder_n_49),
        .Q(code_list_reg_i_8_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    code_list_reg_i_9
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_8),
        .D(code_position0[3]),
        .Q(code_list_reg_i_9_n_0),
        .R(decoder_n_46));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_UNIQ_BASE_ coder_codes_tab_length_reg_0_15_0_0
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[0]),
        .O(coder_codes_tab_length_reg_0_15_0_0_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1654 coder_codes_tab_length_reg_0_15_0_0__0
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[0]),
        .O(coder_codes_tab_length_reg_0_15_0_0__0_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1655 coder_codes_tab_length_reg_0_15_0_0__1
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[1]),
        .O(coder_codes_tab_length_reg_0_15_0_0__1_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1656 coder_codes_tab_length_reg_0_15_0_0__10
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[5]),
        .O(coder_codes_tab_length_reg_0_15_0_0__10_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1657 coder_codes_tab_length_reg_0_15_0_0__11
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[6]),
        .O(coder_codes_tab_length_reg_0_15_0_0__11_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1658 coder_codes_tab_length_reg_0_15_0_0__12
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[6]),
        .O(coder_codes_tab_length_reg_0_15_0_0__12_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1659 coder_codes_tab_length_reg_0_15_0_0__13
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[7]),
        .O(coder_codes_tab_length_reg_0_15_0_0__13_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1660 coder_codes_tab_length_reg_0_15_0_0__14
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[7]),
        .O(coder_codes_tab_length_reg_0_15_0_0__14_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1661 coder_codes_tab_length_reg_0_15_0_0__2
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[1]),
        .O(coder_codes_tab_length_reg_0_15_0_0__2_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1662 coder_codes_tab_length_reg_0_15_0_0__3
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[2]),
        .O(coder_codes_tab_length_reg_0_15_0_0__3_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1663 coder_codes_tab_length_reg_0_15_0_0__4
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[2]),
        .O(coder_codes_tab_length_reg_0_15_0_0__4_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1664 coder_codes_tab_length_reg_0_15_0_0__5
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[3]),
        .O(coder_codes_tab_length_reg_0_15_0_0__5_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1665 coder_codes_tab_length_reg_0_15_0_0__6
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[3]),
        .O(coder_codes_tab_length_reg_0_15_0_0__6_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1666 coder_codes_tab_length_reg_0_15_0_0__7
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[4]),
        .O(coder_codes_tab_length_reg_0_15_0_0__7_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1667 coder_codes_tab_length_reg_0_15_0_0__8
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[4]),
        .O(coder_codes_tab_length_reg_0_15_0_0__8_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1668 coder_codes_tab_length_reg_0_15_0_0__9
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes_length[5]),
        .O(coder_codes_tab_length_reg_0_15_0_0__9_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1669 coder_codes_tab_length_reg_0_31_0_0
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes_length[0]),
        .O(coder_codes_tab_length_reg_0_31_0_0_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1670 coder_codes_tab_length_reg_0_31_0_0__0
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes_length[1]),
        .O(coder_codes_tab_length_reg_0_31_0_0__0_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1671 coder_codes_tab_length_reg_0_31_0_0__1
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes_length[2]),
        .O(coder_codes_tab_length_reg_0_31_0_0__1_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1672 coder_codes_tab_length_reg_0_31_0_0__2
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes_length[3]),
        .O(coder_codes_tab_length_reg_0_31_0_0__2_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1673 coder_codes_tab_length_reg_0_31_0_0__3
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes_length[4]),
        .O(coder_codes_tab_length_reg_0_31_0_0__3_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1674 coder_codes_tab_length_reg_0_31_0_0__4
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes_length[5]),
        .O(coder_codes_tab_length_reg_0_31_0_0__4_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1675 coder_codes_tab_length_reg_0_31_0_0__5
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes_length[6]),
        .O(coder_codes_tab_length_reg_0_31_0_0__5_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1676 coder_codes_tab_length_reg_0_31_0_0__6
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes_length[7]),
        .O(coder_codes_tab_length_reg_0_31_0_0__6_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1677 coder_codes_tab_reg_0_15_0_0
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[0]),
        .O(coder_codes_tab_reg_0_15_0_0_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1678 coder_codes_tab_reg_0_15_0_0__0
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[0]),
        .O(coder_codes_tab_reg_0_15_0_0__0_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h80)) 
    coder_codes_tab_reg_0_15_0_0__0_i_1
       (.I0(p_0_in),
        .I1(i[4]),
        .I2(i[5]),
        .O(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1679 coder_codes_tab_reg_0_15_0_0__1
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[1]),
        .O(coder_codes_tab_reg_0_15_0_0__1_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1680 coder_codes_tab_reg_0_15_0_0__10
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[5]),
        .O(coder_codes_tab_reg_0_15_0_0__10_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1681 coder_codes_tab_reg_0_15_0_0__11
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[6]),
        .O(coder_codes_tab_reg_0_15_0_0__11_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1682 coder_codes_tab_reg_0_15_0_0__12
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[6]),
        .O(coder_codes_tab_reg_0_15_0_0__12_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1683 coder_codes_tab_reg_0_15_0_0__13
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[7]),
        .O(coder_codes_tab_reg_0_15_0_0__13_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1684 coder_codes_tab_reg_0_15_0_0__14
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[7]),
        .O(coder_codes_tab_reg_0_15_0_0__14_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1685 coder_codes_tab_reg_0_15_0_0__2
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[1]),
        .O(coder_codes_tab_reg_0_15_0_0__2_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1686 coder_codes_tab_reg_0_15_0_0__3
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[2]),
        .O(coder_codes_tab_reg_0_15_0_0__3_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1687 coder_codes_tab_reg_0_15_0_0__4
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[2]),
        .O(coder_codes_tab_reg_0_15_0_0__4_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1688 coder_codes_tab_reg_0_15_0_0__5
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[3]),
        .O(coder_codes_tab_reg_0_15_0_0__5_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1689 coder_codes_tab_reg_0_15_0_0__6
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[3]),
        .O(coder_codes_tab_reg_0_15_0_0__6_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1690 coder_codes_tab_reg_0_15_0_0__7
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[4]),
        .O(coder_codes_tab_reg_0_15_0_0__7_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1691 coder_codes_tab_reg_0_15_0_0__8
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[4]),
        .O(coder_codes_tab_reg_0_15_0_0__8_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0__0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1S" *) 
  RAM32X1S_HD1692 coder_codes_tab_reg_0_15_0_0__9
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(1'b0),
        .D(tree_codes[5]),
        .O(coder_codes_tab_reg_0_15_0_0__9_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    coder_codes_tab_reg_0_15_0_0_i_1
       (.I0(i[4]),
        .I1(i[5]),
        .I2(p_0_in),
        .O(coder_codes_tab_reg_0_15_0_0_i_1_n_0));
  LUT5 #(
    .INIT(32'h00000040)) 
    coder_codes_tab_reg_0_15_0_0_i_2
       (.I0(\state_reg_n_0_[4] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[3] ),
        .O(p_0_in));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1693 coder_codes_tab_reg_0_31_0_0
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes[0]),
        .O(coder_codes_tab_reg_0_31_0_0_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1694 coder_codes_tab_reg_0_31_0_0__0
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes[1]),
        .O(coder_codes_tab_reg_0_31_0_0__0_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1695 coder_codes_tab_reg_0_31_0_0__1
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes[2]),
        .O(coder_codes_tab_reg_0_31_0_0__1_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1696 coder_codes_tab_reg_0_31_0_0__2
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes[3]),
        .O(coder_codes_tab_reg_0_31_0_0__2_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1697 coder_codes_tab_reg_0_31_0_0__3
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes[4]),
        .O(coder_codes_tab_reg_0_31_0_0__3_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1698 coder_codes_tab_reg_0_31_0_0__4
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes[5]),
        .O(coder_codes_tab_reg_0_31_0_0__4_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1699 coder_codes_tab_reg_0_31_0_0__5
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes[6]),
        .O(coder_codes_tab_reg_0_31_0_0__5_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  RAM32X1S_HD1700 coder_codes_tab_reg_0_31_0_0__6
       (.A0(i[0]),
        .A1(i[1]),
        .A2(i[2]),
        .A3(i[3]),
        .A4(i[4]),
        .D(tree_codes[7]),
        .O(coder_codes_tab_reg_0_31_0_0__6_n_0),
        .WCLK(clock_IBUF_BUFG),
        .WE(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    coder_codes_tab_reg_0_31_0_0_i_1
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[4] ),
        .I5(i[5]),
        .O(coder_codes_tab_reg_0_31_0_0_i_1_n_0));
  IBUF data_enable_IBUF_inst
       (.I(data_enable),
        .O(data_enable_IBUF));
  IBUF data_in_IBUF_inst
       (.I(data_in),
        .O(data_in_IBUF));
  IBUF \data_in_length_IBUF[0]_inst 
       (.I(data_in_length[0]),
        .O(data_in_length_IBUF[0]));
  IBUF \data_in_length_IBUF[10]_inst 
       (.I(data_in_length[10]),
        .O(data_in_length_IBUF[10]));
  IBUF \data_in_length_IBUF[11]_inst 
       (.I(data_in_length[11]),
        .O(data_in_length_IBUF[11]));
  IBUF \data_in_length_IBUF[12]_inst 
       (.I(data_in_length[12]),
        .O(data_in_length_IBUF[12]));
  IBUF \data_in_length_IBUF[13]_inst 
       (.I(data_in_length[13]),
        .O(data_in_length_IBUF[13]));
  IBUF \data_in_length_IBUF[14]_inst 
       (.I(data_in_length[14]),
        .O(data_in_length_IBUF[14]));
  IBUF \data_in_length_IBUF[15]_inst 
       (.I(data_in_length[15]),
        .O(data_in_length_IBUF[15]));
  IBUF \data_in_length_IBUF[16]_inst 
       (.I(data_in_length[16]),
        .O(data_in_length_IBUF[16]));
  IBUF \data_in_length_IBUF[17]_inst 
       (.I(data_in_length[17]),
        .O(data_in_length_IBUF[17]));
  IBUF \data_in_length_IBUF[18]_inst 
       (.I(data_in_length[18]),
        .O(data_in_length_IBUF[18]));
  IBUF \data_in_length_IBUF[19]_inst 
       (.I(data_in_length[19]),
        .O(data_in_length_IBUF[19]));
  IBUF \data_in_length_IBUF[1]_inst 
       (.I(data_in_length[1]),
        .O(data_in_length_IBUF[1]));
  IBUF \data_in_length_IBUF[20]_inst 
       (.I(data_in_length[20]),
        .O(data_in_length_IBUF[20]));
  IBUF \data_in_length_IBUF[21]_inst 
       (.I(data_in_length[21]),
        .O(data_in_length_IBUF[21]));
  IBUF \data_in_length_IBUF[22]_inst 
       (.I(data_in_length[22]),
        .O(data_in_length_IBUF[22]));
  IBUF \data_in_length_IBUF[23]_inst 
       (.I(data_in_length[23]),
        .O(data_in_length_IBUF[23]));
  IBUF \data_in_length_IBUF[24]_inst 
       (.I(data_in_length[24]),
        .O(data_in_length_IBUF[24]));
  IBUF \data_in_length_IBUF[25]_inst 
       (.I(data_in_length[25]),
        .O(data_in_length_IBUF[25]));
  IBUF \data_in_length_IBUF[26]_inst 
       (.I(data_in_length[26]),
        .O(data_in_length_IBUF[26]));
  IBUF \data_in_length_IBUF[27]_inst 
       (.I(data_in_length[27]),
        .O(data_in_length_IBUF[27]));
  IBUF \data_in_length_IBUF[28]_inst 
       (.I(data_in_length[28]),
        .O(data_in_length_IBUF[28]));
  IBUF \data_in_length_IBUF[29]_inst 
       (.I(data_in_length[29]),
        .O(data_in_length_IBUF[29]));
  IBUF \data_in_length_IBUF[2]_inst 
       (.I(data_in_length[2]),
        .O(data_in_length_IBUF[2]));
  IBUF \data_in_length_IBUF[30]_inst 
       (.I(data_in_length[30]),
        .O(data_in_length_IBUF[30]));
  IBUF \data_in_length_IBUF[31]_inst 
       (.I(data_in_length[31]),
        .O(data_in_length_IBUF[31]));
  IBUF \data_in_length_IBUF[3]_inst 
       (.I(data_in_length[3]),
        .O(data_in_length_IBUF[3]));
  IBUF \data_in_length_IBUF[4]_inst 
       (.I(data_in_length[4]),
        .O(data_in_length_IBUF[4]));
  IBUF \data_in_length_IBUF[5]_inst 
       (.I(data_in_length[5]),
        .O(data_in_length_IBUF[5]));
  IBUF \data_in_length_IBUF[6]_inst 
       (.I(data_in_length[6]),
        .O(data_in_length_IBUF[6]));
  IBUF \data_in_length_IBUF[7]_inst 
       (.I(data_in_length[7]),
        .O(data_in_length_IBUF[7]));
  IBUF \data_in_length_IBUF[8]_inst 
       (.I(data_in_length[8]),
        .O(data_in_length_IBUF[8]));
  IBUF \data_in_length_IBUF[9]_inst 
       (.I(data_in_length[9]),
        .O(data_in_length_IBUF[9]));
  OBUF \decoded_out_OBUF[0]_inst 
       (.I(decoded_out_OBUF[0]),
        .O(decoded_out[0]));
  OBUF \decoded_out_OBUF[1]_inst 
       (.I(decoded_out_OBUF[1]),
        .O(decoded_out[1]));
  OBUF \decoded_out_OBUF[2]_inst 
       (.I(decoded_out_OBUF[2]),
        .O(decoded_out[2]));
  OBUF \decoded_out_OBUF[3]_inst 
       (.I(decoded_out_OBUF[3]),
        .O(decoded_out[3]));
  OBUF \decoded_out_OBUF[4]_inst 
       (.I(decoded_out_OBUF[4]),
        .O(decoded_out[4]));
  OBUF \decoded_out_OBUF[5]_inst 
       (.I(decoded_out_OBUF[5]),
        .O(decoded_out[5]));
  OBUF \decoded_out_OBUF[6]_inst 
       (.I(decoded_out_OBUF[6]),
        .O(decoded_out[6]));
  OBUF \decoded_out_OBUF[7]_inst 
       (.I(decoded_out_OBUF[7]),
        .O(decoded_out[7]));
  OBUF decoded_out_data_ready_OBUF_inst
       (.I(decoded_out_data_ready_OBUF),
        .O(decoded_out_data_ready));
  LUT5 #(
    .INIT(32'h00000040)) 
    decoded_out_data_ready_i_1
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[4] ),
        .O(decoded_out_data_ready_i_1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_10
       (.I0(decoded_symbols_number_reg[26]),
        .I1(k__1[26]),
        .I2(decoded_symbols_number_reg[27]),
        .I3(k__1[27]),
        .O(decoded_out_data_ready_i_10_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_11
       (.I0(decoded_symbols_number_reg[24]),
        .I1(k__1[24]),
        .I2(decoded_symbols_number_reg[25]),
        .I3(k__1[25]),
        .O(decoded_out_data_ready_i_11_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_13
       (.I0(decoded_symbols_number_reg[22]),
        .I1(k__1[22]),
        .I2(k__1[23]),
        .I3(decoded_symbols_number_reg[23]),
        .O(decoded_out_data_ready_i_13_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_14
       (.I0(decoded_symbols_number_reg[20]),
        .I1(k__1[20]),
        .I2(k__1[21]),
        .I3(decoded_symbols_number_reg[21]),
        .O(decoded_out_data_ready_i_14_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_15
       (.I0(decoded_symbols_number_reg[18]),
        .I1(k__1[18]),
        .I2(k__1[19]),
        .I3(decoded_symbols_number_reg[19]),
        .O(decoded_out_data_ready_i_15_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_16
       (.I0(decoded_symbols_number_reg[16]),
        .I1(k__1[16]),
        .I2(k__1[17]),
        .I3(decoded_symbols_number_reg[17]),
        .O(decoded_out_data_ready_i_16_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_17
       (.I0(decoded_symbols_number_reg[22]),
        .I1(k__1[22]),
        .I2(decoded_symbols_number_reg[23]),
        .I3(k__1[23]),
        .O(decoded_out_data_ready_i_17_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_18
       (.I0(decoded_symbols_number_reg[20]),
        .I1(k__1[20]),
        .I2(decoded_symbols_number_reg[21]),
        .I3(k__1[21]),
        .O(decoded_out_data_ready_i_18_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_19
       (.I0(decoded_symbols_number_reg[18]),
        .I1(k__1[18]),
        .I2(decoded_symbols_number_reg[19]),
        .I3(k__1[19]),
        .O(decoded_out_data_ready_i_19_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_20
       (.I0(decoded_symbols_number_reg[16]),
        .I1(k__1[16]),
        .I2(decoded_symbols_number_reg[17]),
        .I3(k__1[17]),
        .O(decoded_out_data_ready_i_20_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_22
       (.I0(decoded_symbols_number_reg[14]),
        .I1(k__1[14]),
        .I2(k__1[15]),
        .I3(decoded_symbols_number_reg[15]),
        .O(decoded_out_data_ready_i_22_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_23
       (.I0(decoded_symbols_number_reg[12]),
        .I1(k__1[12]),
        .I2(k__1[13]),
        .I3(decoded_symbols_number_reg[13]),
        .O(decoded_out_data_ready_i_23_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_24
       (.I0(decoded_symbols_number_reg[10]),
        .I1(k__1[10]),
        .I2(k__1[11]),
        .I3(decoded_symbols_number_reg[11]),
        .O(decoded_out_data_ready_i_24_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_25
       (.I0(decoded_symbols_number_reg[8]),
        .I1(k__1[8]),
        .I2(k__1[9]),
        .I3(decoded_symbols_number_reg[9]),
        .O(decoded_out_data_ready_i_25_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_26
       (.I0(decoded_symbols_number_reg[14]),
        .I1(k__1[14]),
        .I2(decoded_symbols_number_reg[15]),
        .I3(k__1[15]),
        .O(decoded_out_data_ready_i_26_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_27
       (.I0(decoded_symbols_number_reg[12]),
        .I1(k__1[12]),
        .I2(decoded_symbols_number_reg[13]),
        .I3(k__1[13]),
        .O(decoded_out_data_ready_i_27_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_28
       (.I0(decoded_symbols_number_reg[10]),
        .I1(k__1[10]),
        .I2(decoded_symbols_number_reg[11]),
        .I3(k__1[11]),
        .O(decoded_out_data_ready_i_28_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_29
       (.I0(decoded_symbols_number_reg[8]),
        .I1(k__1[8]),
        .I2(decoded_symbols_number_reg[9]),
        .I3(k__1[9]),
        .O(decoded_out_data_ready_i_29_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_30
       (.I0(decoded_symbols_number_reg[6]),
        .I1(k__1[6]),
        .I2(k__1[7]),
        .I3(decoded_symbols_number_reg[7]),
        .O(decoded_out_data_ready_i_30_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_31
       (.I0(decoded_symbols_number_reg[4]),
        .I1(k__1[4]),
        .I2(k__1[5]),
        .I3(decoded_symbols_number_reg[5]),
        .O(decoded_out_data_ready_i_31_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_32
       (.I0(decoded_symbols_number_reg[2]),
        .I1(k__1[2]),
        .I2(k__1[3]),
        .I3(decoded_symbols_number_reg[3]),
        .O(decoded_out_data_ready_i_32_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_33
       (.I0(decoded_symbols_number_reg[0]),
        .I1(k__1[0]),
        .I2(k__1[1]),
        .I3(decoded_symbols_number_reg[1]),
        .O(decoded_out_data_ready_i_33_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_34
       (.I0(decoded_symbols_number_reg[6]),
        .I1(k__1[6]),
        .I2(decoded_symbols_number_reg[7]),
        .I3(k__1[7]),
        .O(decoded_out_data_ready_i_34_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_35
       (.I0(decoded_symbols_number_reg[4]),
        .I1(k__1[4]),
        .I2(decoded_symbols_number_reg[5]),
        .I3(k__1[5]),
        .O(decoded_out_data_ready_i_35_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_36
       (.I0(decoded_symbols_number_reg[2]),
        .I1(k__1[2]),
        .I2(decoded_symbols_number_reg[3]),
        .I3(k__1[3]),
        .O(decoded_out_data_ready_i_36_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_37
       (.I0(decoded_symbols_number_reg[0]),
        .I1(k__1[0]),
        .I2(decoded_symbols_number_reg[1]),
        .I3(k__1[1]),
        .O(decoded_out_data_ready_i_37_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_4
       (.I0(decoded_symbols_number_reg[30]),
        .I1(k__1[30]),
        .I2(decoded_symbols_number_reg[31]),
        .I3(k__1[31]),
        .O(decoded_out_data_ready_i_4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_5
       (.I0(decoded_symbols_number_reg[28]),
        .I1(k__1[28]),
        .I2(k__1[29]),
        .I3(decoded_symbols_number_reg[29]),
        .O(decoded_out_data_ready_i_5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_6
       (.I0(decoded_symbols_number_reg[26]),
        .I1(k__1[26]),
        .I2(k__1[27]),
        .I3(decoded_symbols_number_reg[27]),
        .O(decoded_out_data_ready_i_6_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoded_out_data_ready_i_7
       (.I0(decoded_symbols_number_reg[24]),
        .I1(k__1[24]),
        .I2(k__1[25]),
        .I3(decoded_symbols_number_reg[25]),
        .O(decoded_out_data_ready_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_8
       (.I0(decoded_symbols_number_reg[30]),
        .I1(k__1[30]),
        .I2(k__1[31]),
        .I3(decoded_symbols_number_reg[31]),
        .O(decoded_out_data_ready_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_out_data_ready_i_9
       (.I0(decoded_symbols_number_reg[28]),
        .I1(k__1[28]),
        .I2(decoded_symbols_number_reg[29]),
        .I3(k__1[29]),
        .O(decoded_out_data_ready_i_9_n_0));
  FDRE #(
    .INIT(1'b0)) 
    decoded_out_data_ready_reg
       (.C(clock_IBUF_BUFG),
        .CE(decoded_out_data_ready_i_1_n_0),
        .D(decoded_out_data_ready_reg_i_2_n_0),
        .Q(decoded_out_data_ready_OBUF),
        .R(1'b0));
  CARRY4 decoded_out_data_ready_reg_i_12
       (.CI(decoded_out_data_ready_reg_i_21_n_0),
        .CO({decoded_out_data_ready_reg_i_12_n_0,decoded_out_data_ready_reg_i_12_n_1,decoded_out_data_ready_reg_i_12_n_2,decoded_out_data_ready_reg_i_12_n_3}),
        .CYINIT(1'b0),
        .DI({decoded_out_data_ready_i_22_n_0,decoded_out_data_ready_i_23_n_0,decoded_out_data_ready_i_24_n_0,decoded_out_data_ready_i_25_n_0}),
        .O(NLW_decoded_out_data_ready_reg_i_12_O_UNCONNECTED[3:0]),
        .S({decoded_out_data_ready_i_26_n_0,decoded_out_data_ready_i_27_n_0,decoded_out_data_ready_i_28_n_0,decoded_out_data_ready_i_29_n_0}));
  CARRY4 decoded_out_data_ready_reg_i_2
       (.CI(decoded_out_data_ready_reg_i_3_n_0),
        .CO({decoded_out_data_ready_reg_i_2_n_0,decoded_out_data_ready_reg_i_2_n_1,decoded_out_data_ready_reg_i_2_n_2,decoded_out_data_ready_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({decoded_out_data_ready_i_4_n_0,decoded_out_data_ready_i_5_n_0,decoded_out_data_ready_i_6_n_0,decoded_out_data_ready_i_7_n_0}),
        .O(NLW_decoded_out_data_ready_reg_i_2_O_UNCONNECTED[3:0]),
        .S({decoded_out_data_ready_i_8_n_0,decoded_out_data_ready_i_9_n_0,decoded_out_data_ready_i_10_n_0,decoded_out_data_ready_i_11_n_0}));
  CARRY4 decoded_out_data_ready_reg_i_21
       (.CI(1'b0),
        .CO({decoded_out_data_ready_reg_i_21_n_0,decoded_out_data_ready_reg_i_21_n_1,decoded_out_data_ready_reg_i_21_n_2,decoded_out_data_ready_reg_i_21_n_3}),
        .CYINIT(1'b0),
        .DI({decoded_out_data_ready_i_30_n_0,decoded_out_data_ready_i_31_n_0,decoded_out_data_ready_i_32_n_0,decoded_out_data_ready_i_33_n_0}),
        .O(NLW_decoded_out_data_ready_reg_i_21_O_UNCONNECTED[3:0]),
        .S({decoded_out_data_ready_i_34_n_0,decoded_out_data_ready_i_35_n_0,decoded_out_data_ready_i_36_n_0,decoded_out_data_ready_i_37_n_0}));
  CARRY4 decoded_out_data_ready_reg_i_3
       (.CI(decoded_out_data_ready_reg_i_12_n_0),
        .CO({decoded_out_data_ready_reg_i_3_n_0,decoded_out_data_ready_reg_i_3_n_1,decoded_out_data_ready_reg_i_3_n_2,decoded_out_data_ready_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({decoded_out_data_ready_i_13_n_0,decoded_out_data_ready_i_14_n_0,decoded_out_data_ready_i_15_n_0,decoded_out_data_ready_i_16_n_0}),
        .O(NLW_decoded_out_data_ready_reg_i_3_O_UNCONNECTED[3:0]),
        .S({decoded_out_data_ready_i_17_n_0,decoded_out_data_ready_i_18_n_0,decoded_out_data_ready_i_19_n_0,decoded_out_data_ready_i_20_n_0}));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d8" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d8" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "8192" *) 
  (* RTL_RAM_NAME = "decoded_output" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "7" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    decoded_output_reg
       (.ADDRARDADDR({i[9:0],1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({k_reg_rep__0,1'b1,1'b1,1'b1,1'b1}),
        .CLKARDCLK(clock_IBUF_BUFG),
        .CLKBWRCLK(clock_IBUF_BUFG),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,decoder_decoded_number}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(NLW_decoded_output_reg_DOADO_UNCONNECTED[15:0]),
        .DOBDO({NLW_decoded_output_reg_DOBDO_UNCONNECTED[15:8],decoded_out_OBUF}),
        .DOPADOP(NLW_decoded_output_reg_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_decoded_output_reg_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(decoded_output_reg_i_1_n_0),
        .ENBWREN(decoded_output_reg_i_2_n_0),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  LUT5 #(
    .INIT(32'h00000010)) 
    decoded_output_reg_i_1
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[4] ),
        .O(decoded_output_reg_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    decoded_output_reg_i_2
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(decoded_out_data_ready_reg_i_2_n_0),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[4] ),
        .O(decoded_output_reg_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[0]_i_2 
       (.I0(decoded_symbols_number_reg[3]),
        .O(\decoded_symbols_number[0]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[0]_i_3 
       (.I0(decoded_symbols_number_reg[2]),
        .O(\decoded_symbols_number[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[0]_i_4 
       (.I0(decoded_symbols_number_reg[1]),
        .O(\decoded_symbols_number[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \decoded_symbols_number[0]_i_5 
       (.I0(decoded_symbols_number_reg[0]),
        .O(\decoded_symbols_number[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[12]_i_2 
       (.I0(decoded_symbols_number_reg[15]),
        .O(\decoded_symbols_number[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[12]_i_3 
       (.I0(decoded_symbols_number_reg[14]),
        .O(\decoded_symbols_number[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[12]_i_4 
       (.I0(decoded_symbols_number_reg[13]),
        .O(\decoded_symbols_number[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[12]_i_5 
       (.I0(decoded_symbols_number_reg[12]),
        .O(\decoded_symbols_number[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[16]_i_2 
       (.I0(decoded_symbols_number_reg[19]),
        .O(\decoded_symbols_number[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[16]_i_3 
       (.I0(decoded_symbols_number_reg[18]),
        .O(\decoded_symbols_number[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[16]_i_4 
       (.I0(decoded_symbols_number_reg[17]),
        .O(\decoded_symbols_number[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[16]_i_5 
       (.I0(decoded_symbols_number_reg[16]),
        .O(\decoded_symbols_number[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[20]_i_2 
       (.I0(decoded_symbols_number_reg[23]),
        .O(\decoded_symbols_number[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[20]_i_3 
       (.I0(decoded_symbols_number_reg[22]),
        .O(\decoded_symbols_number[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[20]_i_4 
       (.I0(decoded_symbols_number_reg[21]),
        .O(\decoded_symbols_number[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[20]_i_5 
       (.I0(decoded_symbols_number_reg[20]),
        .O(\decoded_symbols_number[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[24]_i_2 
       (.I0(decoded_symbols_number_reg[27]),
        .O(\decoded_symbols_number[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[24]_i_3 
       (.I0(decoded_symbols_number_reg[26]),
        .O(\decoded_symbols_number[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[24]_i_4 
       (.I0(decoded_symbols_number_reg[25]),
        .O(\decoded_symbols_number[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[24]_i_5 
       (.I0(decoded_symbols_number_reg[24]),
        .O(\decoded_symbols_number[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[28]_i_2 
       (.I0(decoded_symbols_number_reg[31]),
        .O(\decoded_symbols_number[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[28]_i_3 
       (.I0(decoded_symbols_number_reg[30]),
        .O(\decoded_symbols_number[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[28]_i_4 
       (.I0(decoded_symbols_number_reg[29]),
        .O(\decoded_symbols_number[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[28]_i_5 
       (.I0(decoded_symbols_number_reg[28]),
        .O(\decoded_symbols_number[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[4]_i_2 
       (.I0(decoded_symbols_number_reg[7]),
        .O(\decoded_symbols_number[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[4]_i_3 
       (.I0(decoded_symbols_number_reg[6]),
        .O(\decoded_symbols_number[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[4]_i_4 
       (.I0(decoded_symbols_number_reg[5]),
        .O(\decoded_symbols_number[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[4]_i_5 
       (.I0(decoded_symbols_number_reg[4]),
        .O(\decoded_symbols_number[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[8]_i_2 
       (.I0(decoded_symbols_number_reg[11]),
        .O(\decoded_symbols_number[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[8]_i_3 
       (.I0(decoded_symbols_number_reg[10]),
        .O(\decoded_symbols_number[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[8]_i_4 
       (.I0(decoded_symbols_number_reg[9]),
        .O(\decoded_symbols_number[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_symbols_number[8]_i_5 
       (.I0(decoded_symbols_number_reg[8]),
        .O(\decoded_symbols_number[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[0]_i_1_n_7 ),
        .Q(decoded_symbols_number_reg[0]),
        .R(1'b0));
  CARRY4 \decoded_symbols_number_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\decoded_symbols_number_reg[0]_i_1_n_0 ,\decoded_symbols_number_reg[0]_i_1_n_1 ,\decoded_symbols_number_reg[0]_i_1_n_2 ,\decoded_symbols_number_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\decoded_symbols_number_reg[0]_i_1_n_4 ,\decoded_symbols_number_reg[0]_i_1_n_5 ,\decoded_symbols_number_reg[0]_i_1_n_6 ,\decoded_symbols_number_reg[0]_i_1_n_7 }),
        .S({\decoded_symbols_number[0]_i_2_n_0 ,\decoded_symbols_number[0]_i_3_n_0 ,\decoded_symbols_number[0]_i_4_n_0 ,\decoded_symbols_number[0]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[8]_i_1_n_5 ),
        .Q(decoded_symbols_number_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[8]_i_1_n_4 ),
        .Q(decoded_symbols_number_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[12]_i_1_n_7 ),
        .Q(decoded_symbols_number_reg[12]),
        .R(1'b0));
  CARRY4 \decoded_symbols_number_reg[12]_i_1 
       (.CI(\decoded_symbols_number_reg[8]_i_1_n_0 ),
        .CO({\decoded_symbols_number_reg[12]_i_1_n_0 ,\decoded_symbols_number_reg[12]_i_1_n_1 ,\decoded_symbols_number_reg[12]_i_1_n_2 ,\decoded_symbols_number_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\decoded_symbols_number_reg[12]_i_1_n_4 ,\decoded_symbols_number_reg[12]_i_1_n_5 ,\decoded_symbols_number_reg[12]_i_1_n_6 ,\decoded_symbols_number_reg[12]_i_1_n_7 }),
        .S({\decoded_symbols_number[12]_i_2_n_0 ,\decoded_symbols_number[12]_i_3_n_0 ,\decoded_symbols_number[12]_i_4_n_0 ,\decoded_symbols_number[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[12]_i_1_n_6 ),
        .Q(decoded_symbols_number_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[12]_i_1_n_5 ),
        .Q(decoded_symbols_number_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[12]_i_1_n_4 ),
        .Q(decoded_symbols_number_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[16]_i_1_n_7 ),
        .Q(decoded_symbols_number_reg[16]),
        .R(1'b0));
  CARRY4 \decoded_symbols_number_reg[16]_i_1 
       (.CI(\decoded_symbols_number_reg[12]_i_1_n_0 ),
        .CO({\decoded_symbols_number_reg[16]_i_1_n_0 ,\decoded_symbols_number_reg[16]_i_1_n_1 ,\decoded_symbols_number_reg[16]_i_1_n_2 ,\decoded_symbols_number_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\decoded_symbols_number_reg[16]_i_1_n_4 ,\decoded_symbols_number_reg[16]_i_1_n_5 ,\decoded_symbols_number_reg[16]_i_1_n_6 ,\decoded_symbols_number_reg[16]_i_1_n_7 }),
        .S({\decoded_symbols_number[16]_i_2_n_0 ,\decoded_symbols_number[16]_i_3_n_0 ,\decoded_symbols_number[16]_i_4_n_0 ,\decoded_symbols_number[16]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[16]_i_1_n_6 ),
        .Q(decoded_symbols_number_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[16]_i_1_n_5 ),
        .Q(decoded_symbols_number_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[16]_i_1_n_4 ),
        .Q(decoded_symbols_number_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[0]_i_1_n_6 ),
        .Q(decoded_symbols_number_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[20]_i_1_n_7 ),
        .Q(decoded_symbols_number_reg[20]),
        .R(1'b0));
  CARRY4 \decoded_symbols_number_reg[20]_i_1 
       (.CI(\decoded_symbols_number_reg[16]_i_1_n_0 ),
        .CO({\decoded_symbols_number_reg[20]_i_1_n_0 ,\decoded_symbols_number_reg[20]_i_1_n_1 ,\decoded_symbols_number_reg[20]_i_1_n_2 ,\decoded_symbols_number_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\decoded_symbols_number_reg[20]_i_1_n_4 ,\decoded_symbols_number_reg[20]_i_1_n_5 ,\decoded_symbols_number_reg[20]_i_1_n_6 ,\decoded_symbols_number_reg[20]_i_1_n_7 }),
        .S({\decoded_symbols_number[20]_i_2_n_0 ,\decoded_symbols_number[20]_i_3_n_0 ,\decoded_symbols_number[20]_i_4_n_0 ,\decoded_symbols_number[20]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[20]_i_1_n_6 ),
        .Q(decoded_symbols_number_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[20]_i_1_n_5 ),
        .Q(decoded_symbols_number_reg[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[20]_i_1_n_4 ),
        .Q(decoded_symbols_number_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[24]_i_1_n_7 ),
        .Q(decoded_symbols_number_reg[24]),
        .R(1'b0));
  CARRY4 \decoded_symbols_number_reg[24]_i_1 
       (.CI(\decoded_symbols_number_reg[20]_i_1_n_0 ),
        .CO({\decoded_symbols_number_reg[24]_i_1_n_0 ,\decoded_symbols_number_reg[24]_i_1_n_1 ,\decoded_symbols_number_reg[24]_i_1_n_2 ,\decoded_symbols_number_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\decoded_symbols_number_reg[24]_i_1_n_4 ,\decoded_symbols_number_reg[24]_i_1_n_5 ,\decoded_symbols_number_reg[24]_i_1_n_6 ,\decoded_symbols_number_reg[24]_i_1_n_7 }),
        .S({\decoded_symbols_number[24]_i_2_n_0 ,\decoded_symbols_number[24]_i_3_n_0 ,\decoded_symbols_number[24]_i_4_n_0 ,\decoded_symbols_number[24]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[24]_i_1_n_6 ),
        .Q(decoded_symbols_number_reg[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[24]_i_1_n_5 ),
        .Q(decoded_symbols_number_reg[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[24]_i_1_n_4 ),
        .Q(decoded_symbols_number_reg[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[28]_i_1_n_7 ),
        .Q(decoded_symbols_number_reg[28]),
        .R(1'b0));
  CARRY4 \decoded_symbols_number_reg[28]_i_1 
       (.CI(\decoded_symbols_number_reg[24]_i_1_n_0 ),
        .CO({\NLW_decoded_symbols_number_reg[28]_i_1_CO_UNCONNECTED [3],\decoded_symbols_number_reg[28]_i_1_n_1 ,\decoded_symbols_number_reg[28]_i_1_n_2 ,\decoded_symbols_number_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\decoded_symbols_number_reg[28]_i_1_n_4 ,\decoded_symbols_number_reg[28]_i_1_n_5 ,\decoded_symbols_number_reg[28]_i_1_n_6 ,\decoded_symbols_number_reg[28]_i_1_n_7 }),
        .S({\decoded_symbols_number[28]_i_2_n_0 ,\decoded_symbols_number[28]_i_3_n_0 ,\decoded_symbols_number[28]_i_4_n_0 ,\decoded_symbols_number[28]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[28]_i_1_n_6 ),
        .Q(decoded_symbols_number_reg[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[0]_i_1_n_5 ),
        .Q(decoded_symbols_number_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[28]_i_1_n_5 ),
        .Q(decoded_symbols_number_reg[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[28]_i_1_n_4 ),
        .Q(decoded_symbols_number_reg[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[0]_i_1_n_4 ),
        .Q(decoded_symbols_number_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[4]_i_1_n_7 ),
        .Q(decoded_symbols_number_reg[4]),
        .R(1'b0));
  CARRY4 \decoded_symbols_number_reg[4]_i_1 
       (.CI(\decoded_symbols_number_reg[0]_i_1_n_0 ),
        .CO({\decoded_symbols_number_reg[4]_i_1_n_0 ,\decoded_symbols_number_reg[4]_i_1_n_1 ,\decoded_symbols_number_reg[4]_i_1_n_2 ,\decoded_symbols_number_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\decoded_symbols_number_reg[4]_i_1_n_4 ,\decoded_symbols_number_reg[4]_i_1_n_5 ,\decoded_symbols_number_reg[4]_i_1_n_6 ,\decoded_symbols_number_reg[4]_i_1_n_7 }),
        .S({\decoded_symbols_number[4]_i_2_n_0 ,\decoded_symbols_number[4]_i_3_n_0 ,\decoded_symbols_number[4]_i_4_n_0 ,\decoded_symbols_number[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[4]_i_1_n_6 ),
        .Q(decoded_symbols_number_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[4]_i_1_n_5 ),
        .Q(decoded_symbols_number_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[4]_i_1_n_4 ),
        .Q(decoded_symbols_number_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[8]_i_1_n_7 ),
        .Q(decoded_symbols_number_reg[8]),
        .R(1'b0));
  CARRY4 \decoded_symbols_number_reg[8]_i_1 
       (.CI(\decoded_symbols_number_reg[4]_i_1_n_0 ),
        .CO({\decoded_symbols_number_reg[8]_i_1_n_0 ,\decoded_symbols_number_reg[8]_i_1_n_1 ,\decoded_symbols_number_reg[8]_i_1_n_2 ,\decoded_symbols_number_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\decoded_symbols_number_reg[8]_i_1_n_4 ,\decoded_symbols_number_reg[8]_i_1_n_5 ,\decoded_symbols_number_reg[8]_i_1_n_6 ,\decoded_symbols_number_reg[8]_i_1_n_7 }),
        .S({\decoded_symbols_number[8]_i_2_n_0 ,\decoded_symbols_number[8]_i_3_n_0 ,\decoded_symbols_number[8]_i_4_n_0 ,\decoded_symbols_number[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_symbols_number_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(decoded_output_reg_i_1_n_0),
        .D(\decoded_symbols_number_reg[8]_i_1_n_6 ),
        .Q(decoded_symbols_number_reg[9]),
        .R(1'b0));
  raw_decoder decoder
       (.CO(\i_reg[31]_i_9_n_0 ),
        .D({k__0,k}),
        .DOBDO(decoder_decoded_number),
        .E(decoder_n_47),
        .O(code_position0),
        .Q(decoder_code_in),
        .ascii_symbols(\decoder_symbols_in_reg_n_0_[5] ),
        .clock_IBUF_BUFG(clock_IBUF_BUFG),
        .code_list_reg_i_10(code_list_reg_i_10_n_0),
        .code_list_reg_i_11(code_list_reg_i_11_n_0),
        .code_list_reg_i_12(code_list_reg_i_12_n_0),
        .code_list_reg_i_7(code_list_reg_i_7_n_0),
        .code_list_reg_i_8(code_list_reg_i_8_n_0),
        .code_list_reg_i_9(code_list_reg_i_9_n_0),
        .code_position0_in({decoder_n_48,decoder_n_49,decoder_n_50,decoder_n_51}),
        .\code_position_reg[0]_0 (decoder_n_8),
        .\code_position_reg[2]_0 (decoder_n_46),
        .data0(data0),
        .data_in(decoder_data_in),
        .\decoded_symbols_number_reg[30] (decoded_out_data_ready_reg_i_2_n_0),
        .\decoder_code_length_in_reg[7] (decoder_code_length_in),
        .decoder_data_enable_reg(decoder_data_enable_reg_n_0),
        .\decoder_data_length_in_reg[31] (decoder_data_length_in),
        .\i_reg[31]_0 (\i_reg[31]_i_6_n_0 ),
        .\i_reg_rep[0]_0 (decoder_n_11),
        .\k_reg[0] (k__1[0]),
        .\state_reg[1]_0 (\k_rep[9]_i_4_n_0 ),
        .\state_reg[1]_1 (\k_rep[9]_i_6_n_0 ),
        .\state_reg[2]_0 ({decoder_n_44,decoder_n_45}),
        .\state_reg[2]_1 (\state[2]_i_3_n_0 ),
        .\state_reg[2]_2 (\state[2]_i_4_n_0 ),
        .\state_reg[4] ({\state_reg_n_0_[4] ,\state_reg_n_0_[3] ,\state_reg_n_0_[2] ,\state_reg_n_0_[1] ,\state_reg_n_0_[0] }));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d1" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d1" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "1024" *) 
  (* RTL_RAM_NAME = "decoder_bit_input" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "0" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    decoder_bit_input_reg
       (.ADDRARDADDR({bit_counter_reg,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({i_reg_rep__5,1'b1,1'b1,1'b1,1'b1}),
        .CLKARDCLK(clock_IBUF_BUFG),
        .CLKBWRCLK(clock_IBUF_BUFG),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,data_in_IBUF}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(NLW_decoder_bit_input_reg_DOADO_UNCONNECTED[15:0]),
        .DOBDO({NLW_decoder_bit_input_reg_DOBDO_UNCONNECTED[15:1],decoder_data_in}),
        .DOPADOP(NLW_decoder_bit_input_reg_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_decoder_bit_input_reg_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(decoder_bit_input_reg_i_1_n_0),
        .ENBWREN(decoder_bit_input_reg_i_2_n_0),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({decoder_bit_input_reg_i_3_n_0,decoder_bit_input_reg_i_3_n_0}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  LUT2 #(
    .INIT(4'h8)) 
    decoder_bit_input_reg_i_1
       (.I0(decoder_bit_input_reg_i_4_n_0),
        .I1(data_enable_IBUF),
        .O(decoder_bit_input_reg_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_10
       (.I0(data_in_length_IBUF[24]),
        .I1(bit_counter_reg__0[24]),
        .I2(bit_counter_reg__0[25]),
        .I3(data_in_length_IBUF[25]),
        .O(decoder_bit_input_reg_i_10_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_11
       (.I0(data_in_length_IBUF[30]),
        .I1(bit_counter_reg__0[30]),
        .I2(data_in_length_IBUF[31]),
        .I3(bit_counter_reg__0[31]),
        .O(decoder_bit_input_reg_i_11_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_12
       (.I0(data_in_length_IBUF[28]),
        .I1(bit_counter_reg__0[28]),
        .I2(data_in_length_IBUF[29]),
        .I3(bit_counter_reg__0[29]),
        .O(decoder_bit_input_reg_i_12_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_13
       (.I0(data_in_length_IBUF[26]),
        .I1(bit_counter_reg__0[26]),
        .I2(data_in_length_IBUF[27]),
        .I3(bit_counter_reg__0[27]),
        .O(decoder_bit_input_reg_i_13_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_14
       (.I0(data_in_length_IBUF[24]),
        .I1(bit_counter_reg__0[24]),
        .I2(data_in_length_IBUF[25]),
        .I3(bit_counter_reg__0[25]),
        .O(decoder_bit_input_reg_i_14_n_0));
  CARRY4 decoder_bit_input_reg_i_15
       (.CI(decoder_bit_input_reg_i_33_n_0),
        .CO({decoder_bit_input_reg_i_15_n_0,decoder_bit_input_reg_i_15_n_1,decoder_bit_input_reg_i_15_n_2,decoder_bit_input_reg_i_15_n_3}),
        .CYINIT(1'b0),
        .DI({decoder_bit_input_reg_i_34_n_0,decoder_bit_input_reg_i_35_n_0,decoder_bit_input_reg_i_36_n_0,decoder_bit_input_reg_i_37_n_0}),
        .O(NLW_decoder_bit_input_reg_i_15_O_UNCONNECTED[3:0]),
        .S({decoder_bit_input_reg_i_38_n_0,decoder_bit_input_reg_i_39_n_0,decoder_bit_input_reg_i_40_n_0,decoder_bit_input_reg_i_41_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_16
       (.I0(bit_counter_reg__0[30]),
        .I1(i[30]),
        .I2(bit_counter_reg__0[31]),
        .I3(i[31]),
        .O(decoder_bit_input_reg_i_16_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_17
       (.I0(bit_counter_reg__0[28]),
        .I1(i[28]),
        .I2(i[29]),
        .I3(bit_counter_reg__0[29]),
        .O(decoder_bit_input_reg_i_17_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_18
       (.I0(bit_counter_reg__0[26]),
        .I1(i[26]),
        .I2(i[27]),
        .I3(bit_counter_reg__0[27]),
        .O(decoder_bit_input_reg_i_18_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_19
       (.I0(bit_counter_reg__0[24]),
        .I1(i[24]),
        .I2(i[25]),
        .I3(bit_counter_reg__0[25]),
        .O(decoder_bit_input_reg_i_19_n_0));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    decoder_bit_input_reg_i_2
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(decoder_bit_input_reg_i_5_n_0),
        .I4(\state_reg_n_0_[0] ),
        .I5(\state_reg_n_0_[4] ),
        .O(decoder_bit_input_reg_i_2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_20
       (.I0(bit_counter_reg__0[30]),
        .I1(i[30]),
        .I2(i[31]),
        .I3(bit_counter_reg__0[31]),
        .O(decoder_bit_input_reg_i_20_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_21
       (.I0(bit_counter_reg__0[28]),
        .I1(i[28]),
        .I2(bit_counter_reg__0[29]),
        .I3(i[29]),
        .O(decoder_bit_input_reg_i_21_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_22
       (.I0(bit_counter_reg__0[26]),
        .I1(i[26]),
        .I2(bit_counter_reg__0[27]),
        .I3(i[27]),
        .O(decoder_bit_input_reg_i_22_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_23
       (.I0(bit_counter_reg__0[24]),
        .I1(i[24]),
        .I2(bit_counter_reg__0[25]),
        .I3(i[25]),
        .O(decoder_bit_input_reg_i_23_n_0));
  CARRY4 decoder_bit_input_reg_i_24
       (.CI(decoder_bit_input_reg_i_42_n_0),
        .CO({decoder_bit_input_reg_i_24_n_0,decoder_bit_input_reg_i_24_n_1,decoder_bit_input_reg_i_24_n_2,decoder_bit_input_reg_i_24_n_3}),
        .CYINIT(1'b0),
        .DI({decoder_bit_input_reg_i_43_n_0,decoder_bit_input_reg_i_44_n_0,decoder_bit_input_reg_i_45_n_0,decoder_bit_input_reg_i_46_n_0}),
        .O(NLW_decoder_bit_input_reg_i_24_O_UNCONNECTED[3:0]),
        .S({decoder_bit_input_reg_i_47_n_0,decoder_bit_input_reg_i_48_n_0,decoder_bit_input_reg_i_49_n_0,decoder_bit_input_reg_i_50_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_25
       (.I0(data_in_length_IBUF[22]),
        .I1(bit_counter_reg__0[22]),
        .I2(bit_counter_reg__0[23]),
        .I3(data_in_length_IBUF[23]),
        .O(decoder_bit_input_reg_i_25_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_26
       (.I0(data_in_length_IBUF[20]),
        .I1(bit_counter_reg__0[20]),
        .I2(bit_counter_reg__0[21]),
        .I3(data_in_length_IBUF[21]),
        .O(decoder_bit_input_reg_i_26_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_27
       (.I0(data_in_length_IBUF[18]),
        .I1(bit_counter_reg__0[18]),
        .I2(bit_counter_reg__0[19]),
        .I3(data_in_length_IBUF[19]),
        .O(decoder_bit_input_reg_i_27_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_28
       (.I0(data_in_length_IBUF[16]),
        .I1(bit_counter_reg__0[16]),
        .I2(bit_counter_reg__0[17]),
        .I3(data_in_length_IBUF[17]),
        .O(decoder_bit_input_reg_i_28_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_29
       (.I0(data_in_length_IBUF[22]),
        .I1(bit_counter_reg__0[22]),
        .I2(data_in_length_IBUF[23]),
        .I3(bit_counter_reg__0[23]),
        .O(decoder_bit_input_reg_i_29_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    decoder_bit_input_reg_i_3
       (.I0(\state_reg_n_0_[4] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[3] ),
        .O(decoder_bit_input_reg_i_3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_30
       (.I0(data_in_length_IBUF[20]),
        .I1(bit_counter_reg__0[20]),
        .I2(data_in_length_IBUF[21]),
        .I3(bit_counter_reg__0[21]),
        .O(decoder_bit_input_reg_i_30_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_31
       (.I0(data_in_length_IBUF[18]),
        .I1(bit_counter_reg__0[18]),
        .I2(data_in_length_IBUF[19]),
        .I3(bit_counter_reg__0[19]),
        .O(decoder_bit_input_reg_i_31_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_32
       (.I0(data_in_length_IBUF[16]),
        .I1(bit_counter_reg__0[16]),
        .I2(data_in_length_IBUF[17]),
        .I3(bit_counter_reg__0[17]),
        .O(decoder_bit_input_reg_i_32_n_0));
  CARRY4 decoder_bit_input_reg_i_33
       (.CI(decoder_bit_input_reg_i_51_n_0),
        .CO({decoder_bit_input_reg_i_33_n_0,decoder_bit_input_reg_i_33_n_1,decoder_bit_input_reg_i_33_n_2,decoder_bit_input_reg_i_33_n_3}),
        .CYINIT(1'b0),
        .DI({decoder_bit_input_reg_i_52_n_0,decoder_bit_input_reg_i_53_n_0,decoder_bit_input_reg_i_54_n_0,decoder_bit_input_reg_i_55_n_0}),
        .O(NLW_decoder_bit_input_reg_i_33_O_UNCONNECTED[3:0]),
        .S({decoder_bit_input_reg_i_56_n_0,decoder_bit_input_reg_i_57_n_0,decoder_bit_input_reg_i_58_n_0,decoder_bit_input_reg_i_59_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_34
       (.I0(bit_counter_reg__0[22]),
        .I1(i[22]),
        .I2(i[23]),
        .I3(bit_counter_reg__0[23]),
        .O(decoder_bit_input_reg_i_34_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_35
       (.I0(bit_counter_reg__0[20]),
        .I1(i[20]),
        .I2(i[21]),
        .I3(bit_counter_reg__0[21]),
        .O(decoder_bit_input_reg_i_35_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_36
       (.I0(bit_counter_reg__0[18]),
        .I1(i[18]),
        .I2(i[19]),
        .I3(bit_counter_reg__0[19]),
        .O(decoder_bit_input_reg_i_36_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_37
       (.I0(bit_counter_reg__0[16]),
        .I1(i[16]),
        .I2(i[17]),
        .I3(bit_counter_reg__0[17]),
        .O(decoder_bit_input_reg_i_37_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_38
       (.I0(bit_counter_reg__0[22]),
        .I1(i[22]),
        .I2(bit_counter_reg__0[23]),
        .I3(i[23]),
        .O(decoder_bit_input_reg_i_38_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_39
       (.I0(bit_counter_reg__0[20]),
        .I1(i[20]),
        .I2(bit_counter_reg__0[21]),
        .I3(i[21]),
        .O(decoder_bit_input_reg_i_39_n_0));
  CARRY4 decoder_bit_input_reg_i_4
       (.CI(decoder_bit_input_reg_i_6_n_0),
        .CO({decoder_bit_input_reg_i_4_n_0,decoder_bit_input_reg_i_4_n_1,decoder_bit_input_reg_i_4_n_2,decoder_bit_input_reg_i_4_n_3}),
        .CYINIT(1'b0),
        .DI({decoder_bit_input_reg_i_7_n_0,decoder_bit_input_reg_i_8_n_0,decoder_bit_input_reg_i_9_n_0,decoder_bit_input_reg_i_10_n_0}),
        .O(NLW_decoder_bit_input_reg_i_4_O_UNCONNECTED[3:0]),
        .S({decoder_bit_input_reg_i_11_n_0,decoder_bit_input_reg_i_12_n_0,decoder_bit_input_reg_i_13_n_0,decoder_bit_input_reg_i_14_n_0}));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_40
       (.I0(bit_counter_reg__0[18]),
        .I1(i[18]),
        .I2(bit_counter_reg__0[19]),
        .I3(i[19]),
        .O(decoder_bit_input_reg_i_40_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_41
       (.I0(bit_counter_reg__0[16]),
        .I1(i[16]),
        .I2(bit_counter_reg__0[17]),
        .I3(i[17]),
        .O(decoder_bit_input_reg_i_41_n_0));
  CARRY4 decoder_bit_input_reg_i_42
       (.CI(1'b0),
        .CO({decoder_bit_input_reg_i_42_n_0,decoder_bit_input_reg_i_42_n_1,decoder_bit_input_reg_i_42_n_2,decoder_bit_input_reg_i_42_n_3}),
        .CYINIT(1'b0),
        .DI({decoder_bit_input_reg_i_60_n_0,decoder_bit_input_reg_i_61_n_0,decoder_bit_input_reg_i_62_n_0,decoder_bit_input_reg_i_63_n_0}),
        .O(NLW_decoder_bit_input_reg_i_42_O_UNCONNECTED[3:0]),
        .S({decoder_bit_input_reg_i_64_n_0,decoder_bit_input_reg_i_65_n_0,decoder_bit_input_reg_i_66_n_0,decoder_bit_input_reg_i_67_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_43
       (.I0(data_in_length_IBUF[14]),
        .I1(bit_counter_reg__0[14]),
        .I2(bit_counter_reg__0[15]),
        .I3(data_in_length_IBUF[15]),
        .O(decoder_bit_input_reg_i_43_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_44
       (.I0(data_in_length_IBUF[12]),
        .I1(bit_counter_reg__0[12]),
        .I2(bit_counter_reg__0[13]),
        .I3(data_in_length_IBUF[13]),
        .O(decoder_bit_input_reg_i_44_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_45
       (.I0(data_in_length_IBUF[10]),
        .I1(bit_counter_reg__0[10]),
        .I2(bit_counter_reg__0[11]),
        .I3(data_in_length_IBUF[11]),
        .O(decoder_bit_input_reg_i_45_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_46
       (.I0(data_in_length_IBUF[8]),
        .I1(bit_counter_reg[8]),
        .I2(bit_counter_reg[9]),
        .I3(data_in_length_IBUF[9]),
        .O(decoder_bit_input_reg_i_46_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_47
       (.I0(data_in_length_IBUF[14]),
        .I1(bit_counter_reg__0[14]),
        .I2(data_in_length_IBUF[15]),
        .I3(bit_counter_reg__0[15]),
        .O(decoder_bit_input_reg_i_47_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_48
       (.I0(data_in_length_IBUF[12]),
        .I1(bit_counter_reg__0[12]),
        .I2(data_in_length_IBUF[13]),
        .I3(bit_counter_reg__0[13]),
        .O(decoder_bit_input_reg_i_48_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_49
       (.I0(data_in_length_IBUF[10]),
        .I1(bit_counter_reg__0[10]),
        .I2(data_in_length_IBUF[11]),
        .I3(bit_counter_reg__0[11]),
        .O(decoder_bit_input_reg_i_49_n_0));
  CARRY4 decoder_bit_input_reg_i_5
       (.CI(decoder_bit_input_reg_i_15_n_0),
        .CO({decoder_bit_input_reg_i_5_n_0,decoder_bit_input_reg_i_5_n_1,decoder_bit_input_reg_i_5_n_2,decoder_bit_input_reg_i_5_n_3}),
        .CYINIT(1'b0),
        .DI({decoder_bit_input_reg_i_16_n_0,decoder_bit_input_reg_i_17_n_0,decoder_bit_input_reg_i_18_n_0,decoder_bit_input_reg_i_19_n_0}),
        .O(NLW_decoder_bit_input_reg_i_5_O_UNCONNECTED[3:0]),
        .S({decoder_bit_input_reg_i_20_n_0,decoder_bit_input_reg_i_21_n_0,decoder_bit_input_reg_i_22_n_0,decoder_bit_input_reg_i_23_n_0}));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_50
       (.I0(data_in_length_IBUF[8]),
        .I1(bit_counter_reg[8]),
        .I2(data_in_length_IBUF[9]),
        .I3(bit_counter_reg[9]),
        .O(decoder_bit_input_reg_i_50_n_0));
  CARRY4 decoder_bit_input_reg_i_51
       (.CI(1'b0),
        .CO({decoder_bit_input_reg_i_51_n_0,decoder_bit_input_reg_i_51_n_1,decoder_bit_input_reg_i_51_n_2,decoder_bit_input_reg_i_51_n_3}),
        .CYINIT(1'b0),
        .DI({decoder_bit_input_reg_i_68_n_0,decoder_bit_input_reg_i_69_n_0,decoder_bit_input_reg_i_70_n_0,decoder_bit_input_reg_i_71_n_0}),
        .O(NLW_decoder_bit_input_reg_i_51_O_UNCONNECTED[3:0]),
        .S({decoder_bit_input_reg_i_72_n_0,decoder_bit_input_reg_i_73_n_0,decoder_bit_input_reg_i_74_n_0,decoder_bit_input_reg_i_75_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_52
       (.I0(bit_counter_reg__0[14]),
        .I1(i[14]),
        .I2(i[15]),
        .I3(bit_counter_reg__0[15]),
        .O(decoder_bit_input_reg_i_52_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_53
       (.I0(bit_counter_reg__0[12]),
        .I1(i[12]),
        .I2(i[13]),
        .I3(bit_counter_reg__0[13]),
        .O(decoder_bit_input_reg_i_53_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_54
       (.I0(bit_counter_reg__0[10]),
        .I1(i[10]),
        .I2(i[11]),
        .I3(bit_counter_reg__0[11]),
        .O(decoder_bit_input_reg_i_54_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_55
       (.I0(bit_counter_reg[8]),
        .I1(i[8]),
        .I2(i[9]),
        .I3(bit_counter_reg[9]),
        .O(decoder_bit_input_reg_i_55_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_56
       (.I0(bit_counter_reg__0[14]),
        .I1(i[14]),
        .I2(bit_counter_reg__0[15]),
        .I3(i[15]),
        .O(decoder_bit_input_reg_i_56_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_57
       (.I0(bit_counter_reg__0[12]),
        .I1(i[12]),
        .I2(bit_counter_reg__0[13]),
        .I3(i[13]),
        .O(decoder_bit_input_reg_i_57_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_58
       (.I0(bit_counter_reg__0[10]),
        .I1(i[10]),
        .I2(bit_counter_reg__0[11]),
        .I3(i[11]),
        .O(decoder_bit_input_reg_i_58_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_59
       (.I0(bit_counter_reg[8]),
        .I1(i[8]),
        .I2(bit_counter_reg[9]),
        .I3(i[9]),
        .O(decoder_bit_input_reg_i_59_n_0));
  CARRY4 decoder_bit_input_reg_i_6
       (.CI(decoder_bit_input_reg_i_24_n_0),
        .CO({decoder_bit_input_reg_i_6_n_0,decoder_bit_input_reg_i_6_n_1,decoder_bit_input_reg_i_6_n_2,decoder_bit_input_reg_i_6_n_3}),
        .CYINIT(1'b0),
        .DI({decoder_bit_input_reg_i_25_n_0,decoder_bit_input_reg_i_26_n_0,decoder_bit_input_reg_i_27_n_0,decoder_bit_input_reg_i_28_n_0}),
        .O(NLW_decoder_bit_input_reg_i_6_O_UNCONNECTED[3:0]),
        .S({decoder_bit_input_reg_i_29_n_0,decoder_bit_input_reg_i_30_n_0,decoder_bit_input_reg_i_31_n_0,decoder_bit_input_reg_i_32_n_0}));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_60
       (.I0(data_in_length_IBUF[6]),
        .I1(bit_counter_reg[6]),
        .I2(bit_counter_reg[7]),
        .I3(data_in_length_IBUF[7]),
        .O(decoder_bit_input_reg_i_60_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_61
       (.I0(data_in_length_IBUF[4]),
        .I1(bit_counter_reg[4]),
        .I2(bit_counter_reg[5]),
        .I3(data_in_length_IBUF[5]),
        .O(decoder_bit_input_reg_i_61_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_62
       (.I0(data_in_length_IBUF[2]),
        .I1(bit_counter_reg[2]),
        .I2(bit_counter_reg[3]),
        .I3(data_in_length_IBUF[3]),
        .O(decoder_bit_input_reg_i_62_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_63
       (.I0(data_in_length_IBUF[0]),
        .I1(bit_counter_reg[0]),
        .I2(bit_counter_reg[1]),
        .I3(data_in_length_IBUF[1]),
        .O(decoder_bit_input_reg_i_63_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_64
       (.I0(data_in_length_IBUF[6]),
        .I1(bit_counter_reg[6]),
        .I2(data_in_length_IBUF[7]),
        .I3(bit_counter_reg[7]),
        .O(decoder_bit_input_reg_i_64_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_65
       (.I0(data_in_length_IBUF[4]),
        .I1(bit_counter_reg[4]),
        .I2(data_in_length_IBUF[5]),
        .I3(bit_counter_reg[5]),
        .O(decoder_bit_input_reg_i_65_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_66
       (.I0(data_in_length_IBUF[2]),
        .I1(bit_counter_reg[2]),
        .I2(data_in_length_IBUF[3]),
        .I3(bit_counter_reg[3]),
        .O(decoder_bit_input_reg_i_66_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_67
       (.I0(data_in_length_IBUF[0]),
        .I1(bit_counter_reg[0]),
        .I2(data_in_length_IBUF[1]),
        .I3(bit_counter_reg[1]),
        .O(decoder_bit_input_reg_i_67_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_68
       (.I0(bit_counter_reg[6]),
        .I1(i[6]),
        .I2(i[7]),
        .I3(bit_counter_reg[7]),
        .O(decoder_bit_input_reg_i_68_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_69
       (.I0(bit_counter_reg[4]),
        .I1(i[4]),
        .I2(i[5]),
        .I3(bit_counter_reg[5]),
        .O(decoder_bit_input_reg_i_69_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_7
       (.I0(data_in_length_IBUF[30]),
        .I1(bit_counter_reg__0[30]),
        .I2(bit_counter_reg__0[31]),
        .I3(data_in_length_IBUF[31]),
        .O(decoder_bit_input_reg_i_7_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_70
       (.I0(bit_counter_reg[2]),
        .I1(i[2]),
        .I2(i[3]),
        .I3(bit_counter_reg[3]),
        .O(decoder_bit_input_reg_i_70_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_71
       (.I0(bit_counter_reg[0]),
        .I1(i[0]),
        .I2(i[1]),
        .I3(bit_counter_reg[1]),
        .O(decoder_bit_input_reg_i_71_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_72
       (.I0(bit_counter_reg[6]),
        .I1(i[6]),
        .I2(bit_counter_reg[7]),
        .I3(i[7]),
        .O(decoder_bit_input_reg_i_72_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_73
       (.I0(bit_counter_reg[4]),
        .I1(i[4]),
        .I2(bit_counter_reg[5]),
        .I3(i[5]),
        .O(decoder_bit_input_reg_i_73_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_74
       (.I0(bit_counter_reg[2]),
        .I1(i[2]),
        .I2(bit_counter_reg[3]),
        .I3(i[3]),
        .O(decoder_bit_input_reg_i_74_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoder_bit_input_reg_i_75
       (.I0(bit_counter_reg[0]),
        .I1(i[0]),
        .I2(bit_counter_reg[1]),
        .I3(i[1]),
        .O(decoder_bit_input_reg_i_75_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_8
       (.I0(data_in_length_IBUF[28]),
        .I1(bit_counter_reg__0[28]),
        .I2(bit_counter_reg__0[29]),
        .I3(data_in_length_IBUF[29]),
        .O(decoder_bit_input_reg_i_8_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    decoder_bit_input_reg_i_9
       (.I0(data_in_length_IBUF[26]),
        .I1(bit_counter_reg__0[26]),
        .I2(bit_counter_reg__0[27]),
        .I3(data_in_length_IBUF[27]),
        .O(decoder_bit_input_reg_i_9_n_0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_in[0]_i_1 
       (.I0(coder_codes_tab_reg_0_15_0_0__0_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_reg_0_15_0_0_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_reg_0_31_0_0_n_0),
        .O(decoder_code_in0[0]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_in[1]_i_1 
       (.I0(coder_codes_tab_reg_0_15_0_0__2_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_reg_0_15_0_0__1_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_reg_0_31_0_0__0_n_0),
        .O(decoder_code_in0[1]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_in[2]_i_1 
       (.I0(coder_codes_tab_reg_0_15_0_0__4_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_reg_0_15_0_0__3_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_reg_0_31_0_0__1_n_0),
        .O(decoder_code_in0[2]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_in[3]_i_1 
       (.I0(coder_codes_tab_reg_0_15_0_0__6_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_reg_0_15_0_0__5_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_reg_0_31_0_0__2_n_0),
        .O(decoder_code_in0[3]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_in[4]_i_1 
       (.I0(coder_codes_tab_reg_0_15_0_0__8_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_reg_0_15_0_0__7_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_reg_0_31_0_0__3_n_0),
        .O(decoder_code_in0[4]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_in[5]_i_1 
       (.I0(coder_codes_tab_reg_0_15_0_0__10_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_reg_0_15_0_0__9_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_reg_0_31_0_0__4_n_0),
        .O(decoder_code_in0[5]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_in[6]_i_1 
       (.I0(coder_codes_tab_reg_0_15_0_0__12_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_reg_0_15_0_0__11_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_reg_0_31_0_0__5_n_0),
        .O(decoder_code_in0[6]));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \decoder_code_in[7]_i_1 
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\i_reg[31]_i_6_n_0 ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[4] ),
        .O(\decoder_code_in[7]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_in[7]_i_2 
       (.I0(coder_codes_tab_reg_0_15_0_0__14_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_reg_0_15_0_0__13_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_reg_0_31_0_0__6_n_0),
        .O(decoder_code_in0[7]));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_in_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_in0[0]),
        .Q(decoder_code_in[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_in_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_in0[1]),
        .Q(decoder_code_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_in_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_in0[2]),
        .Q(decoder_code_in[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_in_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_in0[3]),
        .Q(decoder_code_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_in_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_in0[4]),
        .Q(decoder_code_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_in_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_in0[5]),
        .Q(decoder_code_in[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_in_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_in0[6]),
        .Q(decoder_code_in[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_in_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_in0[7]),
        .Q(decoder_code_in[7]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_length_in[0]_i_1 
       (.I0(coder_codes_tab_length_reg_0_15_0_0__0_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_length_reg_0_15_0_0_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_length_reg_0_31_0_0_n_0),
        .O(decoder_code_length_in0[0]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_length_in[1]_i_1 
       (.I0(coder_codes_tab_length_reg_0_15_0_0__2_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_length_reg_0_15_0_0__1_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_length_reg_0_31_0_0__0_n_0),
        .O(decoder_code_length_in0[1]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_length_in[2]_i_1 
       (.I0(coder_codes_tab_length_reg_0_15_0_0__4_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_length_reg_0_15_0_0__3_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_length_reg_0_31_0_0__1_n_0),
        .O(decoder_code_length_in0[2]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_length_in[3]_i_1 
       (.I0(coder_codes_tab_length_reg_0_15_0_0__6_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_length_reg_0_15_0_0__5_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_length_reg_0_31_0_0__2_n_0),
        .O(decoder_code_length_in0[3]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_length_in[4]_i_1 
       (.I0(coder_codes_tab_length_reg_0_15_0_0__8_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_length_reg_0_15_0_0__7_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_length_reg_0_31_0_0__3_n_0),
        .O(decoder_code_length_in0[4]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_length_in[5]_i_1 
       (.I0(coder_codes_tab_length_reg_0_15_0_0__10_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_length_reg_0_15_0_0__9_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_length_reg_0_31_0_0__4_n_0),
        .O(decoder_code_length_in0[5]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_length_in[6]_i_1 
       (.I0(coder_codes_tab_length_reg_0_15_0_0__12_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_length_reg_0_15_0_0__11_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_length_reg_0_31_0_0__5_n_0),
        .O(decoder_code_length_in0[6]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \decoder_code_length_in[7]_i_1 
       (.I0(coder_codes_tab_length_reg_0_15_0_0__14_n_0),
        .I1(i[4]),
        .I2(coder_codes_tab_length_reg_0_15_0_0__13_n_0),
        .I3(i[5]),
        .I4(coder_codes_tab_length_reg_0_31_0_0__6_n_0),
        .O(decoder_code_length_in0[7]));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_length_in_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_length_in0[0]),
        .Q(decoder_code_length_in[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_length_in_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_length_in0[1]),
        .Q(decoder_code_length_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_length_in_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_length_in0[2]),
        .Q(decoder_code_length_in[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_length_in_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_length_in0[3]),
        .Q(decoder_code_length_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_length_in_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_length_in0[4]),
        .Q(decoder_code_length_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_length_in_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_length_in0[5]),
        .Q(decoder_code_length_in[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_length_in_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_length_in0[6]),
        .Q(decoder_code_length_in[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_code_length_in_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(decoder_code_length_in0[7]),
        .Q(decoder_code_length_in[7]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFF2800000028)) 
    decoder_data_enable_i_1
       (.I0(decoder_data_enable_i_2_n_0),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[4] ),
        .I3(\state_reg_n_0_[3] ),
        .I4(decoder_data_enable_i_3_n_0),
        .I5(decoder_data_enable_reg_n_0),
        .O(decoder_data_enable_i_1_n_0));
  LUT3 #(
    .INIT(8'h81)) 
    decoder_data_enable_i_2
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[1] ),
        .O(decoder_data_enable_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFCFFFC3FBC3FBF)) 
    decoder_data_enable_i_3
       (.I0(\i_reg[31]_i_6_n_0 ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(data_enable_IBUF),
        .I5(\state_reg_n_0_[4] ),
        .O(decoder_data_enable_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    decoder_data_enable_reg
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(decoder_data_enable_i_1_n_0),
        .Q(decoder_data_enable_reg_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \decoder_data_length_in[31]_i_1 
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\decoder_data_length_in[31]_i_2_n_0 ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[2] ),
        .I5(\state_reg_n_0_[4] ),
        .O(\decoder_data_length_in[31]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \decoder_data_length_in[31]_i_2 
       (.I0(data_enable_IBUF),
        .I1(decoder_bit_input_reg_i_4_n_0),
        .O(\decoder_data_length_in[31]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg[0]),
        .Q(decoder_data_length_in[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[10]),
        .Q(decoder_data_length_in[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[11]),
        .Q(decoder_data_length_in[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[12]),
        .Q(decoder_data_length_in[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[13]),
        .Q(decoder_data_length_in[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[14]),
        .Q(decoder_data_length_in[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[15]),
        .Q(decoder_data_length_in[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[16]),
        .Q(decoder_data_length_in[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[17]),
        .Q(decoder_data_length_in[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[18]),
        .Q(decoder_data_length_in[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[19]),
        .Q(decoder_data_length_in[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg[1]),
        .Q(decoder_data_length_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[20]),
        .Q(decoder_data_length_in[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[21]),
        .Q(decoder_data_length_in[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[22]),
        .Q(decoder_data_length_in[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[23]),
        .Q(decoder_data_length_in[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[24]),
        .Q(decoder_data_length_in[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[25]),
        .Q(decoder_data_length_in[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[26]),
        .Q(decoder_data_length_in[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[27]),
        .Q(decoder_data_length_in[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[28]),
        .Q(decoder_data_length_in[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[29]),
        .Q(decoder_data_length_in[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg[2]),
        .Q(decoder_data_length_in[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[30]),
        .Q(decoder_data_length_in[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg__0[31]),
        .Q(decoder_data_length_in[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg[3]),
        .Q(decoder_data_length_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg[4]),
        .Q(decoder_data_length_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg[5]),
        .Q(decoder_data_length_in[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg[6]),
        .Q(decoder_data_length_in[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg[7]),
        .Q(decoder_data_length_in[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg[8]),
        .Q(decoder_data_length_in[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_data_length_in_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_data_length_in[31]_i_1_n_0 ),
        .D(bit_counter_reg[9]),
        .Q(decoder_data_length_in[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    \decoder_symbols_in[5]_i_1 
       (.I0(i[2]),
        .I1(i[0]),
        .I2(i[5]),
        .I3(i[4]),
        .I4(i[1]),
        .I5(i[3]),
        .O(tree_symbol_in0));
  FDRE #(
    .INIT(1'b0)) 
    \decoder_symbols_in_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoder_code_in[7]_i_1_n_0 ),
        .D(tree_symbol_in0),
        .Q(\decoder_symbols_in_reg_n_0_[5] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h0D)) 
    \i[0]_i_1 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(i[0]),
        .O(\i[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[10]_i_1__0 
       (.I0(i0[10]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[10]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[11]_i_1__0 
       (.I0(i0[11]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[11]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[12]_i_1__0 
       (.I0(i0[12]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[12]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_3__1 
       (.I0(i[12]),
        .O(\i[12]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_4__1 
       (.I0(i[11]),
        .O(\i[12]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_5__1 
       (.I0(i[10]),
        .O(\i[12]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_6__0 
       (.I0(i[9]),
        .O(\i[12]_i_6__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[13]_i_1__0 
       (.I0(i0[13]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[13]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[14]_i_1__0 
       (.I0(i0[14]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[14]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[15]_i_1__0 
       (.I0(i0[15]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[15]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[16]_i_1__0 
       (.I0(i0[16]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[16]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_3__1 
       (.I0(i[16]),
        .O(\i[16]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_4__1 
       (.I0(i[15]),
        .O(\i[16]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_5__1 
       (.I0(i[14]),
        .O(\i[16]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_6__0 
       (.I0(i[13]),
        .O(\i[16]_i_6__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[17]_i_1__0 
       (.I0(i0[17]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[17]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[18]_i_1__0 
       (.I0(i0[18]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[18]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[19]_i_1__0 
       (.I0(i0[19]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[19]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[1]_i_1 
       (.I0(i0[1]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[20]_i_1__0 
       (.I0(i0[20]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[20]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_3__1 
       (.I0(i[20]),
        .O(\i[20]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_4__1 
       (.I0(i[19]),
        .O(\i[20]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_5__1 
       (.I0(i[18]),
        .O(\i[20]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_6__0 
       (.I0(i[17]),
        .O(\i[20]_i_6__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[21]_i_1__0 
       (.I0(i0[21]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[21]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[22]_i_1__0 
       (.I0(i0[22]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[22]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[23]_i_1__0 
       (.I0(i0[23]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[23]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[24]_i_1__0 
       (.I0(i0[24]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[24]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_3__1 
       (.I0(i[24]),
        .O(\i[24]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_4__1 
       (.I0(i[23]),
        .O(\i[24]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_5__1 
       (.I0(i[22]),
        .O(\i[24]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_6__0 
       (.I0(i[21]),
        .O(\i[24]_i_6__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[25]_i_1__0 
       (.I0(i0[25]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[25]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[26]_i_1__0 
       (.I0(i0[26]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[26]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[27]_i_1__0 
       (.I0(i0[27]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[27]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[28]_i_1__0 
       (.I0(i0[28]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[28]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_3__1 
       (.I0(i[28]),
        .O(\i[28]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_4__1 
       (.I0(i[27]),
        .O(\i[28]_i_4__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_5__1 
       (.I0(i[26]),
        .O(\i[28]_i_5__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_6__0 
       (.I0(i[25]),
        .O(\i[28]_i_6__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[29]_i_1__0 
       (.I0(i0[29]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[29]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[2]_i_1 
       (.I0(i0[2]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[30]_i_1__0 
       (.I0(i0[30]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[30]_i_1__0_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_100 
       (.I0(i[0]),
        .I1(i[1]),
        .O(\i[31]_i_100_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_101 
       (.I0(i[6]),
        .I1(i[7]),
        .O(\i[31]_i_101_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_102 
       (.I0(i[4]),
        .I1(i[5]),
        .O(\i[31]_i_102_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_103 
       (.I0(i[2]),
        .I1(i[3]),
        .O(\i[31]_i_103_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_104 
       (.I0(i[0]),
        .I1(i[1]),
        .O(\i[31]_i_104_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_11 
       (.I0(i[30]),
        .I1(i[31]),
        .O(\i[31]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_12 
       (.I0(i[28]),
        .I1(i[29]),
        .O(\i[31]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_13 
       (.I0(i[26]),
        .I1(i[27]),
        .O(\i[31]_i_13_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_14 
       (.I0(i[24]),
        .I1(i[25]),
        .O(\i[31]_i_14_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[31]_i_15 
       (.I0(i[31]),
        .O(\i[31]_i_15_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[31]_i_16 
       (.I0(i[30]),
        .O(\i[31]_i_16_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[31]_i_17 
       (.I0(i[29]),
        .O(\i[31]_i_17_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \i[31]_i_20 
       (.I0(decoded_symbols_number_reg[30]),
        .I1(decoded_symbols_number_reg[31]),
        .O(\i[31]_i_20_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_21 
       (.I0(decoded_symbols_number_reg[28]),
        .I1(decoded_symbols_number_reg[29]),
        .O(\i[31]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_22 
       (.I0(decoded_symbols_number_reg[26]),
        .I1(decoded_symbols_number_reg[27]),
        .O(\i[31]_i_22_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_23 
       (.I0(decoded_symbols_number_reg[24]),
        .I1(decoded_symbols_number_reg[25]),
        .O(\i[31]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_24 
       (.I0(decoded_symbols_number_reg[30]),
        .I1(decoded_symbols_number_reg[31]),
        .O(\i[31]_i_24_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_25 
       (.I0(decoded_symbols_number_reg[28]),
        .I1(decoded_symbols_number_reg[29]),
        .O(\i[31]_i_25_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_26 
       (.I0(decoded_symbols_number_reg[26]),
        .I1(decoded_symbols_number_reg[27]),
        .O(\i[31]_i_26_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_27 
       (.I0(decoded_symbols_number_reg[24]),
        .I1(decoded_symbols_number_reg[25]),
        .O(\i[31]_i_27_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_29 
       (.I0(i[22]),
        .I1(i[23]),
        .O(\i[31]_i_29_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[31]_i_3 
       (.I0(i0[31]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_30 
       (.I0(i[20]),
        .I1(i[21]),
        .O(\i[31]_i_30_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_31 
       (.I0(i[18]),
        .I1(i[19]),
        .O(\i[31]_i_31_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_32 
       (.I0(i[16]),
        .I1(i[17]),
        .O(\i[31]_i_32_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \i[31]_i_34 
       (.I0(i[30]),
        .I1(i[31]),
        .O(\i[31]_i_34_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_35 
       (.I0(i[28]),
        .I1(i[29]),
        .O(\i[31]_i_35_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_36 
       (.I0(i[26]),
        .I1(i[27]),
        .O(\i[31]_i_36_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_37 
       (.I0(i[24]),
        .I1(i[25]),
        .O(\i[31]_i_37_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_38 
       (.I0(i[30]),
        .I1(i[31]),
        .O(\i[31]_i_38_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_39 
       (.I0(i[28]),
        .I1(i[29]),
        .O(\i[31]_i_39_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_40 
       (.I0(i[26]),
        .I1(i[27]),
        .O(\i[31]_i_40_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_41 
       (.I0(i[24]),
        .I1(i[25]),
        .O(\i[31]_i_41_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_43 
       (.I0(decoded_symbols_number_reg[22]),
        .I1(decoded_symbols_number_reg[23]),
        .O(\i[31]_i_43_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_44 
       (.I0(decoded_symbols_number_reg[20]),
        .I1(decoded_symbols_number_reg[21]),
        .O(\i[31]_i_44_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_45 
       (.I0(decoded_symbols_number_reg[18]),
        .I1(decoded_symbols_number_reg[19]),
        .O(\i[31]_i_45_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_46 
       (.I0(decoded_symbols_number_reg[16]),
        .I1(decoded_symbols_number_reg[17]),
        .O(\i[31]_i_46_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_47 
       (.I0(decoded_symbols_number_reg[22]),
        .I1(decoded_symbols_number_reg[23]),
        .O(\i[31]_i_47_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_48 
       (.I0(decoded_symbols_number_reg[20]),
        .I1(decoded_symbols_number_reg[21]),
        .O(\i[31]_i_48_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_49 
       (.I0(decoded_symbols_number_reg[18]),
        .I1(decoded_symbols_number_reg[19]),
        .O(\i[31]_i_49_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_50 
       (.I0(decoded_symbols_number_reg[16]),
        .I1(decoded_symbols_number_reg[17]),
        .O(\i[31]_i_50_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_52 
       (.I0(i[14]),
        .I1(i[15]),
        .O(\i[31]_i_52_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_53 
       (.I0(i[12]),
        .I1(i[13]),
        .O(\i[31]_i_53_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_54 
       (.I0(i[10]),
        .I1(i[11]),
        .O(\i[31]_i_54_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_55 
       (.I0(i[8]),
        .I1(i[9]),
        .O(\i[31]_i_55_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_57 
       (.I0(i[22]),
        .I1(i[23]),
        .O(\i[31]_i_57_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_58 
       (.I0(i[20]),
        .I1(i[21]),
        .O(\i[31]_i_58_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_59 
       (.I0(i[18]),
        .I1(i[19]),
        .O(\i[31]_i_59_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_60 
       (.I0(i[16]),
        .I1(i[17]),
        .O(\i[31]_i_60_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_61 
       (.I0(i[22]),
        .I1(i[23]),
        .O(\i[31]_i_61_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_62 
       (.I0(i[20]),
        .I1(i[21]),
        .O(\i[31]_i_62_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_63 
       (.I0(i[18]),
        .I1(i[19]),
        .O(\i[31]_i_63_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_64 
       (.I0(i[16]),
        .I1(i[17]),
        .O(\i[31]_i_64_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_66 
       (.I0(decoded_symbols_number_reg[14]),
        .I1(decoded_symbols_number_reg[15]),
        .O(\i[31]_i_66_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_67 
       (.I0(decoded_symbols_number_reg[12]),
        .I1(decoded_symbols_number_reg[13]),
        .O(\i[31]_i_67_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_68 
       (.I0(decoded_symbols_number_reg[10]),
        .I1(decoded_symbols_number_reg[11]),
        .O(\i[31]_i_68_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_69 
       (.I0(decoded_symbols_number_reg[8]),
        .I1(decoded_symbols_number_reg[9]),
        .O(\i[31]_i_69_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_70 
       (.I0(decoded_symbols_number_reg[14]),
        .I1(decoded_symbols_number_reg[15]),
        .O(\i[31]_i_70_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_71 
       (.I0(decoded_symbols_number_reg[12]),
        .I1(decoded_symbols_number_reg[13]),
        .O(\i[31]_i_71_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_72 
       (.I0(decoded_symbols_number_reg[10]),
        .I1(decoded_symbols_number_reg[11]),
        .O(\i[31]_i_72_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_73 
       (.I0(decoded_symbols_number_reg[8]),
        .I1(decoded_symbols_number_reg[9]),
        .O(\i[31]_i_73_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \i[31]_i_74 
       (.I0(i[4]),
        .I1(i[5]),
        .O(\i[31]_i_74_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \i[31]_i_75 
       (.I0(i[1]),
        .O(\i[31]_i_75_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_76 
       (.I0(i[6]),
        .I1(i[7]),
        .O(\i[31]_i_76_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \i[31]_i_77 
       (.I0(i[4]),
        .I1(i[5]),
        .O(\i[31]_i_77_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_78 
       (.I0(i[2]),
        .I1(i[3]),
        .O(\i[31]_i_78_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \i[31]_i_79 
       (.I0(i[1]),
        .I1(i[0]),
        .O(\i[31]_i_79_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_81 
       (.I0(i[14]),
        .I1(i[15]),
        .O(\i[31]_i_81_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_82 
       (.I0(i[12]),
        .I1(i[13]),
        .O(\i[31]_i_82_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_83 
       (.I0(i[10]),
        .I1(i[11]),
        .O(\i[31]_i_83_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_84 
       (.I0(i[8]),
        .I1(i[9]),
        .O(\i[31]_i_84_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_85 
       (.I0(i[14]),
        .I1(i[15]),
        .O(\i[31]_i_85_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_86 
       (.I0(i[12]),
        .I1(i[13]),
        .O(\i[31]_i_86_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_87 
       (.I0(i[10]),
        .I1(i[11]),
        .O(\i[31]_i_87_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_88 
       (.I0(i[8]),
        .I1(i[9]),
        .O(\i[31]_i_88_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_89 
       (.I0(decoded_symbols_number_reg[6]),
        .I1(decoded_symbols_number_reg[7]),
        .O(\i[31]_i_89_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_90 
       (.I0(decoded_symbols_number_reg[4]),
        .I1(decoded_symbols_number_reg[5]),
        .O(\i[31]_i_90_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_91 
       (.I0(decoded_symbols_number_reg[2]),
        .I1(decoded_symbols_number_reg[3]),
        .O(\i[31]_i_91_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_92 
       (.I0(decoded_symbols_number_reg[0]),
        .I1(decoded_symbols_number_reg[1]),
        .O(\i[31]_i_92_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_93 
       (.I0(decoded_symbols_number_reg[6]),
        .I1(decoded_symbols_number_reg[7]),
        .O(\i[31]_i_93_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_94 
       (.I0(decoded_symbols_number_reg[4]),
        .I1(decoded_symbols_number_reg[5]),
        .O(\i[31]_i_94_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_95 
       (.I0(decoded_symbols_number_reg[2]),
        .I1(decoded_symbols_number_reg[3]),
        .O(\i[31]_i_95_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \i[31]_i_96 
       (.I0(decoded_symbols_number_reg[0]),
        .I1(decoded_symbols_number_reg[1]),
        .O(\i[31]_i_96_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_97 
       (.I0(i[6]),
        .I1(i[7]),
        .O(\i[31]_i_97_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_98 
       (.I0(i[4]),
        .I1(i[5]),
        .O(\i[31]_i_98_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i[31]_i_99 
       (.I0(i[2]),
        .I1(i[3]),
        .O(\i[31]_i_99_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[3]_i_1 
       (.I0(i0[3]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[3]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[4]_i_1 
       (.I0(i0[4]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[4]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[4]_i_3 
       (.I0(i[4]),
        .O(\i[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[4]_i_4 
       (.I0(i[3]),
        .O(\i[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[4]_i_5 
       (.I0(i[2]),
        .O(\i[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[4]_i_6 
       (.I0(i[1]),
        .O(\i[4]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[5]_i_1 
       (.I0(i0[5]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[5]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[6]_i_1 
       (.I0(i0[6]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[7]_i_1 
       (.I0(i0[7]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[7]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[8]_i_1__0 
       (.I0(i0[8]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[8]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[8]_i_3 
       (.I0(i[8]),
        .O(\i[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[8]_i_4 
       (.I0(i[7]),
        .O(\i[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[8]_i_5 
       (.I0(i[6]),
        .O(\i[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[8]_i_6 
       (.I0(i[5]),
        .O(\i[8]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hA2)) 
    \i[9]_i_1__0 
       (.I0(i0[9]),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .O(\i[9]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[0]_i_1_n_0 ),
        .Q(i[0]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[10]_i_1__0_n_0 ),
        .Q(i[10]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[11]_i_1__0_n_0 ),
        .Q(i[11]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[12]_i_1__0_n_0 ),
        .Q(i[12]),
        .R(tree_n_9));
  CARRY4 \i_reg[12]_i_2__0 
       (.CI(\i_reg[8]_i_2_n_0 ),
        .CO({\i_reg[12]_i_2__0_n_0 ,\i_reg[12]_i_2__0_n_1 ,\i_reg[12]_i_2__0_n_2 ,\i_reg[12]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[12:9]),
        .S({\i[12]_i_3__1_n_0 ,\i[12]_i_4__1_n_0 ,\i[12]_i_5__1_n_0 ,\i[12]_i_6__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[13]_i_1__0_n_0 ),
        .Q(i[13]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[14]_i_1__0_n_0 ),
        .Q(i[14]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[15]_i_1__0_n_0 ),
        .Q(i[15]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[16]_i_1__0_n_0 ),
        .Q(i[16]),
        .R(tree_n_9));
  CARRY4 \i_reg[16]_i_2__0 
       (.CI(\i_reg[12]_i_2__0_n_0 ),
        .CO({\i_reg[16]_i_2__0_n_0 ,\i_reg[16]_i_2__0_n_1 ,\i_reg[16]_i_2__0_n_2 ,\i_reg[16]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[16:13]),
        .S({\i[16]_i_3__1_n_0 ,\i[16]_i_4__1_n_0 ,\i[16]_i_5__1_n_0 ,\i[16]_i_6__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[17]_i_1__0_n_0 ),
        .Q(i[17]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[18]_i_1__0_n_0 ),
        .Q(i[18]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[19]_i_1__0_n_0 ),
        .Q(i[19]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[1]_i_1_n_0 ),
        .Q(i[1]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[20]_i_1__0_n_0 ),
        .Q(i[20]),
        .R(tree_n_9));
  CARRY4 \i_reg[20]_i_2__0 
       (.CI(\i_reg[16]_i_2__0_n_0 ),
        .CO({\i_reg[20]_i_2__0_n_0 ,\i_reg[20]_i_2__0_n_1 ,\i_reg[20]_i_2__0_n_2 ,\i_reg[20]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[20:17]),
        .S({\i[20]_i_3__1_n_0 ,\i[20]_i_4__1_n_0 ,\i[20]_i_5__1_n_0 ,\i[20]_i_6__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[21]_i_1__0_n_0 ),
        .Q(i[21]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[22]_i_1__0_n_0 ),
        .Q(i[22]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[23]_i_1__0_n_0 ),
        .Q(i[23]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[24]_i_1__0_n_0 ),
        .Q(i[24]),
        .R(tree_n_9));
  CARRY4 \i_reg[24]_i_2__0 
       (.CI(\i_reg[20]_i_2__0_n_0 ),
        .CO({\i_reg[24]_i_2__0_n_0 ,\i_reg[24]_i_2__0_n_1 ,\i_reg[24]_i_2__0_n_2 ,\i_reg[24]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[24:21]),
        .S({\i[24]_i_3__1_n_0 ,\i[24]_i_4__1_n_0 ,\i[24]_i_5__1_n_0 ,\i[24]_i_6__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[25]_i_1__0_n_0 ),
        .Q(i[25]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[26]_i_1__0_n_0 ),
        .Q(i[26]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[27]_i_1__0_n_0 ),
        .Q(i[27]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[28]_i_1__0_n_0 ),
        .Q(i[28]),
        .R(tree_n_9));
  CARRY4 \i_reg[28]_i_2__0 
       (.CI(\i_reg[24]_i_2__0_n_0 ),
        .CO({\i_reg[28]_i_2__0_n_0 ,\i_reg[28]_i_2__0_n_1 ,\i_reg[28]_i_2__0_n_2 ,\i_reg[28]_i_2__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[28:25]),
        .S({\i[28]_i_3__1_n_0 ,\i[28]_i_4__1_n_0 ,\i[28]_i_5__1_n_0 ,\i[28]_i_6__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[29]_i_1__0_n_0 ),
        .Q(i[29]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[2]_i_1_n_0 ),
        .Q(i[2]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[30]_i_1__0_n_0 ),
        .Q(i[30]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[31]_i_3_n_0 ),
        .Q(i[31]),
        .R(tree_n_9));
  CARRY4 \i_reg[31]_i_10 
       (.CI(\i_reg[31]_i_28_n_0 ),
        .CO({\i_reg[31]_i_10_n_0 ,\i_reg[31]_i_10_n_1 ,\i_reg[31]_i_10_n_2 ,\i_reg[31]_i_10_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_i_reg[31]_i_10_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_29_n_0 ,\i[31]_i_30_n_0 ,\i[31]_i_31_n_0 ,\i[31]_i_32_n_0 }));
  CARRY4 \i_reg[31]_i_18 
       (.CI(\i_reg[31]_i_33_n_0 ),
        .CO({\i_reg[31]_i_18_n_0 ,\i_reg[31]_i_18_n_1 ,\i_reg[31]_i_18_n_2 ,\i_reg[31]_i_18_n_3 }),
        .CYINIT(1'b0),
        .DI({\i[31]_i_34_n_0 ,\i[31]_i_35_n_0 ,\i[31]_i_36_n_0 ,\i[31]_i_37_n_0 }),
        .O(\NLW_i_reg[31]_i_18_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_38_n_0 ,\i[31]_i_39_n_0 ,\i[31]_i_40_n_0 ,\i[31]_i_41_n_0 }));
  CARRY4 \i_reg[31]_i_19 
       (.CI(\i_reg[31]_i_42_n_0 ),
        .CO({\i_reg[31]_i_19_n_0 ,\i_reg[31]_i_19_n_1 ,\i_reg[31]_i_19_n_2 ,\i_reg[31]_i_19_n_3 }),
        .CYINIT(1'b0),
        .DI({\i[31]_i_43_n_0 ,\i[31]_i_44_n_0 ,\i[31]_i_45_n_0 ,\i[31]_i_46_n_0 }),
        .O(\NLW_i_reg[31]_i_19_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_47_n_0 ,\i[31]_i_48_n_0 ,\i[31]_i_49_n_0 ,\i[31]_i_50_n_0 }));
  CARRY4 \i_reg[31]_i_28 
       (.CI(\i_reg[31]_i_51_n_0 ),
        .CO({\i_reg[31]_i_28_n_0 ,\i_reg[31]_i_28_n_1 ,\i_reg[31]_i_28_n_2 ,\i_reg[31]_i_28_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_i_reg[31]_i_28_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_52_n_0 ,\i[31]_i_53_n_0 ,\i[31]_i_54_n_0 ,\i[31]_i_55_n_0 }));
  CARRY4 \i_reg[31]_i_33 
       (.CI(\i_reg[31]_i_56_n_0 ),
        .CO({\i_reg[31]_i_33_n_0 ,\i_reg[31]_i_33_n_1 ,\i_reg[31]_i_33_n_2 ,\i_reg[31]_i_33_n_3 }),
        .CYINIT(1'b0),
        .DI({\i[31]_i_57_n_0 ,\i[31]_i_58_n_0 ,\i[31]_i_59_n_0 ,\i[31]_i_60_n_0 }),
        .O(\NLW_i_reg[31]_i_33_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_61_n_0 ,\i[31]_i_62_n_0 ,\i[31]_i_63_n_0 ,\i[31]_i_64_n_0 }));
  CARRY4 \i_reg[31]_i_42 
       (.CI(\i_reg[31]_i_65_n_0 ),
        .CO({\i_reg[31]_i_42_n_0 ,\i_reg[31]_i_42_n_1 ,\i_reg[31]_i_42_n_2 ,\i_reg[31]_i_42_n_3 }),
        .CYINIT(1'b0),
        .DI({\i[31]_i_66_n_0 ,\i[31]_i_67_n_0 ,\i[31]_i_68_n_0 ,\i[31]_i_69_n_0 }),
        .O(\NLW_i_reg[31]_i_42_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_70_n_0 ,\i[31]_i_71_n_0 ,\i[31]_i_72_n_0 ,\i[31]_i_73_n_0 }));
  CARRY4 \i_reg[31]_i_51 
       (.CI(1'b0),
        .CO({\i_reg[31]_i_51_n_0 ,\i_reg[31]_i_51_n_1 ,\i_reg[31]_i_51_n_2 ,\i_reg[31]_i_51_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\i[31]_i_74_n_0 ,1'b0,\i[31]_i_75_n_0 }),
        .O(\NLW_i_reg[31]_i_51_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_76_n_0 ,\i[31]_i_77_n_0 ,\i[31]_i_78_n_0 ,\i[31]_i_79_n_0 }));
  CARRY4 \i_reg[31]_i_56 
       (.CI(\i_reg[31]_i_80_n_0 ),
        .CO({\i_reg[31]_i_56_n_0 ,\i_reg[31]_i_56_n_1 ,\i_reg[31]_i_56_n_2 ,\i_reg[31]_i_56_n_3 }),
        .CYINIT(1'b0),
        .DI({\i[31]_i_81_n_0 ,\i[31]_i_82_n_0 ,\i[31]_i_83_n_0 ,\i[31]_i_84_n_0 }),
        .O(\NLW_i_reg[31]_i_56_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_85_n_0 ,\i[31]_i_86_n_0 ,\i[31]_i_87_n_0 ,\i[31]_i_88_n_0 }));
  CARRY4 \i_reg[31]_i_6 
       (.CI(\i_reg[31]_i_10_n_0 ),
        .CO({\i_reg[31]_i_6_n_0 ,\i_reg[31]_i_6_n_1 ,\i_reg[31]_i_6_n_2 ,\i_reg[31]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({i[31],1'b0,1'b0,1'b0}),
        .O(\NLW_i_reg[31]_i_6_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_11_n_0 ,\i[31]_i_12_n_0 ,\i[31]_i_13_n_0 ,\i[31]_i_14_n_0 }));
  CARRY4 \i_reg[31]_i_65 
       (.CI(1'b0),
        .CO({\i_reg[31]_i_65_n_0 ,\i_reg[31]_i_65_n_1 ,\i_reg[31]_i_65_n_2 ,\i_reg[31]_i_65_n_3 }),
        .CYINIT(1'b0),
        .DI({\i[31]_i_89_n_0 ,\i[31]_i_90_n_0 ,\i[31]_i_91_n_0 ,\i[31]_i_92_n_0 }),
        .O(\NLW_i_reg[31]_i_65_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_93_n_0 ,\i[31]_i_94_n_0 ,\i[31]_i_95_n_0 ,\i[31]_i_96_n_0 }));
  CARRY4 \i_reg[31]_i_7 
       (.CI(\i_reg[28]_i_2__0_n_0 ),
        .CO({\NLW_i_reg[31]_i_7_CO_UNCONNECTED [3:2],\i_reg[31]_i_7_n_2 ,\i_reg[31]_i_7_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_i_reg[31]_i_7_O_UNCONNECTED [3],i0[31:29]}),
        .S({1'b0,\i[31]_i_15_n_0 ,\i[31]_i_16_n_0 ,\i[31]_i_17_n_0 }));
  CARRY4 \i_reg[31]_i_80 
       (.CI(1'b0),
        .CO({\i_reg[31]_i_80_n_0 ,\i_reg[31]_i_80_n_1 ,\i_reg[31]_i_80_n_2 ,\i_reg[31]_i_80_n_3 }),
        .CYINIT(1'b0),
        .DI({\i[31]_i_97_n_0 ,\i[31]_i_98_n_0 ,\i[31]_i_99_n_0 ,\i[31]_i_100_n_0 }),
        .O(\NLW_i_reg[31]_i_80_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_101_n_0 ,\i[31]_i_102_n_0 ,\i[31]_i_103_n_0 ,\i[31]_i_104_n_0 }));
  CARRY4 \i_reg[31]_i_9 
       (.CI(\i_reg[31]_i_19_n_0 ),
        .CO({\i_reg[31]_i_9_n_0 ,\i_reg[31]_i_9_n_1 ,\i_reg[31]_i_9_n_2 ,\i_reg[31]_i_9_n_3 }),
        .CYINIT(1'b0),
        .DI({\i[31]_i_20_n_0 ,\i[31]_i_21_n_0 ,\i[31]_i_22_n_0 ,\i[31]_i_23_n_0 }),
        .O(\NLW_i_reg[31]_i_9_O_UNCONNECTED [3:0]),
        .S({\i[31]_i_24_n_0 ,\i[31]_i_25_n_0 ,\i[31]_i_26_n_0 ,\i[31]_i_27_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[3]_i_1_n_0 ),
        .Q(i[3]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[4]_i_1_n_0 ),
        .Q(i[4]),
        .R(tree_n_9));
  CARRY4 \i_reg[4]_i_2 
       (.CI(1'b0),
        .CO({\i_reg[4]_i_2_n_0 ,\i_reg[4]_i_2_n_1 ,\i_reg[4]_i_2_n_2 ,\i_reg[4]_i_2_n_3 }),
        .CYINIT(i[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[4:1]),
        .S({\i[4]_i_3_n_0 ,\i[4]_i_4_n_0 ,\i[4]_i_5_n_0 ,\i[4]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[5]_i_1_n_0 ),
        .Q(i[5]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[6]_i_1_n_0 ),
        .Q(i[6]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[7]_i_1_n_0 ),
        .Q(i[7]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[8]_i_1__0_n_0 ),
        .Q(i[8]),
        .R(tree_n_9));
  CARRY4 \i_reg[8]_i_2 
       (.CI(\i_reg[4]_i_2_n_0 ),
        .CO({\i_reg[8]_i_2_n_0 ,\i_reg[8]_i_2_n_1 ,\i_reg[8]_i_2_n_2 ,\i_reg[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[8:5]),
        .S({\i[8]_i_3_n_0 ,\i[8]_i_4_n_0 ,\i[8]_i_5_n_0 ,\i[8]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[9]_i_1__0_n_0 ),
        .Q(i[9]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[0] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[0]_i_1_n_0 ),
        .Q(i_reg_rep__5[0]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[1] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[1]_i_1_n_0 ),
        .Q(i_reg_rep__5[1]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[2] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[2]_i_1_n_0 ),
        .Q(i_reg_rep__5[2]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[3] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[3]_i_1_n_0 ),
        .Q(i_reg_rep__5[3]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[4] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[4]_i_1_n_0 ),
        .Q(i_reg_rep__5[4]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[5] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[5]_i_1_n_0 ),
        .Q(i_reg_rep__5[5]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[6] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[6]_i_1_n_0 ),
        .Q(i_reg_rep__5[6]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[7] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[7]_i_1_n_0 ),
        .Q(i_reg_rep__5[7]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[8] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[8]_i_1__0_n_0 ),
        .Q(i_reg_rep__5[8]),
        .R(tree_n_9));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[9] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_8),
        .D(\i[9]_i_1__0_n_0 ),
        .Q(i_reg_rep__5[9]),
        .R(tree_n_9));
  LUT1 #(
    .INIT(2'h2)) 
    \k[16]_i_3 
       (.I0(k__1[16]),
        .O(\k[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[16]_i_4 
       (.I0(k__1[15]),
        .O(\k[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[16]_i_5 
       (.I0(k__1[14]),
        .O(\k[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[16]_i_6 
       (.I0(k__1[13]),
        .O(\k[16]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[20]_i_3 
       (.I0(k__1[20]),
        .O(\k[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[20]_i_4 
       (.I0(k__1[19]),
        .O(\k[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[20]_i_5 
       (.I0(k__1[18]),
        .O(\k[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[20]_i_6 
       (.I0(k__1[17]),
        .O(\k[20]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[24]_i_3 
       (.I0(k__1[24]),
        .O(\k[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[24]_i_4 
       (.I0(k__1[23]),
        .O(\k[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[24]_i_5 
       (.I0(k__1[22]),
        .O(\k[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[24]_i_6 
       (.I0(k__1[21]),
        .O(\k[24]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[28]_i_3 
       (.I0(k__1[28]),
        .O(\k[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[28]_i_4 
       (.I0(k__1[27]),
        .O(\k[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[28]_i_5 
       (.I0(k__1[26]),
        .O(\k[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[28]_i_6 
       (.I0(k__1[25]),
        .O(\k[28]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[31]_i_3 
       (.I0(k__1[31]),
        .O(\k[31]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[31]_i_4 
       (.I0(k__1[30]),
        .O(\k[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k[31]_i_5 
       (.I0(k__1[29]),
        .O(\k[31]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[0]),
        .Q(k__1[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[10]),
        .Q(k__1[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[11]),
        .Q(k__1[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[12]),
        .Q(k__1[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[13]),
        .Q(k__1[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[14]),
        .Q(k__1[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[15]),
        .Q(k__1[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[16]),
        .Q(k__1[16]),
        .R(1'b0));
  CARRY4 \k_reg[16]_i_2 
       (.CI(\k_reg_rep[9]_i_7_n_0 ),
        .CO({\k_reg[16]_i_2_n_0 ,\k_reg[16]_i_2_n_1 ,\k_reg[16]_i_2_n_2 ,\k_reg[16]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[16:13]),
        .S({\k[16]_i_3_n_0 ,\k[16]_i_4_n_0 ,\k[16]_i_5_n_0 ,\k[16]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[17]),
        .Q(k__1[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[18]),
        .Q(k__1[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[19]),
        .Q(k__1[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[1]),
        .Q(k__1[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[20]),
        .Q(k__1[20]),
        .R(1'b0));
  CARRY4 \k_reg[20]_i_2 
       (.CI(\k_reg[16]_i_2_n_0 ),
        .CO({\k_reg[20]_i_2_n_0 ,\k_reg[20]_i_2_n_1 ,\k_reg[20]_i_2_n_2 ,\k_reg[20]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[20:17]),
        .S({\k[20]_i_3_n_0 ,\k[20]_i_4_n_0 ,\k[20]_i_5_n_0 ,\k[20]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[21]),
        .Q(k__1[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[22]),
        .Q(k__1[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[23]),
        .Q(k__1[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[24]),
        .Q(k__1[24]),
        .R(1'b0));
  CARRY4 \k_reg[24]_i_2 
       (.CI(\k_reg[20]_i_2_n_0 ),
        .CO({\k_reg[24]_i_2_n_0 ,\k_reg[24]_i_2_n_1 ,\k_reg[24]_i_2_n_2 ,\k_reg[24]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[24:21]),
        .S({\k[24]_i_3_n_0 ,\k[24]_i_4_n_0 ,\k[24]_i_5_n_0 ,\k[24]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[25]),
        .Q(k__1[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[26]),
        .Q(k__1[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[27]),
        .Q(k__1[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[28]),
        .Q(k__1[28]),
        .R(1'b0));
  CARRY4 \k_reg[28]_i_2 
       (.CI(\k_reg[24]_i_2_n_0 ),
        .CO({\k_reg[28]_i_2_n_0 ,\k_reg[28]_i_2_n_1 ,\k_reg[28]_i_2_n_2 ,\k_reg[28]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[28:25]),
        .S({\k[28]_i_3_n_0 ,\k[28]_i_4_n_0 ,\k[28]_i_5_n_0 ,\k[28]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[29]),
        .Q(k__1[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[2]),
        .Q(k__1[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[30]),
        .Q(k__1[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k__0[31]),
        .Q(k__1[31]),
        .R(1'b0));
  CARRY4 \k_reg[31]_i_2 
       (.CI(\k_reg[28]_i_2_n_0 ),
        .CO({\NLW_k_reg[31]_i_2_CO_UNCONNECTED [3:2],\k_reg[31]_i_2_n_2 ,\k_reg[31]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_k_reg[31]_i_2_O_UNCONNECTED [3],data0[31:29]}),
        .S({1'b0,\k[31]_i_3_n_0 ,\k[31]_i_4_n_0 ,\k[31]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[3]),
        .Q(k__1[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[4]),
        .Q(k__1[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[5]),
        .Q(k__1[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[6]),
        .Q(k__1[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[7]),
        .Q(k__1[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[8]),
        .Q(k__1[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[9]),
        .Q(k__1[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg_rep[0] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[0]),
        .Q(k_reg_rep__0[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg_rep[1] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[1]),
        .Q(k_reg_rep__0[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg_rep[2] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[2]),
        .Q(k_reg_rep__0[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg_rep[3] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[3]),
        .Q(k_reg_rep__0[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg_rep[4] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[4]),
        .Q(k_reg_rep__0[4]),
        .R(1'b0));
  CARRY4 \k_reg_rep[4]_i_2 
       (.CI(1'b0),
        .CO({\k_reg_rep[4]_i_2_n_0 ,\k_reg_rep[4]_i_2_n_1 ,\k_reg_rep[4]_i_2_n_2 ,\k_reg_rep[4]_i_2_n_3 }),
        .CYINIT(k__1[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[4:1]),
        .S({\k_rep[4]_i_3_n_0 ,\k_rep[4]_i_4_n_0 ,\k_rep[4]_i_5_n_0 ,\k_rep[4]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg_rep[5] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[5]),
        .Q(k_reg_rep__0[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg_rep[6] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[6]),
        .Q(k_reg_rep__0[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg_rep[7] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[7]),
        .Q(k_reg_rep__0[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg_rep[8] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[8]),
        .Q(k_reg_rep__0[8]),
        .R(1'b0));
  CARRY4 \k_reg_rep[8]_i_2 
       (.CI(\k_reg_rep[4]_i_2_n_0 ),
        .CO({\k_reg_rep[8]_i_2_n_0 ,\k_reg_rep[8]_i_2_n_1 ,\k_reg_rep[8]_i_2_n_2 ,\k_reg_rep[8]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[8:5]),
        .S({\k_rep[8]_i_3_n_0 ,\k_rep[8]_i_4_n_0 ,\k_rep[8]_i_5_n_0 ,\k_rep[8]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \k_reg_rep[9] 
       (.C(clock_IBUF_BUFG),
        .CE(decoder_n_47),
        .D(k[9]),
        .Q(k_reg_rep__0[9]),
        .R(1'b0));
  CARRY4 \k_reg_rep[9]_i_7 
       (.CI(\k_reg_rep[8]_i_2_n_0 ),
        .CO({\k_reg_rep[9]_i_7_n_0 ,\k_reg_rep[9]_i_7_n_1 ,\k_reg_rep[9]_i_7_n_2 ,\k_reg_rep[9]_i_7_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(data0[12:9]),
        .S({\k_rep[9]_i_8_n_0 ,\k_rep[9]_i_9_n_0 ,\k_rep[9]_i_10_n_0 ,\k_rep[9]_i_11_n_0 }));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[4]_i_3 
       (.I0(k__1[4]),
        .O(\k_rep[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[4]_i_4 
       (.I0(k__1[3]),
        .O(\k_rep[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[4]_i_5 
       (.I0(k__1[2]),
        .O(\k_rep[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[4]_i_6 
       (.I0(k__1[1]),
        .O(\k_rep[4]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[8]_i_3 
       (.I0(k__1[8]),
        .O(\k_rep[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[8]_i_4 
       (.I0(k__1[7]),
        .O(\k_rep[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[8]_i_5 
       (.I0(k__1[6]),
        .O(\k_rep[8]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[8]_i_6 
       (.I0(k__1[5]),
        .O(\k_rep[8]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[9]_i_10 
       (.I0(k__1[10]),
        .O(\k_rep[9]_i_10_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[9]_i_11 
       (.I0(k__1[9]),
        .O(\k_rep[9]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \k_rep[9]_i_4 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[2] ),
        .O(\k_rep[9]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h4F)) 
    \k_rep[9]_i_6 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[2] ),
        .O(\k_rep[9]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[9]_i_8 
       (.I0(k__1[12]),
        .O(\k_rep[9]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \k_rep[9]_i_9 
       (.I0(k__1[11]),
        .O(\k_rep[9]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    probabilities_tab_reg_i_10
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_6),
        .D(i_0[2]),
        .Q(probabilities_tab_reg_i_10_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    probabilities_tab_reg_i_11
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_6),
        .D(i_0[1]),
        .Q(probabilities_tab_reg_i_11_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    probabilities_tab_reg_i_12
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_6),
        .D(i_0[0]),
        .Q(probabilities_tab_reg_i_12_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    probabilities_tab_reg_i_7
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_6),
        .D(i_0[5]),
        .Q(probabilities_tab_reg_i_7_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    probabilities_tab_reg_i_8
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_6),
        .D(i_0[4]),
        .Q(probabilities_tab_reg_i_8_n_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    probabilities_tab_reg_i_9
       (.C(clock_IBUF_BUFG),
        .CE(tree_n_6),
        .D(i_0[3]),
        .Q(probabilities_tab_reg_i_9_n_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h2230777522302220)) 
    \state[1]_i_1__0 
       (.I0(\state_reg_n_0_[4] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[3] ),
        .I5(\state[1]_i_2_n_0 ),
        .O(\state[1]_i_1__0_n_0 ));
  LUT5 #(
    .INIT(32'hCBC8FFFF)) 
    \state[1]_i_2 
       (.I0(decoder_bit_input_reg_i_5_n_0),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\i_reg[31]_i_6_n_0 ),
        .I4(\state_reg_n_0_[1] ),
        .O(\state[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \state[2]_i_3 
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[4] ),
        .I2(\state_reg_n_0_[3] ),
        .O(\state[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF3FC4343)) 
    \state[2]_i_4 
       (.I0(decoder_bit_input_reg_i_5_n_0),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\i_reg[31]_i_6_n_0 ),
        .I4(\state_reg_n_0_[0] ),
        .O(\state[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h88048804DD11D811)) 
    \state[3]_i_1__0 
       (.I0(\state_reg_n_0_[4] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\i_reg[31]_i_6_n_0 ),
        .I5(\state_reg_n_0_[1] ),
        .O(\state[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h000000005505F010)) 
    \state[4]_i_2 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\i_reg[31]_i_6_n_0 ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[3] ),
        .I4(\state_reg_n_0_[2] ),
        .I5(\state_reg_n_0_[4] ),
        .O(\state[4]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(decoder_n_45),
        .Q(\state_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\state[1]_i_1__0_n_0 ),
        .Q(\state_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(decoder_n_44),
        .Q(\state_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\state[3]_i_1__0_n_0 ),
        .Q(\state_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\state[4]_i_2_n_0 ),
        .Q(\state_reg_n_0_[4] ),
        .R(1'b0));
  create_tree tree
       (.CO(decoder_bit_input_reg_i_5_n_0),
        .DIADI({\tree_probability_in_reg_n_0_[10] ,\tree_probability_in_reg_n_0_[9] ,\tree_probability_in_reg_n_0_[7] ,\tree_probability_in_reg_n_0_[5] ,\tree_probability_in_reg_n_0_[4] ,\tree_probability_in_reg_n_0_[3] }),
        .E(state),
        .Q({\state_reg_n_0_[4] ,\state_reg_n_0_[3] ,\state_reg_n_0_[2] ,\state_reg_n_0_[1] ,\state_reg_n_0_[0] }),
        .\bit_counter_reg[30] (\decoder_data_length_in[31]_i_2_n_0 ),
        .clock_IBUF_BUFG(clock_IBUF_BUFG),
        .code_out0_out(tree_codes),
        .code_out_length(tree_codes_length),
        .i2_in(i_0),
        .\i_reg[30]_0 (\i_reg[31]_i_18_n_0 ),
        .\i_reg[31]_0 (tree_n_9),
        .\i_reg[31]_1 (\i_reg[31]_i_6_n_0 ),
        .\i_reg_rep[0]_0 (tree_n_8),
        .\i_reg_rep[0]__1_0 (tree_n_6),
        .probabilities_tab_reg_i_10(probabilities_tab_reg_i_10_n_0),
        .probabilities_tab_reg_i_11(probabilities_tab_reg_i_11_n_0),
        .probabilities_tab_reg_i_12(probabilities_tab_reg_i_12_n_0),
        .probabilities_tab_reg_i_7(probabilities_tab_reg_i_7_n_0),
        .probabilities_tab_reg_i_8(probabilities_tab_reg_i_8_n_0),
        .probabilities_tab_reg_i_9(probabilities_tab_reg_i_9_n_0),
        .\state_reg[0] (decoder_n_11),
        .symbol_in(tree_symbol_in),
        .tree_data_enable(tree_data_enable));
  LUT6 #(
    .INIT(64'h0080FFFF00800000)) 
    tree_data_enable_i_1
       (.I0(tree_data_enable_i_2_n_0),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[4] ),
        .I4(tree_data_enable_i_3_n_0),
        .I5(tree_data_enable),
        .O(tree_data_enable_i_1_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    tree_data_enable_i_2
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .O(tree_data_enable_i_2_n_0));
  LUT6 #(
    .INIT(64'h00000000A0000004)) 
    tree_data_enable_i_3
       (.I0(\state_reg_n_0_[3] ),
        .I1(data_enable_IBUF),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\state_reg_n_0_[4] ),
        .O(tree_data_enable_i_3_n_0));
  FDRE #(
    .INIT(1'b0)) 
    tree_data_enable_reg
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(tree_data_enable_i_1_n_0),
        .Q(tree_data_enable),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \tree_probability_in[10]_i_1 
       (.I0(i[3]),
        .I1(tree_probability_in),
        .O(\tree_probability_in[10]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \tree_probability_in[10]_i_2 
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\i_reg[31]_i_6_n_0 ),
        .I4(\state_reg_n_0_[2] ),
        .I5(\state_reg_n_0_[4] ),
        .O(tree_probability_in));
  LUT5 #(
    .INIT(32'h00004000)) 
    \tree_probability_in[10]_i_3 
       (.I0(i[1]),
        .I1(i[4]),
        .I2(i[5]),
        .I3(i[0]),
        .I4(i[2]),
        .O(\tree_probability_in[10]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_probability_in_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_probability_in),
        .D(\tree_probability_in[10]_i_3_n_0 ),
        .Q(\tree_probability_in_reg_n_0_[10] ),
        .R(\tree_probability_in[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_probability_in_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_probability_in),
        .D(\tree_probability_in[10]_i_3_n_0 ),
        .Q(\tree_probability_in_reg_n_0_[3] ),
        .R(\tree_probability_in[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_probability_in_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_probability_in),
        .D(\tree_probability_in[10]_i_3_n_0 ),
        .Q(\tree_probability_in_reg_n_0_[4] ),
        .R(\tree_probability_in[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_probability_in_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_probability_in),
        .D(\tree_probability_in[10]_i_3_n_0 ),
        .Q(\tree_probability_in_reg_n_0_[5] ),
        .R(\tree_probability_in[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_probability_in_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_probability_in),
        .D(\tree_probability_in[10]_i_3_n_0 ),
        .Q(\tree_probability_in_reg_n_0_[7] ),
        .R(\tree_probability_in[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_probability_in_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_probability_in),
        .D(\tree_probability_in[10]_i_3_n_0 ),
        .Q(\tree_probability_in_reg_n_0_[9] ),
        .R(\tree_probability_in[10]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \tree_symbol_in_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(tree_probability_in),
        .D(\tree_probability_in[10]_i_3_n_0 ),
        .Q(tree_symbol_in),
        .R(\tree_probability_in[10]_i_1_n_0 ));
endmodule

module raw_decoder
   (DOBDO,
    \code_position_reg[0]_0 ,
    O,
    \i_reg_rep[0]_0 ,
    D,
    \state_reg[2]_0 ,
    \code_position_reg[2]_0 ,
    E,
    code_position0_in,
    clock_IBUF_BUFG,
    Q,
    code_list_reg_i_12,
    code_list_reg_i_11,
    code_list_reg_i_10,
    code_list_reg_i_9,
    code_list_reg_i_8,
    code_list_reg_i_7,
    \state_reg[4] ,
    CO,
    \state_reg[1]_0 ,
    \state_reg[1]_1 ,
    \k_reg[0] ,
    data0,
    \decoded_symbols_number_reg[30] ,
    \state_reg[2]_1 ,
    \state_reg[2]_2 ,
    \i_reg[31]_0 ,
    \decoder_data_length_in_reg[31] ,
    \decoder_code_length_in_reg[7] ,
    data_in,
    ascii_symbols,
    decoder_data_enable_reg);
  output [7:0]DOBDO;
  output \code_position_reg[0]_0 ;
  output [1:0]O;
  output \i_reg_rep[0]_0 ;
  output [31:0]D;
  output [1:0]\state_reg[2]_0 ;
  output \code_position_reg[2]_0 ;
  output [0:0]E;
  output [3:0]code_position0_in;
  input clock_IBUF_BUFG;
  input [7:0]Q;
  input code_list_reg_i_12;
  input code_list_reg_i_11;
  input code_list_reg_i_10;
  input code_list_reg_i_9;
  input code_list_reg_i_8;
  input code_list_reg_i_7;
  input [4:0]\state_reg[4] ;
  input [0:0]CO;
  input \state_reg[1]_0 ;
  input \state_reg[1]_1 ;
  input [0:0]\k_reg[0] ;
  input [30:0]data0;
  input [0:0]\decoded_symbols_number_reg[30] ;
  input \state_reg[2]_1 ;
  input \state_reg[2]_2 ;
  input [0:0]\i_reg[31]_0 ;
  input [31:0]\decoder_data_length_in_reg[31] ;
  input [7:0]\decoder_code_length_in_reg[7] ;
  input data_in;
  input [0:0]ascii_symbols;
  input decoder_data_enable_reg;

  wire [0:0]CO;
  wire [31:0]D;
  wire [7:0]DOBDO;
  wire [0:0]E;
  wire [1:0]O;
  wire [7:0]Q;
  wire [0:0]ascii_symbols;
  wire bit_index;
  wire \bit_index_reg_n_0_[0] ;
  wire \bit_index_reg_n_0_[1] ;
  wire \bit_index_reg_n_0_[2] ;
  wire \bit_index_reg_n_0_[3] ;
  wire \bit_index_reg_n_0_[4] ;
  wire \bit_index_reg_n_0_[5] ;
  wire \bit_index_reg_n_0_[6] ;
  wire \bit_index_reg_n_0_[7] ;
  wire \bit_index_reg_rep_n_0_[0] ;
  wire \bit_index_reg_rep_n_0_[1] ;
  wire \bit_index_reg_rep_n_0_[2] ;
  wire \bit_index_reg_rep_n_0_[3] ;
  wire \bit_index_reg_rep_n_0_[4] ;
  wire \bit_index_reg_rep_n_0_[5] ;
  wire \bit_index_reg_rep_n_0_[6] ;
  wire \bit_index_reg_rep_n_0_[7] ;
  wire \bit_index_rep[0]_i_1_n_0 ;
  wire \bit_index_rep[1]_i_1_n_0 ;
  wire \bit_index_rep[2]_i_1_n_0 ;
  wire \bit_index_rep[3]_i_1_n_0 ;
  wire \bit_index_rep[4]_i_1_n_0 ;
  wire \bit_index_rep[4]_i_2_n_0 ;
  wire \bit_index_rep[5]_i_1_n_0 ;
  wire \bit_index_rep[5]_i_2_n_0 ;
  wire \bit_index_rep[6]_i_1_n_0 ;
  wire \bit_index_rep[7]_i_2_n_0 ;
  wire \bit_index_rep[7]_i_3_n_0 ;
  wire \bit_index_rep[7]_i_4_n_0 ;
  wire \bit_index_rep[7]_i_5_n_0 ;
  wire [31:1]bit_position0;
  wire \bit_position[0]_i_1_n_0 ;
  wire \bit_position[12]_i_2_n_0 ;
  wire \bit_position[12]_i_3_n_0 ;
  wire \bit_position[12]_i_4_n_0 ;
  wire \bit_position[12]_i_5_n_0 ;
  wire \bit_position[16]_i_2_n_0 ;
  wire \bit_position[16]_i_3_n_0 ;
  wire \bit_position[16]_i_4_n_0 ;
  wire \bit_position[16]_i_5_n_0 ;
  wire \bit_position[20]_i_2_n_0 ;
  wire \bit_position[20]_i_3_n_0 ;
  wire \bit_position[20]_i_4_n_0 ;
  wire \bit_position[20]_i_5_n_0 ;
  wire \bit_position[24]_i_2_n_0 ;
  wire \bit_position[24]_i_3_n_0 ;
  wire \bit_position[24]_i_4_n_0 ;
  wire \bit_position[24]_i_5_n_0 ;
  wire \bit_position[28]_i_2_n_0 ;
  wire \bit_position[28]_i_3_n_0 ;
  wire \bit_position[28]_i_4_n_0 ;
  wire \bit_position[28]_i_5_n_0 ;
  wire \bit_position[31]_i_1_n_0 ;
  wire \bit_position[31]_i_2_n_0 ;
  wire \bit_position[31]_i_4_n_0 ;
  wire \bit_position[31]_i_5_n_0 ;
  wire \bit_position[31]_i_6_n_0 ;
  wire \bit_position[4]_i_2_n_0 ;
  wire \bit_position[4]_i_3_n_0 ;
  wire \bit_position[4]_i_4_n_0 ;
  wire \bit_position[4]_i_5_n_0 ;
  wire \bit_position[8]_i_2_n_0 ;
  wire \bit_position[8]_i_3_n_0 ;
  wire \bit_position[8]_i_4_n_0 ;
  wire \bit_position[8]_i_5_n_0 ;
  wire \bit_position_reg[12]_i_1_n_0 ;
  wire \bit_position_reg[12]_i_1_n_1 ;
  wire \bit_position_reg[12]_i_1_n_2 ;
  wire \bit_position_reg[12]_i_1_n_3 ;
  wire \bit_position_reg[16]_i_1_n_0 ;
  wire \bit_position_reg[16]_i_1_n_1 ;
  wire \bit_position_reg[16]_i_1_n_2 ;
  wire \bit_position_reg[16]_i_1_n_3 ;
  wire \bit_position_reg[20]_i_1_n_0 ;
  wire \bit_position_reg[20]_i_1_n_1 ;
  wire \bit_position_reg[20]_i_1_n_2 ;
  wire \bit_position_reg[20]_i_1_n_3 ;
  wire \bit_position_reg[24]_i_1_n_0 ;
  wire \bit_position_reg[24]_i_1_n_1 ;
  wire \bit_position_reg[24]_i_1_n_2 ;
  wire \bit_position_reg[24]_i_1_n_3 ;
  wire \bit_position_reg[28]_i_1_n_0 ;
  wire \bit_position_reg[28]_i_1_n_1 ;
  wire \bit_position_reg[28]_i_1_n_2 ;
  wire \bit_position_reg[28]_i_1_n_3 ;
  wire \bit_position_reg[31]_i_3_n_2 ;
  wire \bit_position_reg[31]_i_3_n_3 ;
  wire \bit_position_reg[4]_i_1_n_0 ;
  wire \bit_position_reg[4]_i_1_n_1 ;
  wire \bit_position_reg[4]_i_1_n_2 ;
  wire \bit_position_reg[4]_i_1_n_3 ;
  wire \bit_position_reg[8]_i_1_n_0 ;
  wire \bit_position_reg[8]_i_1_n_1 ;
  wire \bit_position_reg[8]_i_1_n_2 ;
  wire \bit_position_reg[8]_i_1_n_3 ;
  wire \bit_position_reg_n_0_[0] ;
  wire \bit_position_reg_n_0_[10] ;
  wire \bit_position_reg_n_0_[11] ;
  wire \bit_position_reg_n_0_[12] ;
  wire \bit_position_reg_n_0_[13] ;
  wire \bit_position_reg_n_0_[14] ;
  wire \bit_position_reg_n_0_[15] ;
  wire \bit_position_reg_n_0_[16] ;
  wire \bit_position_reg_n_0_[17] ;
  wire \bit_position_reg_n_0_[18] ;
  wire \bit_position_reg_n_0_[19] ;
  wire \bit_position_reg_n_0_[1] ;
  wire \bit_position_reg_n_0_[20] ;
  wire \bit_position_reg_n_0_[21] ;
  wire \bit_position_reg_n_0_[22] ;
  wire \bit_position_reg_n_0_[23] ;
  wire \bit_position_reg_n_0_[24] ;
  wire \bit_position_reg_n_0_[25] ;
  wire \bit_position_reg_n_0_[26] ;
  wire \bit_position_reg_n_0_[27] ;
  wire \bit_position_reg_n_0_[28] ;
  wire \bit_position_reg_n_0_[29] ;
  wire \bit_position_reg_n_0_[2] ;
  wire \bit_position_reg_n_0_[30] ;
  wire \bit_position_reg_n_0_[31] ;
  wire \bit_position_reg_n_0_[3] ;
  wire \bit_position_reg_n_0_[4] ;
  wire \bit_position_reg_n_0_[5] ;
  wire \bit_position_reg_n_0_[6] ;
  wire \bit_position_reg_n_0_[7] ;
  wire \bit_position_reg_n_0_[8] ;
  wire \bit_position_reg_n_0_[9] ;
  wire \bits_counter[0]_i_1_n_0 ;
  wire \bits_counter[0]_i_3_n_0 ;
  wire \bits_counter[0]_i_4_n_0 ;
  wire \bits_counter[0]_i_5_n_0 ;
  wire \bits_counter[0]_i_6_n_0 ;
  wire \bits_counter[12]_i_2_n_0 ;
  wire \bits_counter[12]_i_3_n_0 ;
  wire \bits_counter[12]_i_4_n_0 ;
  wire \bits_counter[12]_i_5_n_0 ;
  wire \bits_counter[4]_i_2_n_0 ;
  wire \bits_counter[4]_i_3_n_0 ;
  wire \bits_counter[4]_i_4_n_0 ;
  wire \bits_counter[4]_i_5_n_0 ;
  wire \bits_counter[8]_i_2_n_0 ;
  wire \bits_counter[8]_i_3_n_0 ;
  wire \bits_counter[8]_i_4_n_0 ;
  wire \bits_counter[8]_i_5_n_0 ;
  wire [9:0]bits_counter_reg;
  wire \bits_counter_reg[0]_i_2_n_0 ;
  wire \bits_counter_reg[0]_i_2_n_1 ;
  wire \bits_counter_reg[0]_i_2_n_2 ;
  wire \bits_counter_reg[0]_i_2_n_3 ;
  wire \bits_counter_reg[0]_i_2_n_4 ;
  wire \bits_counter_reg[0]_i_2_n_5 ;
  wire \bits_counter_reg[0]_i_2_n_6 ;
  wire \bits_counter_reg[0]_i_2_n_7 ;
  wire \bits_counter_reg[12]_i_1_n_1 ;
  wire \bits_counter_reg[12]_i_1_n_2 ;
  wire \bits_counter_reg[12]_i_1_n_3 ;
  wire \bits_counter_reg[12]_i_1_n_4 ;
  wire \bits_counter_reg[12]_i_1_n_5 ;
  wire \bits_counter_reg[12]_i_1_n_6 ;
  wire \bits_counter_reg[12]_i_1_n_7 ;
  wire \bits_counter_reg[4]_i_1_n_0 ;
  wire \bits_counter_reg[4]_i_1_n_1 ;
  wire \bits_counter_reg[4]_i_1_n_2 ;
  wire \bits_counter_reg[4]_i_1_n_3 ;
  wire \bits_counter_reg[4]_i_1_n_4 ;
  wire \bits_counter_reg[4]_i_1_n_5 ;
  wire \bits_counter_reg[4]_i_1_n_6 ;
  wire \bits_counter_reg[4]_i_1_n_7 ;
  wire \bits_counter_reg[8]_i_1_n_0 ;
  wire \bits_counter_reg[8]_i_1_n_1 ;
  wire \bits_counter_reg[8]_i_1_n_2 ;
  wire \bits_counter_reg[8]_i_1_n_3 ;
  wire \bits_counter_reg[8]_i_1_n_4 ;
  wire \bits_counter_reg[8]_i_1_n_5 ;
  wire \bits_counter_reg[8]_i_1_n_6 ;
  wire \bits_counter_reg[8]_i_1_n_7 ;
  wire [15:10]bits_counter_reg__0;
  wire [7:0]character_length;
  wire character_length0;
  wire \character_length[0]_i_1_n_0 ;
  wire \character_length[1]_i_1_n_0 ;
  wire \character_length[2]_i_1_n_0 ;
  wire \character_length[3]_i_1_n_0 ;
  wire \character_length[4]_i_1_n_0 ;
  wire \character_length[5]_i_1_n_0 ;
  wire \character_length[5]_i_2_n_0 ;
  wire \character_length[6]_i_1_n_0 ;
  wire \character_length[7]_i_2_n_0 ;
  wire \character_length[7]_i_3_n_0 ;
  wire clock_IBUF_BUFG;
  wire [7:0]code_index;
  wire \code_index[0]_i_1_n_0 ;
  wire \code_index[1]_i_1_n_0 ;
  wire \code_index[2]_i_1_n_0 ;
  wire \code_index[3]_i_1_n_0 ;
  wire \code_index[4]_i_1_n_0 ;
  wire \code_index[4]_i_2_n_0 ;
  wire \code_index[5]_i_1_n_0 ;
  wire \code_index[6]_i_1_n_0 ;
  wire \code_index[6]_i_2_n_0 ;
  wire \code_index[7]_i_1_n_0 ;
  wire \code_index[7]_i_2_n_0 ;
  wire code_list_reg_i_10;
  wire code_list_reg_i_11;
  wire code_list_reg_i_12;
  wire code_list_reg_i_1_n_0;
  wire code_list_reg_i_2_n_0;
  wire code_list_reg_i_3_n_0;
  wire code_list_reg_i_4_n_0;
  wire code_list_reg_i_5_n_0;
  wire code_list_reg_i_6_n_0;
  wire code_list_reg_i_7;
  wire code_list_reg_i_8;
  wire code_list_reg_i_9;
  wire [15:1]code_position0;
  wire [3:0]code_position0_in;
  wire \code_position[12]_i_2_n_0 ;
  wire \code_position[12]_i_3_n_0 ;
  wire \code_position[12]_i_4_n_0 ;
  wire \code_position[12]_i_5_n_0 ;
  wire \code_position[15]_i_2_n_0 ;
  wire \code_position[15]_i_3_n_0 ;
  wire \code_position[15]_i_4_n_0 ;
  wire \code_position[8]_i_2_n_0 ;
  wire \code_position[8]_i_3_n_0 ;
  wire \code_position[8]_i_4_n_0 ;
  wire \code_position[8]_i_5_n_0 ;
  wire \code_position_reg[0]_0 ;
  wire \code_position_reg[12]_i_1_n_0 ;
  wire \code_position_reg[12]_i_1_n_1 ;
  wire \code_position_reg[12]_i_1_n_2 ;
  wire \code_position_reg[12]_i_1_n_3 ;
  wire \code_position_reg[15]_i_1_n_2 ;
  wire \code_position_reg[15]_i_1_n_3 ;
  wire \code_position_reg[2]_0 ;
  wire \code_position_reg[8]_i_1_n_0 ;
  wire \code_position_reg[8]_i_1_n_1 ;
  wire \code_position_reg[8]_i_1_n_2 ;
  wire \code_position_reg[8]_i_1_n_3 ;
  wire \code_position_reg_n_0_[0] ;
  wire \code_position_reg_n_0_[10] ;
  wire \code_position_reg_n_0_[11] ;
  wire \code_position_reg_n_0_[12] ;
  wire \code_position_reg_n_0_[13] ;
  wire \code_position_reg_n_0_[14] ;
  wire \code_position_reg_n_0_[15] ;
  wire \code_position_reg_n_0_[1] ;
  wire \code_position_reg_n_0_[2] ;
  wire \code_position_reg_n_0_[3] ;
  wire \code_position_reg_n_0_[4] ;
  wire \code_position_reg_n_0_[5] ;
  wire \code_position_reg_n_0_[6] ;
  wire \code_position_reg_n_0_[7] ;
  wire \code_position_reg_n_0_[8] ;
  wire \code_position_reg_n_0_[9] ;
  wire \code_position_reg_rep[3]_i_2_n_0 ;
  wire \code_position_reg_rep[3]_i_2_n_1 ;
  wire \code_position_reg_rep[3]_i_2_n_2 ;
  wire \code_position_reg_rep[3]_i_2_n_3 ;
  wire \code_position_reg_rep[5]_i_15_n_0 ;
  wire \code_position_reg_rep[5]_i_15_n_1 ;
  wire \code_position_reg_rep[5]_i_15_n_2 ;
  wire \code_position_reg_rep[5]_i_15_n_3 ;
  wire \code_position_reg_rep[5]_i_24_n_0 ;
  wire \code_position_reg_rep[5]_i_24_n_1 ;
  wire \code_position_reg_rep[5]_i_24_n_2 ;
  wire \code_position_reg_rep[5]_i_24_n_3 ;
  wire \code_position_reg_rep[5]_i_4_n_0 ;
  wire \code_position_reg_rep[5]_i_4_n_1 ;
  wire \code_position_reg_rep[5]_i_4_n_2 ;
  wire \code_position_reg_rep[5]_i_4_n_3 ;
  wire \code_position_reg_rep[5]_i_6_n_0 ;
  wire \code_position_reg_rep[5]_i_6_n_1 ;
  wire \code_position_reg_rep[5]_i_6_n_2 ;
  wire \code_position_reg_rep[5]_i_6_n_3 ;
  wire [5:0]code_position_reg_rep__0__0;
  wire [5:0]code_position_reg_rep__1;
  wire \code_position_rep[3]_i_3_n_0 ;
  wire \code_position_rep[3]_i_4_n_0 ;
  wire \code_position_rep[3]_i_5_n_0 ;
  wire \code_position_rep[3]_i_6_n_0 ;
  wire \code_position_rep[5]_i_10_n_0 ;
  wire \code_position_rep[5]_i_11_n_0 ;
  wire \code_position_rep[5]_i_12_n_0 ;
  wire \code_position_rep[5]_i_13_n_0 ;
  wire \code_position_rep[5]_i_14_n_0 ;
  wire \code_position_rep[5]_i_16_n_0 ;
  wire \code_position_rep[5]_i_17_n_0 ;
  wire \code_position_rep[5]_i_18_n_0 ;
  wire \code_position_rep[5]_i_19_n_0 ;
  wire \code_position_rep[5]_i_20_n_0 ;
  wire \code_position_rep[5]_i_21_n_0 ;
  wire \code_position_rep[5]_i_22_n_0 ;
  wire \code_position_rep[5]_i_23_n_0 ;
  wire \code_position_rep[5]_i_25_n_0 ;
  wire \code_position_rep[5]_i_26_n_0 ;
  wire \code_position_rep[5]_i_27_n_0 ;
  wire \code_position_rep[5]_i_28_n_0 ;
  wire \code_position_rep[5]_i_29_n_0 ;
  wire \code_position_rep[5]_i_30_n_0 ;
  wire \code_position_rep[5]_i_31_n_0 ;
  wire \code_position_rep[5]_i_32_n_0 ;
  wire \code_position_rep[5]_i_33_n_0 ;
  wire \code_position_rep[5]_i_34_n_0 ;
  wire \code_position_rep[5]_i_35_n_0 ;
  wire \code_position_rep[5]_i_36_n_0 ;
  wire \code_position_rep[5]_i_37_n_0 ;
  wire \code_position_rep[5]_i_38_n_0 ;
  wire \code_position_rep[5]_i_39_n_0 ;
  wire \code_position_rep[5]_i_3_n_0 ;
  wire \code_position_rep[5]_i_40_n_0 ;
  wire \code_position_rep[5]_i_5_n_0 ;
  wire \code_position_rep[5]_i_7_n_0 ;
  wire \code_position_rep[5]_i_8_n_0 ;
  wire \code_position_rep[5]_i_9_n_0 ;
  wire [31:0]code_value;
  wire code_value1;
  wire \code_value[11]_i_2_n_0 ;
  wire \code_value[11]_i_3_n_0 ;
  wire \code_value[11]_i_4_n_0 ;
  wire \code_value[11]_i_5_n_0 ;
  wire \code_value[15]_i_2_n_0 ;
  wire \code_value[15]_i_3_n_0 ;
  wire \code_value[15]_i_4_n_0 ;
  wire \code_value[15]_i_5_n_0 ;
  wire \code_value[15]_i_6_n_0 ;
  wire \code_value[15]_i_7_n_0 ;
  wire \code_value[15]_i_8_n_0 ;
  wire \code_value[19]_i_2_n_0 ;
  wire \code_value[19]_i_3_n_0 ;
  wire \code_value[19]_i_4_n_0 ;
  wire \code_value[19]_i_5_n_0 ;
  wire \code_value[23]_i_2_n_0 ;
  wire \code_value[23]_i_3_n_0 ;
  wire \code_value[23]_i_4_n_0 ;
  wire \code_value[23]_i_5_n_0 ;
  wire \code_value[23]_i_6_n_0 ;
  wire \code_value[27]_i_2_n_0 ;
  wire \code_value[27]_i_3_n_0 ;
  wire \code_value[27]_i_4_n_0 ;
  wire \code_value[27]_i_5_n_0 ;
  wire \code_value[27]_i_6_n_0 ;
  wire \code_value[27]_i_7_n_0 ;
  wire \code_value[31]_i_11_n_0 ;
  wire \code_value[31]_i_12_n_0 ;
  wire \code_value[31]_i_13_n_0 ;
  wire \code_value[31]_i_1_n_0 ;
  wire \code_value[31]_i_2_n_0 ;
  wire \code_value[31]_i_4_n_0 ;
  wire \code_value[31]_i_5_n_0 ;
  wire \code_value[31]_i_6_n_0 ;
  wire \code_value[31]_i_7_n_0 ;
  wire \code_value[31]_i_8_n_0 ;
  wire \code_value[31]_i_9_n_0 ;
  wire \code_value[3]_i_2_n_0 ;
  wire \code_value[3]_i_3_n_0 ;
  wire \code_value[3]_i_4_n_0 ;
  wire \code_value[3]_i_5_n_0 ;
  wire \code_value[7]_i_2_n_0 ;
  wire \code_value[7]_i_3_n_0 ;
  wire \code_value[7]_i_4_n_0 ;
  wire \code_value[7]_i_5_n_0 ;
  wire \code_value_reg[11]_i_1_n_0 ;
  wire \code_value_reg[11]_i_1_n_1 ;
  wire \code_value_reg[11]_i_1_n_2 ;
  wire \code_value_reg[11]_i_1_n_3 ;
  wire \code_value_reg[15]_i_1_n_0 ;
  wire \code_value_reg[15]_i_1_n_1 ;
  wire \code_value_reg[15]_i_1_n_2 ;
  wire \code_value_reg[15]_i_1_n_3 ;
  wire \code_value_reg[19]_i_1_n_0 ;
  wire \code_value_reg[19]_i_1_n_1 ;
  wire \code_value_reg[19]_i_1_n_2 ;
  wire \code_value_reg[19]_i_1_n_3 ;
  wire \code_value_reg[23]_i_1_n_0 ;
  wire \code_value_reg[23]_i_1_n_1 ;
  wire \code_value_reg[23]_i_1_n_2 ;
  wire \code_value_reg[23]_i_1_n_3 ;
  wire \code_value_reg[27]_i_1_n_0 ;
  wire \code_value_reg[27]_i_1_n_1 ;
  wire \code_value_reg[27]_i_1_n_2 ;
  wire \code_value_reg[27]_i_1_n_3 ;
  wire \code_value_reg[31]_i_3_n_1 ;
  wire \code_value_reg[31]_i_3_n_2 ;
  wire \code_value_reg[31]_i_3_n_3 ;
  wire \code_value_reg[3]_i_1_n_0 ;
  wire \code_value_reg[3]_i_1_n_1 ;
  wire \code_value_reg[3]_i_1_n_2 ;
  wire \code_value_reg[3]_i_1_n_3 ;
  wire \code_value_reg[7]_i_1_n_0 ;
  wire \code_value_reg[7]_i_1_n_1 ;
  wire \code_value_reg[7]_i_1_n_2 ;
  wire \code_value_reg[7]_i_1_n_3 ;
  wire \code_value_reg_n_0_[0] ;
  wire \code_value_reg_n_0_[10] ;
  wire \code_value_reg_n_0_[11] ;
  wire \code_value_reg_n_0_[12] ;
  wire \code_value_reg_n_0_[13] ;
  wire \code_value_reg_n_0_[14] ;
  wire \code_value_reg_n_0_[15] ;
  wire \code_value_reg_n_0_[16] ;
  wire \code_value_reg_n_0_[17] ;
  wire \code_value_reg_n_0_[18] ;
  wire \code_value_reg_n_0_[19] ;
  wire \code_value_reg_n_0_[1] ;
  wire \code_value_reg_n_0_[20] ;
  wire \code_value_reg_n_0_[21] ;
  wire \code_value_reg_n_0_[22] ;
  wire \code_value_reg_n_0_[23] ;
  wire \code_value_reg_n_0_[24] ;
  wire \code_value_reg_n_0_[25] ;
  wire \code_value_reg_n_0_[26] ;
  wire \code_value_reg_n_0_[27] ;
  wire \code_value_reg_n_0_[28] ;
  wire \code_value_reg_n_0_[29] ;
  wire \code_value_reg_n_0_[2] ;
  wire \code_value_reg_n_0_[30] ;
  wire \code_value_reg_n_0_[31] ;
  wire \code_value_reg_n_0_[3] ;
  wire \code_value_reg_n_0_[4] ;
  wire \code_value_reg_n_0_[5] ;
  wire \code_value_reg_n_0_[6] ;
  wire \code_value_reg_n_0_[7] ;
  wire \code_value_reg_n_0_[8] ;
  wire \code_value_reg_n_0_[9] ;
  wire codes_lengths_reg_0_63_0_2_i_1_n_0;
  wire [30:0]data0;
  wire [31:2]data0_0;
  wire data_in;
  wire data_ready_i_1_n_0;
  wire decoded_characters_array_reg_i_10_n_0;
  wire decoded_characters_array_reg_i_11_n_0;
  wire decoded_characters_array_reg_i_12_n_0;
  wire decoded_characters_array_reg_i_13_n_0;
  wire decoded_characters_array_reg_i_13_n_1;
  wire decoded_characters_array_reg_i_13_n_2;
  wire decoded_characters_array_reg_i_13_n_3;
  wire decoded_characters_array_reg_i_14_n_0;
  wire decoded_characters_array_reg_i_15_n_0;
  wire decoded_characters_array_reg_i_16_n_0;
  wire decoded_characters_array_reg_i_17_n_0;
  wire decoded_characters_array_reg_i_18_n_0;
  wire decoded_characters_array_reg_i_19_n_0;
  wire decoded_characters_array_reg_i_1_n_0;
  wire decoded_characters_array_reg_i_20_n_0;
  wire decoded_characters_array_reg_i_21_n_0;
  wire decoded_characters_array_reg_i_22_n_0;
  wire decoded_characters_array_reg_i_22_n_1;
  wire decoded_characters_array_reg_i_22_n_2;
  wire decoded_characters_array_reg_i_22_n_3;
  wire decoded_characters_array_reg_i_23_n_0;
  wire decoded_characters_array_reg_i_24_n_0;
  wire decoded_characters_array_reg_i_25_n_0;
  wire decoded_characters_array_reg_i_26_n_0;
  wire decoded_characters_array_reg_i_27_n_0;
  wire decoded_characters_array_reg_i_28_n_0;
  wire decoded_characters_array_reg_i_29_n_0;
  wire decoded_characters_array_reg_i_2_n_0;
  wire decoded_characters_array_reg_i_30_n_0;
  wire decoded_characters_array_reg_i_31_n_0;
  wire decoded_characters_array_reg_i_32_n_0;
  wire decoded_characters_array_reg_i_33_n_0;
  wire decoded_characters_array_reg_i_34_n_0;
  wire decoded_characters_array_reg_i_35_n_0;
  wire decoded_characters_array_reg_i_36_n_0;
  wire decoded_characters_array_reg_i_37_n_0;
  wire decoded_characters_array_reg_i_38_n_0;
  wire decoded_characters_array_reg_i_3_n_0;
  wire decoded_characters_array_reg_i_3_n_1;
  wire decoded_characters_array_reg_i_3_n_2;
  wire decoded_characters_array_reg_i_3_n_3;
  wire decoded_characters_array_reg_i_4_n_0;
  wire decoded_characters_array_reg_i_4_n_1;
  wire decoded_characters_array_reg_i_4_n_2;
  wire decoded_characters_array_reg_i_4_n_3;
  wire decoded_characters_array_reg_i_5_n_0;
  wire decoded_characters_array_reg_i_6_n_0;
  wire decoded_characters_array_reg_i_7_n_0;
  wire decoded_characters_array_reg_i_8_n_0;
  wire decoded_characters_array_reg_i_9_n_0;
  wire [31:0]decoded_chars_counter;
  wire [31:1]decoded_chars_counter0;
  wire \decoded_chars_counter[0]_i_1_n_0 ;
  wire \decoded_chars_counter[12]_i_2_n_0 ;
  wire \decoded_chars_counter[12]_i_3_n_0 ;
  wire \decoded_chars_counter[12]_i_4_n_0 ;
  wire \decoded_chars_counter[12]_i_5_n_0 ;
  wire \decoded_chars_counter[16]_i_2_n_0 ;
  wire \decoded_chars_counter[16]_i_3_n_0 ;
  wire \decoded_chars_counter[16]_i_4_n_0 ;
  wire \decoded_chars_counter[16]_i_5_n_0 ;
  wire \decoded_chars_counter[20]_i_2_n_0 ;
  wire \decoded_chars_counter[20]_i_3_n_0 ;
  wire \decoded_chars_counter[20]_i_4_n_0 ;
  wire \decoded_chars_counter[20]_i_5_n_0 ;
  wire \decoded_chars_counter[24]_i_2_n_0 ;
  wire \decoded_chars_counter[24]_i_3_n_0 ;
  wire \decoded_chars_counter[24]_i_4_n_0 ;
  wire \decoded_chars_counter[24]_i_5_n_0 ;
  wire \decoded_chars_counter[28]_i_2_n_0 ;
  wire \decoded_chars_counter[28]_i_3_n_0 ;
  wire \decoded_chars_counter[28]_i_4_n_0 ;
  wire \decoded_chars_counter[28]_i_5_n_0 ;
  wire \decoded_chars_counter[31]_i_11_n_0 ;
  wire \decoded_chars_counter[31]_i_12_n_0 ;
  wire \decoded_chars_counter[31]_i_13_n_0 ;
  wire \decoded_chars_counter[31]_i_14_n_0 ;
  wire \decoded_chars_counter[31]_i_15_n_0 ;
  wire \decoded_chars_counter[31]_i_16_n_0 ;
  wire \decoded_chars_counter[31]_i_1_n_0 ;
  wire \decoded_chars_counter[31]_i_2_n_0 ;
  wire \decoded_chars_counter[31]_i_4_n_0 ;
  wire \decoded_chars_counter[31]_i_5_n_0 ;
  wire \decoded_chars_counter[31]_i_7_n_0 ;
  wire \decoded_chars_counter[31]_i_8_n_0 ;
  wire \decoded_chars_counter[31]_i_9_n_0 ;
  wire \decoded_chars_counter[4]_i_2_n_0 ;
  wire \decoded_chars_counter[4]_i_3_n_0 ;
  wire \decoded_chars_counter[4]_i_4_n_0 ;
  wire \decoded_chars_counter[4]_i_5_n_0 ;
  wire \decoded_chars_counter[8]_i_2_n_0 ;
  wire \decoded_chars_counter[8]_i_3_n_0 ;
  wire \decoded_chars_counter[8]_i_4_n_0 ;
  wire \decoded_chars_counter[8]_i_5_n_0 ;
  wire \decoded_chars_counter_reg[12]_i_1_n_0 ;
  wire \decoded_chars_counter_reg[12]_i_1_n_1 ;
  wire \decoded_chars_counter_reg[12]_i_1_n_2 ;
  wire \decoded_chars_counter_reg[12]_i_1_n_3 ;
  wire \decoded_chars_counter_reg[16]_i_1_n_0 ;
  wire \decoded_chars_counter_reg[16]_i_1_n_1 ;
  wire \decoded_chars_counter_reg[16]_i_1_n_2 ;
  wire \decoded_chars_counter_reg[16]_i_1_n_3 ;
  wire \decoded_chars_counter_reg[20]_i_1_n_0 ;
  wire \decoded_chars_counter_reg[20]_i_1_n_1 ;
  wire \decoded_chars_counter_reg[20]_i_1_n_2 ;
  wire \decoded_chars_counter_reg[20]_i_1_n_3 ;
  wire \decoded_chars_counter_reg[24]_i_1_n_0 ;
  wire \decoded_chars_counter_reg[24]_i_1_n_1 ;
  wire \decoded_chars_counter_reg[24]_i_1_n_2 ;
  wire \decoded_chars_counter_reg[24]_i_1_n_3 ;
  wire \decoded_chars_counter_reg[28]_i_1_n_0 ;
  wire \decoded_chars_counter_reg[28]_i_1_n_1 ;
  wire \decoded_chars_counter_reg[28]_i_1_n_2 ;
  wire \decoded_chars_counter_reg[28]_i_1_n_3 ;
  wire \decoded_chars_counter_reg[31]_i_10_n_0 ;
  wire \decoded_chars_counter_reg[31]_i_10_n_1 ;
  wire \decoded_chars_counter_reg[31]_i_10_n_2 ;
  wire \decoded_chars_counter_reg[31]_i_10_n_3 ;
  wire \decoded_chars_counter_reg[31]_i_3_n_2 ;
  wire \decoded_chars_counter_reg[31]_i_3_n_3 ;
  wire \decoded_chars_counter_reg[31]_i_6_n_3 ;
  wire \decoded_chars_counter_reg[4]_i_1_n_0 ;
  wire \decoded_chars_counter_reg[4]_i_1_n_1 ;
  wire \decoded_chars_counter_reg[4]_i_1_n_2 ;
  wire \decoded_chars_counter_reg[4]_i_1_n_3 ;
  wire \decoded_chars_counter_reg[8]_i_1_n_0 ;
  wire \decoded_chars_counter_reg[8]_i_1_n_1 ;
  wire \decoded_chars_counter_reg[8]_i_1_n_2 ;
  wire \decoded_chars_counter_reg[8]_i_1_n_3 ;
  wire [0:0]\decoded_symbols_number_reg[30] ;
  wire [7:0]\decoder_code_length_in_reg[7] ;
  wire decoder_data_enable_reg;
  wire [31:0]\decoder_data_length_in_reg[31] ;
  wire decoder_data_ready;
  wire [31:0]i;
  wire [31:1]i0;
  wire \i[12]_i_2_n_0 ;
  wire \i[12]_i_3__0_n_0 ;
  wire \i[12]_i_4__0_n_0 ;
  wire \i[12]_i_5__0_n_0 ;
  wire \i[16]_i_2_n_0 ;
  wire \i[16]_i_3__0_n_0 ;
  wire \i[16]_i_4__0_n_0 ;
  wire \i[16]_i_5__0_n_0 ;
  wire \i[20]_i_2_n_0 ;
  wire \i[20]_i_3__0_n_0 ;
  wire \i[20]_i_4__0_n_0 ;
  wire \i[20]_i_5__0_n_0 ;
  wire \i[24]_i_2_n_0 ;
  wire \i[24]_i_3__0_n_0 ;
  wire \i[24]_i_4__0_n_0 ;
  wire \i[24]_i_5__0_n_0 ;
  wire \i[28]_i_2_n_0 ;
  wire \i[28]_i_3__0_n_0 ;
  wire \i[28]_i_4__0_n_0 ;
  wire \i[28]_i_5__0_n_0 ;
  wire \i[31]_i_2__0_n_0 ;
  wire \i[31]_i_3__1_n_0 ;
  wire \i[31]_i_4__1_n_0 ;
  wire \i_reg[12]_i_1_n_0 ;
  wire \i_reg[12]_i_1_n_1 ;
  wire \i_reg[12]_i_1_n_2 ;
  wire \i_reg[12]_i_1_n_3 ;
  wire \i_reg[16]_i_1_n_0 ;
  wire \i_reg[16]_i_1_n_1 ;
  wire \i_reg[16]_i_1_n_2 ;
  wire \i_reg[16]_i_1_n_3 ;
  wire \i_reg[20]_i_1_n_0 ;
  wire \i_reg[20]_i_1_n_1 ;
  wire \i_reg[20]_i_1_n_2 ;
  wire \i_reg[20]_i_1_n_3 ;
  wire \i_reg[24]_i_1_n_0 ;
  wire \i_reg[24]_i_1_n_1 ;
  wire \i_reg[24]_i_1_n_2 ;
  wire \i_reg[24]_i_1_n_3 ;
  wire \i_reg[28]_i_1_n_0 ;
  wire \i_reg[28]_i_1_n_1 ;
  wire \i_reg[28]_i_1_n_2 ;
  wire \i_reg[28]_i_1_n_3 ;
  wire [0:0]\i_reg[31]_0 ;
  wire \i_reg[31]_i_1_n_2 ;
  wire \i_reg[31]_i_1_n_3 ;
  wire [6:0]i_reg_rep;
  wire \i_reg_rep[0]_0 ;
  wire \i_reg_rep[4]_i_1_n_0 ;
  wire \i_reg_rep[4]_i_1_n_1 ;
  wire \i_reg_rep[4]_i_1_n_2 ;
  wire \i_reg_rep[4]_i_1_n_3 ;
  wire \i_reg_rep[6]_i_3_n_0 ;
  wire \i_reg_rep[6]_i_3_n_1 ;
  wire \i_reg_rep[6]_i_3_n_2 ;
  wire \i_reg_rep[6]_i_3_n_3 ;
  wire \i_rep[0]_i_1__0_n_0 ;
  wire \i_rep[4]_i_2_n_0 ;
  wire \i_rep[4]_i_3__0_n_0 ;
  wire \i_rep[4]_i_4__0_n_0 ;
  wire \i_rep[4]_i_5__0_n_0 ;
  wire \i_rep[6]_i_10_n_0 ;
  wire \i_rep[6]_i_1__0_n_0 ;
  wire \i_rep[6]_i_2_n_0 ;
  wire \i_rep[6]_i_4_n_0 ;
  wire \i_rep[6]_i_5_n_0 ;
  wire \i_rep[6]_i_6_n_0 ;
  wire \i_rep[6]_i_7_n_0 ;
  wire \i_rep[6]_i_8_n_0 ;
  wire \i_rep[6]_i_9_n_0 ;
  wire \init_iterator[0]_i_1_n_0 ;
  wire \init_iterator[0]_i_3_n_0 ;
  wire \init_iterator[0]_i_4_n_0 ;
  wire \init_iterator[0]_i_5_n_0 ;
  wire \init_iterator[0]_i_6_n_0 ;
  wire \init_iterator[12]_i_2_n_0 ;
  wire \init_iterator[12]_i_3_n_0 ;
  wire \init_iterator[12]_i_4_n_0 ;
  wire \init_iterator[12]_i_5_n_0 ;
  wire \init_iterator[4]_i_2_n_0 ;
  wire \init_iterator[4]_i_3_n_0 ;
  wire \init_iterator[4]_i_4_n_0 ;
  wire \init_iterator[4]_i_5_n_0 ;
  wire \init_iterator[8]_i_2_n_0 ;
  wire \init_iterator[8]_i_3_n_0 ;
  wire \init_iterator[8]_i_4_n_0 ;
  wire \init_iterator[8]_i_5_n_0 ;
  wire [5:0]init_iterator_reg;
  wire \init_iterator_reg[0]_i_2_n_0 ;
  wire \init_iterator_reg[0]_i_2_n_1 ;
  wire \init_iterator_reg[0]_i_2_n_2 ;
  wire \init_iterator_reg[0]_i_2_n_3 ;
  wire \init_iterator_reg[0]_i_2_n_4 ;
  wire \init_iterator_reg[0]_i_2_n_5 ;
  wire \init_iterator_reg[0]_i_2_n_6 ;
  wire \init_iterator_reg[0]_i_2_n_7 ;
  wire \init_iterator_reg[12]_i_1_n_1 ;
  wire \init_iterator_reg[12]_i_1_n_2 ;
  wire \init_iterator_reg[12]_i_1_n_3 ;
  wire \init_iterator_reg[12]_i_1_n_4 ;
  wire \init_iterator_reg[12]_i_1_n_5 ;
  wire \init_iterator_reg[12]_i_1_n_6 ;
  wire \init_iterator_reg[12]_i_1_n_7 ;
  wire \init_iterator_reg[4]_i_1_n_0 ;
  wire \init_iterator_reg[4]_i_1_n_1 ;
  wire \init_iterator_reg[4]_i_1_n_2 ;
  wire \init_iterator_reg[4]_i_1_n_3 ;
  wire \init_iterator_reg[4]_i_1_n_4 ;
  wire \init_iterator_reg[4]_i_1_n_5 ;
  wire \init_iterator_reg[4]_i_1_n_6 ;
  wire \init_iterator_reg[4]_i_1_n_7 ;
  wire \init_iterator_reg[8]_i_1_n_0 ;
  wire \init_iterator_reg[8]_i_1_n_1 ;
  wire \init_iterator_reg[8]_i_1_n_2 ;
  wire \init_iterator_reg[8]_i_1_n_3 ;
  wire \init_iterator_reg[8]_i_1_n_4 ;
  wire \init_iterator_reg[8]_i_1_n_5 ;
  wire \init_iterator_reg[8]_i_1_n_6 ;
  wire \init_iterator_reg[8]_i_1_n_7 ;
  wire [15:6]init_iterator_reg__0;
  wire [31:0]input_data_length;
  wire input_data_reg_0_127_0_0_i_1_n_0;
  wire input_data_reg_0_127_0_0_n_0;
  wire input_data_reg_0_127_0_0_n_1;
  wire input_data_reg_128_255_0_0_i_1_n_0;
  wire input_data_reg_128_255_0_0_n_0;
  wire input_data_reg_128_255_0_0_n_1;
  wire [0:0]\k_reg[0] ;
  wire \k_rep[9]_i_3_n_0 ;
  wire \k_rep[9]_i_5_n_0 ;
  wire p_0_in;
  wire p_0_in__0;
  wire [7:2]p_1_in;
  wire [1:1]sequence_to_and1;
  wire \sequence_to_and[0]_i_1_n_0 ;
  wire \sequence_to_and[13]_i_2_n_0 ;
  wire \sequence_to_and[13]_i_3_n_0 ;
  wire \sequence_to_and[13]_i_4_n_0 ;
  wire \sequence_to_and[13]_i_5_n_0 ;
  wire \sequence_to_and[13]_i_6_n_0 ;
  wire \sequence_to_and[13]_i_7_n_0 ;
  wire \sequence_to_and[13]_i_8_n_0 ;
  wire \sequence_to_and[13]_i_9_n_0 ;
  wire \sequence_to_and[17]_i_10_n_0 ;
  wire \sequence_to_and[17]_i_2_n_0 ;
  wire \sequence_to_and[17]_i_3_n_0 ;
  wire \sequence_to_and[17]_i_4_n_0 ;
  wire \sequence_to_and[17]_i_5_n_0 ;
  wire \sequence_to_and[17]_i_6_n_0 ;
  wire \sequence_to_and[17]_i_7_n_0 ;
  wire \sequence_to_and[17]_i_8_n_0 ;
  wire \sequence_to_and[17]_i_9_n_0 ;
  wire \sequence_to_and[1]_i_1_n_0 ;
  wire \sequence_to_and[21]_i_2_n_0 ;
  wire \sequence_to_and[21]_i_3_n_0 ;
  wire \sequence_to_and[21]_i_4_n_0 ;
  wire \sequence_to_and[21]_i_5_n_0 ;
  wire \sequence_to_and[21]_i_6_n_0 ;
  wire \sequence_to_and[21]_i_7_n_0 ;
  wire \sequence_to_and[21]_i_8_n_0 ;
  wire \sequence_to_and[21]_i_9_n_0 ;
  wire \sequence_to_and[25]_i_2_n_0 ;
  wire \sequence_to_and[25]_i_3_n_0 ;
  wire \sequence_to_and[25]_i_4_n_0 ;
  wire \sequence_to_and[25]_i_5_n_0 ;
  wire \sequence_to_and[25]_i_6_n_0 ;
  wire \sequence_to_and[25]_i_7_n_0 ;
  wire \sequence_to_and[25]_i_8_n_0 ;
  wire \sequence_to_and[25]_i_9_n_0 ;
  wire \sequence_to_and[29]_i_2_n_0 ;
  wire \sequence_to_and[29]_i_3_n_0 ;
  wire \sequence_to_and[29]_i_4_n_0 ;
  wire \sequence_to_and[29]_i_5_n_0 ;
  wire \sequence_to_and[29]_i_6_n_0 ;
  wire \sequence_to_and[29]_i_7_n_0 ;
  wire \sequence_to_and[29]_i_8_n_0 ;
  wire \sequence_to_and[29]_i_9_n_0 ;
  wire \sequence_to_and[31]_i_1_n_0 ;
  wire \sequence_to_and[31]_i_2_n_0 ;
  wire \sequence_to_and[31]_i_4_n_0 ;
  wire \sequence_to_and[31]_i_5_n_0 ;
  wire \sequence_to_and[31]_i_6_n_0 ;
  wire \sequence_to_and[31]_i_7_n_0 ;
  wire \sequence_to_and[31]_i_8_n_0 ;
  wire \sequence_to_and[5]_i_10_n_0 ;
  wire \sequence_to_and[5]_i_3_n_0 ;
  wire \sequence_to_and[5]_i_4_n_0 ;
  wire \sequence_to_and[5]_i_5_n_0 ;
  wire \sequence_to_and[5]_i_6_n_0 ;
  wire \sequence_to_and[5]_i_7_n_0 ;
  wire \sequence_to_and[5]_i_8_n_0 ;
  wire \sequence_to_and[5]_i_9_n_0 ;
  wire \sequence_to_and[9]_i_2_n_0 ;
  wire \sequence_to_and[9]_i_3_n_0 ;
  wire \sequence_to_and[9]_i_4_n_0 ;
  wire \sequence_to_and[9]_i_5_n_0 ;
  wire \sequence_to_and[9]_i_6_n_0 ;
  wire \sequence_to_and[9]_i_7_n_0 ;
  wire \sequence_to_and[9]_i_8_n_0 ;
  wire \sequence_to_and[9]_i_9_n_0 ;
  wire \sequence_to_and_reg[13]_i_1_n_0 ;
  wire \sequence_to_and_reg[13]_i_1_n_1 ;
  wire \sequence_to_and_reg[13]_i_1_n_2 ;
  wire \sequence_to_and_reg[13]_i_1_n_3 ;
  wire \sequence_to_and_reg[17]_i_1_n_0 ;
  wire \sequence_to_and_reg[17]_i_1_n_1 ;
  wire \sequence_to_and_reg[17]_i_1_n_2 ;
  wire \sequence_to_and_reg[17]_i_1_n_3 ;
  wire \sequence_to_and_reg[21]_i_1_n_0 ;
  wire \sequence_to_and_reg[21]_i_1_n_1 ;
  wire \sequence_to_and_reg[21]_i_1_n_2 ;
  wire \sequence_to_and_reg[21]_i_1_n_3 ;
  wire \sequence_to_and_reg[25]_i_1_n_0 ;
  wire \sequence_to_and_reg[25]_i_1_n_1 ;
  wire \sequence_to_and_reg[25]_i_1_n_2 ;
  wire \sequence_to_and_reg[25]_i_1_n_3 ;
  wire \sequence_to_and_reg[29]_i_1_n_0 ;
  wire \sequence_to_and_reg[29]_i_1_n_1 ;
  wire \sequence_to_and_reg[29]_i_1_n_2 ;
  wire \sequence_to_and_reg[29]_i_1_n_3 ;
  wire \sequence_to_and_reg[31]_i_3_n_3 ;
  wire \sequence_to_and_reg[5]_i_1_n_0 ;
  wire \sequence_to_and_reg[5]_i_1_n_1 ;
  wire \sequence_to_and_reg[5]_i_1_n_2 ;
  wire \sequence_to_and_reg[5]_i_1_n_3 ;
  wire \sequence_to_and_reg[9]_i_1_n_0 ;
  wire \sequence_to_and_reg[9]_i_1_n_1 ;
  wire \sequence_to_and_reg[9]_i_1_n_2 ;
  wire \sequence_to_and_reg[9]_i_1_n_3 ;
  wire \sequence_to_and_reg_n_0_[0] ;
  wire \sequence_to_and_reg_n_0_[10] ;
  wire \sequence_to_and_reg_n_0_[11] ;
  wire \sequence_to_and_reg_n_0_[12] ;
  wire \sequence_to_and_reg_n_0_[13] ;
  wire \sequence_to_and_reg_n_0_[14] ;
  wire \sequence_to_and_reg_n_0_[15] ;
  wire \sequence_to_and_reg_n_0_[16] ;
  wire \sequence_to_and_reg_n_0_[17] ;
  wire \sequence_to_and_reg_n_0_[18] ;
  wire \sequence_to_and_reg_n_0_[19] ;
  wire \sequence_to_and_reg_n_0_[1] ;
  wire \sequence_to_and_reg_n_0_[20] ;
  wire \sequence_to_and_reg_n_0_[21] ;
  wire \sequence_to_and_reg_n_0_[22] ;
  wire \sequence_to_and_reg_n_0_[23] ;
  wire \sequence_to_and_reg_n_0_[24] ;
  wire \sequence_to_and_reg_n_0_[25] ;
  wire \sequence_to_and_reg_n_0_[26] ;
  wire \sequence_to_and_reg_n_0_[27] ;
  wire \sequence_to_and_reg_n_0_[28] ;
  wire \sequence_to_and_reg_n_0_[29] ;
  wire \sequence_to_and_reg_n_0_[2] ;
  wire \sequence_to_and_reg_n_0_[30] ;
  wire \sequence_to_and_reg_n_0_[31] ;
  wire \sequence_to_and_reg_n_0_[3] ;
  wire \sequence_to_and_reg_n_0_[4] ;
  wire \sequence_to_and_reg_n_0_[5] ;
  wire \sequence_to_and_reg_n_0_[6] ;
  wire \sequence_to_and_reg_n_0_[7] ;
  wire \sequence_to_and_reg_n_0_[8] ;
  wire \sequence_to_and_reg_n_0_[9] ;
  wire state;
  wire \state[0]_i_1_n_0 ;
  wire \state[0]_i_2_n_0 ;
  wire \state[1]_i_1_n_0 ;
  wire \state[2]_i_10_n_0 ;
  wire \state[2]_i_11_n_0 ;
  wire \state[2]_i_12_n_0 ;
  wire \state[2]_i_13_n_0 ;
  wire \state[2]_i_14_n_0 ;
  wire \state[2]_i_15_n_0 ;
  wire \state[2]_i_1_n_0 ;
  wire \state[2]_i_2_n_0 ;
  wire \state[2]_i_4__0_n_0 ;
  wire \state[2]_i_5_n_0 ;
  wire \state[2]_i_6_n_0 ;
  wire \state[2]_i_8_n_0 ;
  wire \state[2]_i_9_n_0 ;
  wire \state[3]_i_2_n_0 ;
  wire \state[3]_i_3_n_0 ;
  wire \state[3]_i_4_n_0 ;
  wire \state_reg[1]_0 ;
  wire \state_reg[1]_1 ;
  wire [1:0]\state_reg[2]_0 ;
  wire \state_reg[2]_1 ;
  wire \state_reg[2]_2 ;
  wire \state_reg[2]_i_2_n_1 ;
  wire \state_reg[2]_i_2_n_2 ;
  wire \state_reg[2]_i_2_n_3 ;
  wire \state_reg[2]_i_3_n_0 ;
  wire \state_reg[2]_i_3_n_1 ;
  wire \state_reg[2]_i_3_n_2 ;
  wire \state_reg[2]_i_3_n_3 ;
  wire \state_reg[2]_i_7_n_0 ;
  wire \state_reg[2]_i_7_n_1 ;
  wire \state_reg[2]_i_7_n_2 ;
  wire \state_reg[2]_i_7_n_3 ;
  wire [4:0]\state_reg[4] ;
  wire \state_reg_n_0_[0] ;
  wire \state_reg_n_0_[1] ;
  wire \state_reg_n_0_[2] ;
  wire \state_reg_n_0_[3] ;
  wire [7:0]sub_state2;
  wire [31:0]sub_state3;
  wire \sub_state[0]_i_10_n_0 ;
  wire \sub_state[0]_i_11_n_0 ;
  wire \sub_state[0]_i_12_n_0 ;
  wire \sub_state[0]_i_13_n_0 ;
  wire \sub_state[0]_i_14_n_0 ;
  wire \sub_state[0]_i_15_n_0 ;
  wire \sub_state[0]_i_16_n_0 ;
  wire \sub_state[0]_i_17_n_0 ;
  wire \sub_state[0]_i_18_n_0 ;
  wire \sub_state[0]_i_19_n_0 ;
  wire \sub_state[0]_i_1_n_0 ;
  wire \sub_state[0]_i_20_n_0 ;
  wire \sub_state[0]_i_21_n_0 ;
  wire \sub_state[0]_i_22_n_0 ;
  wire \sub_state[0]_i_23_n_0 ;
  wire \sub_state[0]_i_24_n_0 ;
  wire \sub_state[0]_i_25_n_0 ;
  wire \sub_state[0]_i_2_n_0 ;
  wire \sub_state[0]_i_3_n_0 ;
  wire \sub_state[0]_i_4_n_0 ;
  wire \sub_state[0]_i_8_n_0 ;
  wire \sub_state[0]_i_9_n_0 ;
  wire \sub_state[1]_i_10_n_0 ;
  wire \sub_state[1]_i_11_n_0 ;
  wire \sub_state[1]_i_12_n_0 ;
  wire \sub_state[1]_i_13_n_0 ;
  wire \sub_state[1]_i_14_n_0 ;
  wire \sub_state[1]_i_15_n_0 ;
  wire \sub_state[1]_i_16_n_0 ;
  wire \sub_state[1]_i_17_n_0 ;
  wire \sub_state[1]_i_18_n_0 ;
  wire \sub_state[1]_i_19_n_0 ;
  wire \sub_state[1]_i_1_n_0 ;
  wire \sub_state[1]_i_20_n_0 ;
  wire \sub_state[1]_i_21_n_0 ;
  wire \sub_state[1]_i_22_n_0 ;
  wire \sub_state[1]_i_23_n_0 ;
  wire \sub_state[1]_i_24_n_0 ;
  wire \sub_state[1]_i_25_n_0 ;
  wire \sub_state[1]_i_26_n_0 ;
  wire \sub_state[1]_i_2_n_0 ;
  wire \sub_state[1]_i_5_n_0 ;
  wire \sub_state[1]_i_6_n_0 ;
  wire \sub_state[1]_i_7_n_0 ;
  wire \sub_state[1]_i_9_n_0 ;
  wire \sub_state[2]_i_1_n_0 ;
  wire \sub_state[2]_i_2_n_0 ;
  wire \sub_state[3]_i_1_n_0 ;
  wire \sub_state[3]_i_2_n_0 ;
  wire \sub_state[3]_i_3_n_0 ;
  wire \sub_state[3]_i_4_n_0 ;
  wire \sub_state_reg[0]_i_5_n_0 ;
  wire \sub_state_reg[0]_i_5_n_1 ;
  wire \sub_state_reg[0]_i_5_n_2 ;
  wire \sub_state_reg[0]_i_5_n_3 ;
  wire \sub_state_reg[0]_i_6_n_0 ;
  wire \sub_state_reg[0]_i_6_n_1 ;
  wire \sub_state_reg[0]_i_6_n_2 ;
  wire \sub_state_reg[0]_i_6_n_3 ;
  wire \sub_state_reg[0]_i_7_n_0 ;
  wire \sub_state_reg[0]_i_7_n_1 ;
  wire \sub_state_reg[0]_i_7_n_2 ;
  wire \sub_state_reg[0]_i_7_n_3 ;
  wire \sub_state_reg[1]_i_3_n_1 ;
  wire \sub_state_reg[1]_i_3_n_2 ;
  wire \sub_state_reg[1]_i_3_n_3 ;
  wire \sub_state_reg[1]_i_4_n_0 ;
  wire \sub_state_reg[1]_i_4_n_1 ;
  wire \sub_state_reg[1]_i_4_n_2 ;
  wire \sub_state_reg[1]_i_4_n_3 ;
  wire \sub_state_reg[1]_i_8_n_0 ;
  wire \sub_state_reg[1]_i_8_n_1 ;
  wire \sub_state_reg[1]_i_8_n_2 ;
  wire \sub_state_reg[1]_i_8_n_3 ;
  wire \sub_state_reg_n_0_[0] ;
  wire \sub_state_reg_n_0_[1] ;
  wire \sub_state_reg_n_0_[2] ;
  wire \sub_state_reg_n_0_[3] ;
  wire \symbol_amount_var_reg_n_0_[0] ;
  wire \symbol_amount_var_reg_n_0_[1] ;
  wire \symbol_amount_var_reg_n_0_[4] ;
  wire \symbol_amount_var_reg_n_0_[5] ;
  wire [3:2]\NLW_bit_position_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_bit_position_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:3]\NLW_bits_counter_reg[12]_i_1_CO_UNCONNECTED ;
  wire [1:0]NLW_code_list_reg_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_code_list_reg_DOPBDOP_UNCONNECTED;
  wire [3:2]\NLW_code_position_reg[15]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_code_position_reg[15]_i_1_O_UNCONNECTED ;
  wire [3:0]\NLW_code_position_reg_rep[5]_i_15_O_UNCONNECTED ;
  wire [3:0]\NLW_code_position_reg_rep[5]_i_24_O_UNCONNECTED ;
  wire [3:0]\NLW_code_position_reg_rep[5]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_code_position_reg_rep[5]_i_6_O_UNCONNECTED ;
  wire [3:3]\NLW_code_value_reg[31]_i_3_CO_UNCONNECTED ;
  wire NLW_codes_lengths_reg_0_63_0_2_DOD_UNCONNECTED;
  wire NLW_codes_lengths_reg_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_codes_lengths_reg_0_63_6_7_DOC_UNCONNECTED;
  wire NLW_codes_lengths_reg_0_63_6_7_DOD_UNCONNECTED;
  wire [15:0]NLW_decoded_characters_array_reg_DOADO_UNCONNECTED;
  wire [15:8]NLW_decoded_characters_array_reg_DOBDO_UNCONNECTED;
  wire [1:0]NLW_decoded_characters_array_reg_DOPADOP_UNCONNECTED;
  wire [1:0]NLW_decoded_characters_array_reg_DOPBDOP_UNCONNECTED;
  wire [3:0]NLW_decoded_characters_array_reg_i_13_O_UNCONNECTED;
  wire [3:0]NLW_decoded_characters_array_reg_i_22_O_UNCONNECTED;
  wire [3:0]NLW_decoded_characters_array_reg_i_3_O_UNCONNECTED;
  wire [3:0]NLW_decoded_characters_array_reg_i_4_O_UNCONNECTED;
  wire [3:0]\NLW_decoded_chars_counter_reg[31]_i_10_O_UNCONNECTED ;
  wire [3:2]\NLW_decoded_chars_counter_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:3]\NLW_decoded_chars_counter_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:2]\NLW_decoded_chars_counter_reg[31]_i_6_CO_UNCONNECTED ;
  wire [3:0]\NLW_decoded_chars_counter_reg[31]_i_6_O_UNCONNECTED ;
  wire [3:2]\NLW_i_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_i_reg[31]_i_1_O_UNCONNECTED ;
  wire [3:3]\NLW_init_iterator_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_sequence_to_and_reg[31]_i_3_CO_UNCONNECTED ;
  wire [3:2]\NLW_sequence_to_and_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:3]\NLW_state_reg[2]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_state_reg[2]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_state_reg[2]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_state_reg[2]_i_7_O_UNCONNECTED ;
  wire [3:0]\NLW_sub_state_reg[0]_i_5_O_UNCONNECTED ;
  wire [3:0]\NLW_sub_state_reg[0]_i_6_O_UNCONNECTED ;
  wire [3:0]\NLW_sub_state_reg[0]_i_7_O_UNCONNECTED ;
  wire [3:3]\NLW_sub_state_reg[1]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_sub_state_reg[1]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_sub_state_reg[1]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_sub_state_reg[1]_i_8_O_UNCONNECTED ;
  wire NLW_symbols_reg_0_63_3_5_DOD_UNCONNECTED;
  wire NLW_symbols_reg_0_63_6_7_DOD_UNCONNECTED;

  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[0]_i_1_n_0 ),
        .Q(\bit_index_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[1]_i_1_n_0 ),
        .Q(\bit_index_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[2]_i_1_n_0 ),
        .Q(\bit_index_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[3]_i_1_n_0 ),
        .Q(\bit_index_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[4]_i_1_n_0 ),
        .Q(\bit_index_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[5]_i_1_n_0 ),
        .Q(\bit_index_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[6]_i_1_n_0 ),
        .Q(\bit_index_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[7]_i_2_n_0 ),
        .Q(\bit_index_reg_n_0_[7] ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg_rep[0] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[0]_i_1_n_0 ),
        .Q(\bit_index_reg_rep_n_0_[0] ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg_rep[1] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[1]_i_1_n_0 ),
        .Q(\bit_index_reg_rep_n_0_[1] ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg_rep[2] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[2]_i_1_n_0 ),
        .Q(\bit_index_reg_rep_n_0_[2] ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg_rep[3] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[3]_i_1_n_0 ),
        .Q(\bit_index_reg_rep_n_0_[3] ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg_rep[4] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[4]_i_1_n_0 ),
        .Q(\bit_index_reg_rep_n_0_[4] ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg_rep[5] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[5]_i_1_n_0 ),
        .Q(\bit_index_reg_rep_n_0_[5] ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg_rep[6] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[6]_i_1_n_0 ),
        .Q(\bit_index_reg_rep_n_0_[6] ),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \bit_index_reg_rep[7] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\bit_index_rep[7]_i_2_n_0 ),
        .Q(\bit_index_reg_rep_n_0_[7] ),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h74)) 
    \bit_index_rep[0]_i_1 
       (.I0(\bit_index_reg_n_0_[0] ),
        .I1(\sub_state_reg_n_0_[3] ),
        .I2(\bit_position_reg_n_0_[0] ),
        .O(\bit_index_rep[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE22E)) 
    \bit_index_rep[1]_i_1 
       (.I0(\bit_position_reg_n_0_[1] ),
        .I1(\sub_state_reg_n_0_[3] ),
        .I2(\bit_index_reg_n_0_[0] ),
        .I3(\bit_index_reg_n_0_[1] ),
        .O(\bit_index_rep[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFC03AAAA)) 
    \bit_index_rep[2]_i_1 
       (.I0(\bit_position_reg_n_0_[2] ),
        .I1(\bit_index_reg_n_0_[1] ),
        .I2(\bit_index_reg_n_0_[0] ),
        .I3(\bit_index_reg_n_0_[2] ),
        .I4(\sub_state_reg_n_0_[3] ),
        .O(\bit_index_rep[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFC0003AAAAAAAA)) 
    \bit_index_rep[3]_i_1 
       (.I0(\bit_position_reg_n_0_[3] ),
        .I1(\bit_index_reg_n_0_[2] ),
        .I2(\bit_index_reg_n_0_[0] ),
        .I3(\bit_index_reg_n_0_[1] ),
        .I4(\bit_index_reg_n_0_[3] ),
        .I5(\sub_state_reg_n_0_[3] ),
        .O(\bit_index_rep[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hC3AA)) 
    \bit_index_rep[4]_i_1 
       (.I0(\bit_position_reg_n_0_[4] ),
        .I1(\bit_index_rep[4]_i_2_n_0 ),
        .I2(\bit_index_reg_n_0_[4] ),
        .I3(\sub_state_reg_n_0_[3] ),
        .O(\bit_index_rep[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \bit_index_rep[4]_i_2 
       (.I0(\bit_index_reg_n_0_[2] ),
        .I1(\bit_index_reg_n_0_[0] ),
        .I2(\bit_index_reg_n_0_[1] ),
        .I3(\bit_index_reg_n_0_[3] ),
        .O(\bit_index_rep[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hC3AA)) 
    \bit_index_rep[5]_i_1 
       (.I0(\bit_position_reg_n_0_[5] ),
        .I1(\bit_index_rep[5]_i_2_n_0 ),
        .I2(\bit_index_reg_n_0_[5] ),
        .I3(\sub_state_reg_n_0_[3] ),
        .O(\bit_index_rep[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \bit_index_rep[5]_i_2 
       (.I0(\bit_index_reg_n_0_[3] ),
        .I1(\bit_index_reg_n_0_[1] ),
        .I2(\bit_index_reg_n_0_[0] ),
        .I3(\bit_index_reg_n_0_[2] ),
        .I4(\bit_index_reg_n_0_[4] ),
        .O(\bit_index_rep[5]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hC3AA)) 
    \bit_index_rep[6]_i_1 
       (.I0(\bit_position_reg_n_0_[6] ),
        .I1(\bit_index_rep[7]_i_5_n_0 ),
        .I2(\bit_index_reg_n_0_[6] ),
        .I3(\sub_state_reg_n_0_[3] ),
        .O(\bit_index_rep[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000000E)) 
    \bit_index_rep[7]_i_1 
       (.I0(\sub_state_reg_n_0_[3] ),
        .I1(\code_position_reg_rep[5]_i_4_n_0 ),
        .I2(\sub_state_reg_n_0_[2] ),
        .I3(\sub_state_reg_n_0_[1] ),
        .I4(\bit_index_rep[7]_i_3_n_0 ),
        .I5(\bit_index_rep[7]_i_4_n_0 ),
        .O(bit_index));
  LUT5 #(
    .INIT(32'hFCAA03AA)) 
    \bit_index_rep[7]_i_2 
       (.I0(\bit_position_reg_n_0_[7] ),
        .I1(\bit_index_rep[7]_i_5_n_0 ),
        .I2(\bit_index_reg_n_0_[6] ),
        .I3(\sub_state_reg_n_0_[3] ),
        .I4(\bit_index_reg_n_0_[7] ),
        .O(\bit_index_rep[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \bit_index_rep[7]_i_3 
       (.I0(\sub_state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .O(\bit_index_rep[7]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \bit_index_rep[7]_i_4 
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[2] ),
        .O(\bit_index_rep[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \bit_index_rep[7]_i_5 
       (.I0(\bit_index_reg_n_0_[4] ),
        .I1(\bit_index_reg_n_0_[2] ),
        .I2(\bit_index_reg_n_0_[0] ),
        .I3(\bit_index_reg_n_0_[1] ),
        .I4(\bit_index_reg_n_0_[3] ),
        .I5(\bit_index_reg_n_0_[5] ),
        .O(\bit_index_rep[7]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \bit_position[0]_i_1 
       (.I0(\bit_position_reg_n_0_[0] ),
        .O(\bit_position[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[12]_i_2 
       (.I0(\bit_position_reg_n_0_[12] ),
        .O(\bit_position[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[12]_i_3 
       (.I0(\bit_position_reg_n_0_[11] ),
        .O(\bit_position[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[12]_i_4 
       (.I0(\bit_position_reg_n_0_[10] ),
        .O(\bit_position[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[12]_i_5 
       (.I0(\bit_position_reg_n_0_[9] ),
        .O(\bit_position[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[16]_i_2 
       (.I0(\bit_position_reg_n_0_[16] ),
        .O(\bit_position[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[16]_i_3 
       (.I0(\bit_position_reg_n_0_[15] ),
        .O(\bit_position[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[16]_i_4 
       (.I0(\bit_position_reg_n_0_[14] ),
        .O(\bit_position[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[16]_i_5 
       (.I0(\bit_position_reg_n_0_[13] ),
        .O(\bit_position[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[20]_i_2 
       (.I0(\bit_position_reg_n_0_[20] ),
        .O(\bit_position[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[20]_i_3 
       (.I0(\bit_position_reg_n_0_[19] ),
        .O(\bit_position[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[20]_i_4 
       (.I0(\bit_position_reg_n_0_[18] ),
        .O(\bit_position[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[20]_i_5 
       (.I0(\bit_position_reg_n_0_[17] ),
        .O(\bit_position[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[24]_i_2 
       (.I0(\bit_position_reg_n_0_[24] ),
        .O(\bit_position[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[24]_i_3 
       (.I0(\bit_position_reg_n_0_[23] ),
        .O(\bit_position[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[24]_i_4 
       (.I0(\bit_position_reg_n_0_[22] ),
        .O(\bit_position[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[24]_i_5 
       (.I0(\bit_position_reg_n_0_[21] ),
        .O(\bit_position[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[28]_i_2 
       (.I0(\bit_position_reg_n_0_[28] ),
        .O(\bit_position[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[28]_i_3 
       (.I0(\bit_position_reg_n_0_[27] ),
        .O(\bit_position[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[28]_i_4 
       (.I0(\bit_position_reg_n_0_[26] ),
        .O(\bit_position[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[28]_i_5 
       (.I0(\bit_position_reg_n_0_[25] ),
        .O(\bit_position[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000202000002FF)) 
    \bit_position[31]_i_1 
       (.I0(\decoded_chars_counter[31]_i_4_n_0 ),
        .I1(\sub_state_reg_n_0_[2] ),
        .I2(\sub_state_reg[0]_i_5_n_0 ),
        .I3(\bit_index_rep[7]_i_4_n_0 ),
        .I4(\state_reg_n_0_[1] ),
        .I5(p_0_in__0),
        .O(\bit_position[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h02020202020202FF)) 
    \bit_position[31]_i_2 
       (.I0(\decoded_chars_counter[31]_i_4_n_0 ),
        .I1(\sub_state_reg_n_0_[2] ),
        .I2(\sub_state_reg[0]_i_5_n_0 ),
        .I3(\bit_index_rep[7]_i_4_n_0 ),
        .I4(\state_reg_n_0_[1] ),
        .I5(p_0_in__0),
        .O(\bit_position[31]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[31]_i_4 
       (.I0(\bit_position_reg_n_0_[31] ),
        .O(\bit_position[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[31]_i_5 
       (.I0(\bit_position_reg_n_0_[30] ),
        .O(\bit_position[31]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[31]_i_6 
       (.I0(\bit_position_reg_n_0_[29] ),
        .O(\bit_position[31]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[4]_i_2 
       (.I0(\bit_position_reg_n_0_[4] ),
        .O(\bit_position[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[4]_i_3 
       (.I0(\bit_position_reg_n_0_[3] ),
        .O(\bit_position[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[4]_i_4 
       (.I0(\bit_position_reg_n_0_[2] ),
        .O(\bit_position[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[4]_i_5 
       (.I0(\bit_position_reg_n_0_[1] ),
        .O(\bit_position[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[8]_i_2 
       (.I0(\bit_position_reg_n_0_[8] ),
        .O(\bit_position[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[8]_i_3 
       (.I0(\bit_position_reg_n_0_[7] ),
        .O(\bit_position[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[8]_i_4 
       (.I0(\bit_position_reg_n_0_[6] ),
        .O(\bit_position[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bit_position[8]_i_5 
       (.I0(\bit_position_reg_n_0_[5] ),
        .O(\bit_position[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(\bit_position[0]_i_1_n_0 ),
        .Q(\bit_position_reg_n_0_[0] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[10]),
        .Q(\bit_position_reg_n_0_[10] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[11]),
        .Q(\bit_position_reg_n_0_[11] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[12]),
        .Q(\bit_position_reg_n_0_[12] ),
        .R(\bit_position[31]_i_1_n_0 ));
  CARRY4 \bit_position_reg[12]_i_1 
       (.CI(\bit_position_reg[8]_i_1_n_0 ),
        .CO({\bit_position_reg[12]_i_1_n_0 ,\bit_position_reg[12]_i_1_n_1 ,\bit_position_reg[12]_i_1_n_2 ,\bit_position_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(bit_position0[12:9]),
        .S({\bit_position[12]_i_2_n_0 ,\bit_position[12]_i_3_n_0 ,\bit_position[12]_i_4_n_0 ,\bit_position[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[13]),
        .Q(\bit_position_reg_n_0_[13] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[14]),
        .Q(\bit_position_reg_n_0_[14] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[15]),
        .Q(\bit_position_reg_n_0_[15] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[16]),
        .Q(\bit_position_reg_n_0_[16] ),
        .R(\bit_position[31]_i_1_n_0 ));
  CARRY4 \bit_position_reg[16]_i_1 
       (.CI(\bit_position_reg[12]_i_1_n_0 ),
        .CO({\bit_position_reg[16]_i_1_n_0 ,\bit_position_reg[16]_i_1_n_1 ,\bit_position_reg[16]_i_1_n_2 ,\bit_position_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(bit_position0[16:13]),
        .S({\bit_position[16]_i_2_n_0 ,\bit_position[16]_i_3_n_0 ,\bit_position[16]_i_4_n_0 ,\bit_position[16]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[17]),
        .Q(\bit_position_reg_n_0_[17] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[18]),
        .Q(\bit_position_reg_n_0_[18] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[19]),
        .Q(\bit_position_reg_n_0_[19] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[1]),
        .Q(\bit_position_reg_n_0_[1] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[20]),
        .Q(\bit_position_reg_n_0_[20] ),
        .R(\bit_position[31]_i_1_n_0 ));
  CARRY4 \bit_position_reg[20]_i_1 
       (.CI(\bit_position_reg[16]_i_1_n_0 ),
        .CO({\bit_position_reg[20]_i_1_n_0 ,\bit_position_reg[20]_i_1_n_1 ,\bit_position_reg[20]_i_1_n_2 ,\bit_position_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(bit_position0[20:17]),
        .S({\bit_position[20]_i_2_n_0 ,\bit_position[20]_i_3_n_0 ,\bit_position[20]_i_4_n_0 ,\bit_position[20]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[21]),
        .Q(\bit_position_reg_n_0_[21] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[22]),
        .Q(\bit_position_reg_n_0_[22] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[23]),
        .Q(\bit_position_reg_n_0_[23] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[24]),
        .Q(\bit_position_reg_n_0_[24] ),
        .R(\bit_position[31]_i_1_n_0 ));
  CARRY4 \bit_position_reg[24]_i_1 
       (.CI(\bit_position_reg[20]_i_1_n_0 ),
        .CO({\bit_position_reg[24]_i_1_n_0 ,\bit_position_reg[24]_i_1_n_1 ,\bit_position_reg[24]_i_1_n_2 ,\bit_position_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(bit_position0[24:21]),
        .S({\bit_position[24]_i_2_n_0 ,\bit_position[24]_i_3_n_0 ,\bit_position[24]_i_4_n_0 ,\bit_position[24]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[25]),
        .Q(\bit_position_reg_n_0_[25] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[26]),
        .Q(\bit_position_reg_n_0_[26] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[27]),
        .Q(\bit_position_reg_n_0_[27] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[28]),
        .Q(\bit_position_reg_n_0_[28] ),
        .R(\bit_position[31]_i_1_n_0 ));
  CARRY4 \bit_position_reg[28]_i_1 
       (.CI(\bit_position_reg[24]_i_1_n_0 ),
        .CO({\bit_position_reg[28]_i_1_n_0 ,\bit_position_reg[28]_i_1_n_1 ,\bit_position_reg[28]_i_1_n_2 ,\bit_position_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(bit_position0[28:25]),
        .S({\bit_position[28]_i_2_n_0 ,\bit_position[28]_i_3_n_0 ,\bit_position[28]_i_4_n_0 ,\bit_position[28]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[29]),
        .Q(\bit_position_reg_n_0_[29] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[2]),
        .Q(\bit_position_reg_n_0_[2] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[30]),
        .Q(\bit_position_reg_n_0_[30] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[31]),
        .Q(\bit_position_reg_n_0_[31] ),
        .R(\bit_position[31]_i_1_n_0 ));
  CARRY4 \bit_position_reg[31]_i_3 
       (.CI(\bit_position_reg[28]_i_1_n_0 ),
        .CO({\NLW_bit_position_reg[31]_i_3_CO_UNCONNECTED [3:2],\bit_position_reg[31]_i_3_n_2 ,\bit_position_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_bit_position_reg[31]_i_3_O_UNCONNECTED [3],bit_position0[31:29]}),
        .S({1'b0,\bit_position[31]_i_4_n_0 ,\bit_position[31]_i_5_n_0 ,\bit_position[31]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[3]),
        .Q(\bit_position_reg_n_0_[3] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[4]),
        .Q(\bit_position_reg_n_0_[4] ),
        .R(\bit_position[31]_i_1_n_0 ));
  CARRY4 \bit_position_reg[4]_i_1 
       (.CI(1'b0),
        .CO({\bit_position_reg[4]_i_1_n_0 ,\bit_position_reg[4]_i_1_n_1 ,\bit_position_reg[4]_i_1_n_2 ,\bit_position_reg[4]_i_1_n_3 }),
        .CYINIT(\bit_position_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(bit_position0[4:1]),
        .S({\bit_position[4]_i_2_n_0 ,\bit_position[4]_i_3_n_0 ,\bit_position[4]_i_4_n_0 ,\bit_position[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[5]),
        .Q(\bit_position_reg_n_0_[5] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[6]),
        .Q(\bit_position_reg_n_0_[6] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[7]),
        .Q(\bit_position_reg_n_0_[7] ),
        .R(\bit_position[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[8]),
        .Q(\bit_position_reg_n_0_[8] ),
        .R(\bit_position[31]_i_1_n_0 ));
  CARRY4 \bit_position_reg[8]_i_1 
       (.CI(\bit_position_reg[4]_i_1_n_0 ),
        .CO({\bit_position_reg[8]_i_1_n_0 ,\bit_position_reg[8]_i_1_n_1 ,\bit_position_reg[8]_i_1_n_2 ,\bit_position_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(bit_position0[8:5]),
        .S({\bit_position[8]_i_2_n_0 ,\bit_position[8]_i_3_n_0 ,\bit_position[8]_i_4_n_0 ,\bit_position[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bit_position_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\bit_position[31]_i_2_n_0 ),
        .D(bit_position0[9]),
        .Q(\bit_position_reg_n_0_[9] ),
        .R(\bit_position[31]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \bits_counter[0]_i_1 
       (.I0(\state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[0] ),
        .O(\bits_counter[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[0]_i_3 
       (.I0(bits_counter_reg[3]),
        .O(\bits_counter[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[0]_i_4 
       (.I0(bits_counter_reg[2]),
        .O(\bits_counter[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[0]_i_5 
       (.I0(bits_counter_reg[1]),
        .O(\bits_counter[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \bits_counter[0]_i_6 
       (.I0(bits_counter_reg[0]),
        .O(\bits_counter[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[12]_i_2 
       (.I0(bits_counter_reg__0[15]),
        .O(\bits_counter[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[12]_i_3 
       (.I0(bits_counter_reg__0[14]),
        .O(\bits_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[12]_i_4 
       (.I0(bits_counter_reg__0[13]),
        .O(\bits_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[12]_i_5 
       (.I0(bits_counter_reg__0[12]),
        .O(\bits_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[4]_i_2 
       (.I0(bits_counter_reg[7]),
        .O(\bits_counter[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[4]_i_3 
       (.I0(bits_counter_reg[6]),
        .O(\bits_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[4]_i_4 
       (.I0(bits_counter_reg[5]),
        .O(\bits_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[4]_i_5 
       (.I0(bits_counter_reg[4]),
        .O(\bits_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[8]_i_2 
       (.I0(bits_counter_reg__0[11]),
        .O(\bits_counter[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[8]_i_3 
       (.I0(bits_counter_reg__0[10]),
        .O(\bits_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[8]_i_4 
       (.I0(bits_counter_reg[9]),
        .O(\bits_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \bits_counter[8]_i_5 
       (.I0(bits_counter_reg[8]),
        .O(\bits_counter[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[0]_i_2_n_7 ),
        .Q(bits_counter_reg[0]),
        .R(1'b0));
  CARRY4 \bits_counter_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\bits_counter_reg[0]_i_2_n_0 ,\bits_counter_reg[0]_i_2_n_1 ,\bits_counter_reg[0]_i_2_n_2 ,\bits_counter_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\bits_counter_reg[0]_i_2_n_4 ,\bits_counter_reg[0]_i_2_n_5 ,\bits_counter_reg[0]_i_2_n_6 ,\bits_counter_reg[0]_i_2_n_7 }),
        .S({\bits_counter[0]_i_3_n_0 ,\bits_counter[0]_i_4_n_0 ,\bits_counter[0]_i_5_n_0 ,\bits_counter[0]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[8]_i_1_n_5 ),
        .Q(bits_counter_reg__0[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[8]_i_1_n_4 ),
        .Q(bits_counter_reg__0[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[12]_i_1_n_7 ),
        .Q(bits_counter_reg__0[12]),
        .R(1'b0));
  CARRY4 \bits_counter_reg[12]_i_1 
       (.CI(\bits_counter_reg[8]_i_1_n_0 ),
        .CO({\NLW_bits_counter_reg[12]_i_1_CO_UNCONNECTED [3],\bits_counter_reg[12]_i_1_n_1 ,\bits_counter_reg[12]_i_1_n_2 ,\bits_counter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\bits_counter_reg[12]_i_1_n_4 ,\bits_counter_reg[12]_i_1_n_5 ,\bits_counter_reg[12]_i_1_n_6 ,\bits_counter_reg[12]_i_1_n_7 }),
        .S({\bits_counter[12]_i_2_n_0 ,\bits_counter[12]_i_3_n_0 ,\bits_counter[12]_i_4_n_0 ,\bits_counter[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[12]_i_1_n_6 ),
        .Q(bits_counter_reg__0[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[12]_i_1_n_5 ),
        .Q(bits_counter_reg__0[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[12]_i_1_n_4 ),
        .Q(bits_counter_reg__0[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[0]_i_2_n_6 ),
        .Q(bits_counter_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[0]_i_2_n_5 ),
        .Q(bits_counter_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[0]_i_2_n_4 ),
        .Q(bits_counter_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[4]_i_1_n_7 ),
        .Q(bits_counter_reg[4]),
        .R(1'b0));
  CARRY4 \bits_counter_reg[4]_i_1 
       (.CI(\bits_counter_reg[0]_i_2_n_0 ),
        .CO({\bits_counter_reg[4]_i_1_n_0 ,\bits_counter_reg[4]_i_1_n_1 ,\bits_counter_reg[4]_i_1_n_2 ,\bits_counter_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\bits_counter_reg[4]_i_1_n_4 ,\bits_counter_reg[4]_i_1_n_5 ,\bits_counter_reg[4]_i_1_n_6 ,\bits_counter_reg[4]_i_1_n_7 }),
        .S({\bits_counter[4]_i_2_n_0 ,\bits_counter[4]_i_3_n_0 ,\bits_counter[4]_i_4_n_0 ,\bits_counter[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[4]_i_1_n_6 ),
        .Q(bits_counter_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[4]_i_1_n_5 ),
        .Q(bits_counter_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[4]_i_1_n_4 ),
        .Q(bits_counter_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[8]_i_1_n_7 ),
        .Q(bits_counter_reg[8]),
        .R(1'b0));
  CARRY4 \bits_counter_reg[8]_i_1 
       (.CI(\bits_counter_reg[4]_i_1_n_0 ),
        .CO({\bits_counter_reg[8]_i_1_n_0 ,\bits_counter_reg[8]_i_1_n_1 ,\bits_counter_reg[8]_i_1_n_2 ,\bits_counter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\bits_counter_reg[8]_i_1_n_4 ,\bits_counter_reg[8]_i_1_n_5 ,\bits_counter_reg[8]_i_1_n_6 ,\bits_counter_reg[8]_i_1_n_7 }),
        .S({\bits_counter[8]_i_2_n_0 ,\bits_counter[8]_i_3_n_0 ,\bits_counter[8]_i_4_n_0 ,\bits_counter[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \bits_counter_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\bits_counter[0]_i_1_n_0 ),
        .D(\bits_counter_reg[8]_i_1_n_6 ),
        .Q(bits_counter_reg[9]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hDF)) 
    \character_length[0]_i_1 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\sub_state_reg_n_0_[0] ),
        .I2(character_length[0]),
        .O(\character_length[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0440)) 
    \character_length[1]_i_1 
       (.I0(\sub_state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(character_length[1]),
        .I3(character_length[0]),
        .O(\character_length[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h04444000)) 
    \character_length[2]_i_1 
       (.I0(\sub_state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[1] ),
        .I2(character_length[1]),
        .I3(character_length[0]),
        .I4(character_length[2]),
        .O(\character_length[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1030303020000000)) 
    \character_length[3]_i_1 
       (.I0(character_length[2]),
        .I1(\sub_state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .I5(character_length[3]),
        .O(\character_length[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00007FFF00008000)) 
    \character_length[4]_i_1 
       (.I0(character_length[3]),
        .I1(character_length[2]),
        .I2(character_length[1]),
        .I3(character_length[0]),
        .I4(\bit_index_rep[7]_i_3_n_0 ),
        .I5(character_length[4]),
        .O(\character_length[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000BFFF00004000)) 
    \character_length[5]_i_1 
       (.I0(\character_length[5]_i_2_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[4]),
        .I4(\bit_index_rep[7]_i_3_n_0 ),
        .I5(character_length[5]),
        .O(\character_length[5]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \character_length[5]_i_2 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .O(\character_length[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000DF0000002000)) 
    \character_length[6]_i_1 
       (.I0(character_length[4]),
        .I1(\character_length[7]_i_3_n_0 ),
        .I2(character_length[5]),
        .I3(\state_reg_n_0_[1] ),
        .I4(\sub_state_reg_n_0_[0] ),
        .I5(character_length[6]),
        .O(\character_length[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h00040000000400FF)) 
    \character_length[7]_i_1 
       (.I0(\sub_state_reg_n_0_[3] ),
        .I1(\sub_state_reg_n_0_[2] ),
        .I2(\sub_state_reg_n_0_[1] ),
        .I3(\bit_index_rep[7]_i_4_n_0 ),
        .I4(\state_reg_n_0_[1] ),
        .I5(p_0_in__0),
        .O(character_length0));
  LUT6 #(
    .INIT(64'h0000DFFF00002000)) 
    \character_length[7]_i_2 
       (.I0(character_length[5]),
        .I1(\character_length[7]_i_3_n_0 ),
        .I2(character_length[4]),
        .I3(character_length[6]),
        .I4(\bit_index_rep[7]_i_3_n_0 ),
        .I5(character_length[7]),
        .O(\character_length[7]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \character_length[7]_i_3 
       (.I0(character_length[3]),
        .I1(character_length[2]),
        .I2(character_length[1]),
        .I3(character_length[0]),
        .O(\character_length[7]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \character_length_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(character_length0),
        .D(\character_length[0]_i_1_n_0 ),
        .Q(character_length[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \character_length_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(character_length0),
        .D(\character_length[1]_i_1_n_0 ),
        .Q(character_length[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \character_length_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(character_length0),
        .D(\character_length[2]_i_1_n_0 ),
        .Q(character_length[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \character_length_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(character_length0),
        .D(\character_length[3]_i_1_n_0 ),
        .Q(character_length[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \character_length_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(character_length0),
        .D(\character_length[4]_i_1_n_0 ),
        .Q(character_length[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \character_length_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(character_length0),
        .D(\character_length[5]_i_1_n_0 ),
        .Q(character_length[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \character_length_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(character_length0),
        .D(\character_length[6]_i_1_n_0 ),
        .Q(character_length[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \character_length_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(character_length0),
        .D(\character_length[7]_i_2_n_0 ),
        .Q(character_length[7]),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h74)) 
    \code_index[0]_i_1 
       (.I0(code_index[0]),
        .I1(\sub_state_reg_n_0_[3] ),
        .I2(character_length[0]),
        .O(\code_index[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hE22E)) 
    \code_index[1]_i_1 
       (.I0(character_length[1]),
        .I1(\sub_state_reg_n_0_[3] ),
        .I2(code_index[0]),
        .I3(code_index[1]),
        .O(\code_index[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFCAA03AA)) 
    \code_index[2]_i_1 
       (.I0(character_length[2]),
        .I1(code_index[0]),
        .I2(code_index[1]),
        .I3(\sub_state_reg_n_0_[3] ),
        .I4(code_index[2]),
        .O(\code_index[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFF000F0EEF011F0)) 
    \code_index[3]_i_1 
       (.I0(code_index[0]),
        .I1(code_index[1]),
        .I2(character_length[3]),
        .I3(\sub_state_reg_n_0_[3] ),
        .I4(code_index[3]),
        .I5(code_index[2]),
        .O(\code_index[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFC0003AAAAAAAA)) 
    \code_index[4]_i_1 
       (.I0(character_length[4]),
        .I1(code_index[0]),
        .I2(code_index[1]),
        .I3(\code_index[4]_i_2_n_0 ),
        .I4(code_index[4]),
        .I5(\sub_state_reg_n_0_[3] ),
        .O(\code_index[4]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \code_index[4]_i_2 
       (.I0(code_index[2]),
        .I1(code_index[3]),
        .O(\code_index[4]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hC3AA)) 
    \code_index[5]_i_1 
       (.I0(character_length[5]),
        .I1(\code_index[6]_i_2_n_0 ),
        .I2(code_index[5]),
        .I3(\sub_state_reg_n_0_[3] ),
        .O(\code_index[5]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFCAA03AA)) 
    \code_index[6]_i_1 
       (.I0(character_length[6]),
        .I1(\code_index[6]_i_2_n_0 ),
        .I2(code_index[5]),
        .I3(\sub_state_reg_n_0_[3] ),
        .I4(code_index[6]),
        .O(\code_index[6]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \code_index[6]_i_2 
       (.I0(code_index[0]),
        .I1(code_index[1]),
        .I2(code_index[2]),
        .I3(code_index[3]),
        .I4(code_index[4]),
        .O(\code_index[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFCAAAA0003AAAA)) 
    \code_index[7]_i_1 
       (.I0(character_length[7]),
        .I1(code_index[4]),
        .I2(\sub_state[3]_i_4_n_0 ),
        .I3(\code_index[7]_i_2_n_0 ),
        .I4(\sub_state_reg_n_0_[3] ),
        .I5(code_index[7]),
        .O(\code_index[7]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \code_index[7]_i_2 
       (.I0(code_index[5]),
        .I1(code_index[6]),
        .O(\code_index[7]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_index_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\code_index[0]_i_1_n_0 ),
        .Q(code_index[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_index_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\code_index[1]_i_1_n_0 ),
        .Q(code_index[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_index_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\code_index[2]_i_1_n_0 ),
        .Q(code_index[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_index_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\code_index[3]_i_1_n_0 ),
        .Q(code_index[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_index_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\code_index[4]_i_1_n_0 ),
        .Q(code_index[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_index_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\code_index[5]_i_1_n_0 ),
        .Q(code_index[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_index_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\code_index[6]_i_1_n_0 ),
        .Q(code_index[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_index_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(bit_index),
        .D(\code_index[7]_i_1_n_0 ),
        .Q(code_index[7]),
        .R(1'b0));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d32" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d32" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-16 {cell *THIS*}} {SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "1600" *) 
  (* RTL_RAM_NAME = "code_list" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "511" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "31" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .RAM_MODE("SDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(36),
    .READ_WIDTH_B(0),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(0),
    .WRITE_WIDTH_B(36)) 
    code_list_reg
       (.ADDRARDADDR({1'b1,1'b1,1'b1,code_list_reg_i_1_n_0,code_list_reg_i_2_n_0,code_list_reg_i_3_n_0,code_list_reg_i_4_n_0,code_list_reg_i_5_n_0,code_list_reg_i_6_n_0,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,init_iterator_reg,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CLKARDCLK(clock_IBUF_BUFG),
        .CLKBWRCLK(clock_IBUF_BUFG),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DIPADIP({1'b1,1'b1}),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO(sub_state3[15:0]),
        .DOBDO(sub_state3[31:16]),
        .DOPADOP(NLW_code_list_reg_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_code_list_reg_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b0,1'b0}),
        .WEBWE({codes_lengths_reg_0_63_0_2_i_1_n_0,codes_lengths_reg_0_63_0_2_i_1_n_0,codes_lengths_reg_0_63_0_2_i_1_n_0,codes_lengths_reg_0_63_0_2_i_1_n_0}));
  LUT6 #(
    .INIT(64'hAAC0FFFFAAC00000)) 
    code_list_reg_i_1
       (.I0(code_position0[5]),
        .I1(\symbol_amount_var_reg_n_0_[5] ),
        .I2(\sub_state_reg_n_0_[2] ),
        .I3(\sub_state_reg_n_0_[0] ),
        .I4(\code_position_reg[0]_0 ),
        .I5(code_list_reg_i_7),
        .O(code_list_reg_i_1_n_0));
  LUT6 #(
    .INIT(64'hAAC0FFFFAAC00000)) 
    code_list_reg_i_2
       (.I0(code_position0[4]),
        .I1(\symbol_amount_var_reg_n_0_[4] ),
        .I2(\sub_state_reg_n_0_[2] ),
        .I3(\sub_state_reg_n_0_[0] ),
        .I4(\code_position_reg[0]_0 ),
        .I5(code_list_reg_i_8),
        .O(code_list_reg_i_2_n_0));
  LUT4 #(
    .INIT(16'h8F80)) 
    code_list_reg_i_3
       (.I0(\sub_state_reg_n_0_[0] ),
        .I1(O[1]),
        .I2(\code_position_reg[0]_0 ),
        .I3(code_list_reg_i_9),
        .O(code_list_reg_i_3_n_0));
  LUT4 #(
    .INIT(16'h8F80)) 
    code_list_reg_i_4
       (.I0(\sub_state_reg_n_0_[0] ),
        .I1(O[0]),
        .I2(\code_position_reg[0]_0 ),
        .I3(code_list_reg_i_10),
        .O(code_list_reg_i_4_n_0));
  LUT6 #(
    .INIT(64'hAAC0FFFFAAC00000)) 
    code_list_reg_i_5
       (.I0(code_position0[1]),
        .I1(\symbol_amount_var_reg_n_0_[1] ),
        .I2(\sub_state_reg_n_0_[2] ),
        .I3(\sub_state_reg_n_0_[0] ),
        .I4(\code_position_reg[0]_0 ),
        .I5(code_list_reg_i_11),
        .O(code_list_reg_i_5_n_0));
  LUT6 #(
    .INIT(64'h55C0FFFF55C00000)) 
    code_list_reg_i_6
       (.I0(\code_position_reg_n_0_[0] ),
        .I1(\symbol_amount_var_reg_n_0_[0] ),
        .I2(\sub_state_reg_n_0_[2] ),
        .I3(\sub_state_reg_n_0_[0] ),
        .I4(\code_position_reg[0]_0 ),
        .I5(code_list_reg_i_12),
        .O(code_list_reg_i_6_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[12]_i_2 
       (.I0(\code_position_reg_n_0_[12] ),
        .O(\code_position[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[12]_i_3 
       (.I0(\code_position_reg_n_0_[11] ),
        .O(\code_position[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[12]_i_4 
       (.I0(\code_position_reg_n_0_[10] ),
        .O(\code_position[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[12]_i_5 
       (.I0(\code_position_reg_n_0_[9] ),
        .O(\code_position[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[15]_i_2 
       (.I0(\code_position_reg_n_0_[15] ),
        .O(\code_position[15]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[15]_i_3 
       (.I0(\code_position_reg_n_0_[14] ),
        .O(\code_position[15]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[15]_i_4 
       (.I0(\code_position_reg_n_0_[13] ),
        .O(\code_position[15]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[8]_i_2 
       (.I0(\code_position_reg_n_0_[8] ),
        .O(\code_position[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[8]_i_3 
       (.I0(\code_position_reg_n_0_[7] ),
        .O(\code_position[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[8]_i_4 
       (.I0(\code_position_reg_n_0_[6] ),
        .O(\code_position[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position[8]_i_5 
       (.I0(\code_position_reg_n_0_[5] ),
        .O(\code_position[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[0]),
        .Q(\code_position_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0[10]),
        .Q(\code_position_reg_n_0_[10] ),
        .R(\code_position_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0[11]),
        .Q(\code_position_reg_n_0_[11] ),
        .R(\code_position_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0[12]),
        .Q(\code_position_reg_n_0_[12] ),
        .R(\code_position_reg[2]_0 ));
  CARRY4 \code_position_reg[12]_i_1 
       (.CI(\code_position_reg[8]_i_1_n_0 ),
        .CO({\code_position_reg[12]_i_1_n_0 ,\code_position_reg[12]_i_1_n_1 ,\code_position_reg[12]_i_1_n_2 ,\code_position_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(code_position0[12:9]),
        .S({\code_position[12]_i_2_n_0 ,\code_position[12]_i_3_n_0 ,\code_position[12]_i_4_n_0 ,\code_position[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0[13]),
        .Q(\code_position_reg_n_0_[13] ),
        .R(\code_position_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0[14]),
        .Q(\code_position_reg_n_0_[14] ),
        .R(\code_position_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0[15]),
        .Q(\code_position_reg_n_0_[15] ),
        .R(\code_position_reg[2]_0 ));
  CARRY4 \code_position_reg[15]_i_1 
       (.CI(\code_position_reg[12]_i_1_n_0 ),
        .CO({\NLW_code_position_reg[15]_i_1_CO_UNCONNECTED [3:2],\code_position_reg[15]_i_1_n_2 ,\code_position_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_code_position_reg[15]_i_1_O_UNCONNECTED [3],code_position0[15:13]}),
        .S({1'b0,\code_position[15]_i_2_n_0 ,\code_position[15]_i_3_n_0 ,\code_position[15]_i_4_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[1]),
        .Q(\code_position_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(O[0]),
        .Q(\code_position_reg_n_0_[2] ),
        .R(\code_position_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(O[1]),
        .Q(\code_position_reg_n_0_[3] ),
        .R(\code_position_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[2]),
        .Q(\code_position_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[3]),
        .Q(\code_position_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0[6]),
        .Q(\code_position_reg_n_0_[6] ),
        .R(\code_position_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0[7]),
        .Q(\code_position_reg_n_0_[7] ),
        .R(\code_position_reg[2]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0[8]),
        .Q(\code_position_reg_n_0_[8] ),
        .R(\code_position_reg[2]_0 ));
  CARRY4 \code_position_reg[8]_i_1 
       (.CI(\code_position_reg_rep[3]_i_2_n_0 ),
        .CO({\code_position_reg[8]_i_1_n_0 ,\code_position_reg[8]_i_1_n_1 ,\code_position_reg[8]_i_1_n_2 ,\code_position_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(code_position0[8:5]),
        .S({\code_position[8]_i_2_n_0 ,\code_position[8]_i_3_n_0 ,\code_position[8]_i_4_n_0 ,\code_position[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0[9]),
        .Q(\code_position_reg_n_0_[9] ),
        .R(\code_position_reg[2]_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[0]),
        .Q(code_position_reg_rep__1[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[0]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[0]),
        .Q(code_position_reg_rep__0__0[0]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[1]),
        .Q(code_position_reg_rep__1[1]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[1]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[1]),
        .Q(code_position_reg_rep__0__0[1]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(O[0]),
        .Q(code_position_reg_rep__1[2]),
        .R(\code_position_reg[2]_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[2]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(O[0]),
        .Q(code_position_reg_rep__0__0[2]),
        .R(\code_position_reg[2]_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(O[1]),
        .Q(code_position_reg_rep__1[3]),
        .R(\code_position_reg[2]_0 ));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[3]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(O[1]),
        .Q(code_position_reg_rep__0__0[3]),
        .R(\code_position_reg[2]_0 ));
  CARRY4 \code_position_reg_rep[3]_i_2 
       (.CI(1'b0),
        .CO({\code_position_reg_rep[3]_i_2_n_0 ,\code_position_reg_rep[3]_i_2_n_1 ,\code_position_reg_rep[3]_i_2_n_2 ,\code_position_reg_rep[3]_i_2_n_3 }),
        .CYINIT(\code_position_reg_n_0_[0] ),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({code_position0[4],O,code_position0[1]}),
        .S({\code_position_rep[3]_i_3_n_0 ,\code_position_rep[3]_i_4_n_0 ,\code_position_rep[3]_i_5_n_0 ,\code_position_rep[3]_i_6_n_0 }));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[2]),
        .Q(code_position_reg_rep__1[4]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[4]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[2]),
        .Q(code_position_reg_rep__0__0[4]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[3]),
        .Q(code_position_reg_rep__1[5]),
        .R(1'b0));
  (* equivalent_register_removal = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \code_position_reg_rep[5]__0 
       (.C(clock_IBUF_BUFG),
        .CE(\code_position_reg[0]_0 ),
        .D(code_position0_in[3]),
        .Q(code_position_reg_rep__0__0[5]),
        .R(1'b0));
  CARRY4 \code_position_reg_rep[5]_i_15 
       (.CI(\code_position_reg_rep[5]_i_24_n_0 ),
        .CO({\code_position_reg_rep[5]_i_15_n_0 ,\code_position_reg_rep[5]_i_15_n_1 ,\code_position_reg_rep[5]_i_15_n_2 ,\code_position_reg_rep[5]_i_15_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_position_rep[5]_i_25_n_0 ,\code_position_rep[5]_i_26_n_0 ,\code_position_rep[5]_i_27_n_0 ,\code_position_rep[5]_i_28_n_0 }),
        .O(\NLW_code_position_reg_rep[5]_i_15_O_UNCONNECTED [3:0]),
        .S({\code_position_rep[5]_i_29_n_0 ,\code_position_rep[5]_i_30_n_0 ,\code_position_rep[5]_i_31_n_0 ,\code_position_rep[5]_i_32_n_0 }));
  CARRY4 \code_position_reg_rep[5]_i_24 
       (.CI(1'b0),
        .CO({\code_position_reg_rep[5]_i_24_n_0 ,\code_position_reg_rep[5]_i_24_n_1 ,\code_position_reg_rep[5]_i_24_n_2 ,\code_position_reg_rep[5]_i_24_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_position_rep[5]_i_33_n_0 ,\code_position_rep[5]_i_34_n_0 ,\code_position_rep[5]_i_35_n_0 ,\code_position_rep[5]_i_36_n_0 }),
        .O(\NLW_code_position_reg_rep[5]_i_24_O_UNCONNECTED [3:0]),
        .S({\code_position_rep[5]_i_37_n_0 ,\code_position_rep[5]_i_38_n_0 ,\code_position_rep[5]_i_39_n_0 ,\code_position_rep[5]_i_40_n_0 }));
  CARRY4 \code_position_reg_rep[5]_i_4 
       (.CI(\code_position_reg_rep[5]_i_6_n_0 ),
        .CO({\code_position_reg_rep[5]_i_4_n_0 ,\code_position_reg_rep[5]_i_4_n_1 ,\code_position_reg_rep[5]_i_4_n_2 ,\code_position_reg_rep[5]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_position_rep[5]_i_7_n_0 ,\code_position_rep[5]_i_8_n_0 ,\code_position_rep[5]_i_9_n_0 ,\code_position_rep[5]_i_10_n_0 }),
        .O(\NLW_code_position_reg_rep[5]_i_4_O_UNCONNECTED [3:0]),
        .S({\code_position_rep[5]_i_11_n_0 ,\code_position_rep[5]_i_12_n_0 ,\code_position_rep[5]_i_13_n_0 ,\code_position_rep[5]_i_14_n_0 }));
  CARRY4 \code_position_reg_rep[5]_i_6 
       (.CI(\code_position_reg_rep[5]_i_15_n_0 ),
        .CO({\code_position_reg_rep[5]_i_6_n_0 ,\code_position_reg_rep[5]_i_6_n_1 ,\code_position_reg_rep[5]_i_6_n_2 ,\code_position_reg_rep[5]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_position_rep[5]_i_16_n_0 ,\code_position_rep[5]_i_17_n_0 ,\code_position_rep[5]_i_18_n_0 ,\code_position_rep[5]_i_19_n_0 }),
        .O(\NLW_code_position_reg_rep[5]_i_6_O_UNCONNECTED [3:0]),
        .S({\code_position_rep[5]_i_20_n_0 ,\code_position_rep[5]_i_21_n_0 ,\code_position_rep[5]_i_22_n_0 ,\code_position_rep[5]_i_23_n_0 }));
  LUT4 #(
    .INIT(16'h55C0)) 
    \code_position_rep[0]_i_1 
       (.I0(\code_position_reg_n_0_[0] ),
        .I1(\symbol_amount_var_reg_n_0_[0] ),
        .I2(\sub_state_reg_n_0_[2] ),
        .I3(\sub_state_reg_n_0_[0] ),
        .O(code_position0_in[0]));
  LUT4 #(
    .INIT(16'hAAC0)) 
    \code_position_rep[1]_i_1 
       (.I0(code_position0[1]),
        .I1(\symbol_amount_var_reg_n_0_[1] ),
        .I2(\sub_state_reg_n_0_[2] ),
        .I3(\sub_state_reg_n_0_[0] ),
        .O(code_position0_in[1]));
  LUT2 #(
    .INIT(4'h2)) 
    \code_position_rep[3]_i_1 
       (.I0(\code_position_reg[0]_0 ),
        .I1(\sub_state_reg_n_0_[0] ),
        .O(\code_position_reg[2]_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position_rep[3]_i_3 
       (.I0(\code_position_reg_n_0_[4] ),
        .O(\code_position_rep[3]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position_rep[3]_i_4 
       (.I0(\code_position_reg_n_0_[3] ),
        .O(\code_position_rep[3]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position_rep[3]_i_5 
       (.I0(\code_position_reg_n_0_[2] ),
        .O(\code_position_rep[3]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \code_position_rep[3]_i_6 
       (.I0(\code_position_reg_n_0_[1] ),
        .O(\code_position_rep[3]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'hAAC0)) 
    \code_position_rep[4]_i_1 
       (.I0(code_position0[4]),
        .I1(\symbol_amount_var_reg_n_0_[4] ),
        .I2(\sub_state_reg_n_0_[2] ),
        .I3(\sub_state_reg_n_0_[0] ),
        .O(code_position0_in[2]));
  LUT5 #(
    .INIT(32'hFAAA0088)) 
    \code_position_rep[5]_i_1 
       (.I0(\code_position_rep[5]_i_3_n_0 ),
        .I1(\code_position_reg_rep[5]_i_4_n_0 ),
        .I2(\code_position_rep[5]_i_5_n_0 ),
        .I3(\sub_state_reg_n_0_[1] ),
        .I4(\sub_state_reg_n_0_[2] ),
        .O(\code_position_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_10 
       (.I0(input_data_length[25]),
        .I1(\bit_position_reg_n_0_[25] ),
        .I2(input_data_length[24]),
        .I3(\bit_position_reg_n_0_[24] ),
        .O(\code_position_rep[5]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_11 
       (.I0(\bit_position_reg_n_0_[31] ),
        .I1(input_data_length[31]),
        .I2(\bit_position_reg_n_0_[30] ),
        .I3(input_data_length[30]),
        .O(\code_position_rep[5]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_12 
       (.I0(\bit_position_reg_n_0_[29] ),
        .I1(input_data_length[29]),
        .I2(\bit_position_reg_n_0_[28] ),
        .I3(input_data_length[28]),
        .O(\code_position_rep[5]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_13 
       (.I0(\bit_position_reg_n_0_[27] ),
        .I1(input_data_length[27]),
        .I2(\bit_position_reg_n_0_[26] ),
        .I3(input_data_length[26]),
        .O(\code_position_rep[5]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_14 
       (.I0(\bit_position_reg_n_0_[25] ),
        .I1(input_data_length[25]),
        .I2(\bit_position_reg_n_0_[24] ),
        .I3(input_data_length[24]),
        .O(\code_position_rep[5]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_16 
       (.I0(input_data_length[23]),
        .I1(\bit_position_reg_n_0_[23] ),
        .I2(input_data_length[22]),
        .I3(\bit_position_reg_n_0_[22] ),
        .O(\code_position_rep[5]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_17 
       (.I0(input_data_length[21]),
        .I1(\bit_position_reg_n_0_[21] ),
        .I2(input_data_length[20]),
        .I3(\bit_position_reg_n_0_[20] ),
        .O(\code_position_rep[5]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_18 
       (.I0(input_data_length[19]),
        .I1(\bit_position_reg_n_0_[19] ),
        .I2(input_data_length[18]),
        .I3(\bit_position_reg_n_0_[18] ),
        .O(\code_position_rep[5]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_19 
       (.I0(input_data_length[17]),
        .I1(\bit_position_reg_n_0_[17] ),
        .I2(input_data_length[16]),
        .I3(\bit_position_reg_n_0_[16] ),
        .O(\code_position_rep[5]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'hAAC0)) 
    \code_position_rep[5]_i_2 
       (.I0(code_position0[5]),
        .I1(\symbol_amount_var_reg_n_0_[5] ),
        .I2(\sub_state_reg_n_0_[2] ),
        .I3(\sub_state_reg_n_0_[0] ),
        .O(code_position0_in[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_20 
       (.I0(\bit_position_reg_n_0_[23] ),
        .I1(input_data_length[23]),
        .I2(\bit_position_reg_n_0_[22] ),
        .I3(input_data_length[22]),
        .O(\code_position_rep[5]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_21 
       (.I0(\bit_position_reg_n_0_[21] ),
        .I1(input_data_length[21]),
        .I2(\bit_position_reg_n_0_[20] ),
        .I3(input_data_length[20]),
        .O(\code_position_rep[5]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_22 
       (.I0(\bit_position_reg_n_0_[19] ),
        .I1(input_data_length[19]),
        .I2(\bit_position_reg_n_0_[18] ),
        .I3(input_data_length[18]),
        .O(\code_position_rep[5]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_23 
       (.I0(\bit_position_reg_n_0_[17] ),
        .I1(input_data_length[17]),
        .I2(\bit_position_reg_n_0_[16] ),
        .I3(input_data_length[16]),
        .O(\code_position_rep[5]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_25 
       (.I0(input_data_length[15]),
        .I1(\bit_position_reg_n_0_[15] ),
        .I2(input_data_length[14]),
        .I3(\bit_position_reg_n_0_[14] ),
        .O(\code_position_rep[5]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_26 
       (.I0(input_data_length[13]),
        .I1(\bit_position_reg_n_0_[13] ),
        .I2(input_data_length[12]),
        .I3(\bit_position_reg_n_0_[12] ),
        .O(\code_position_rep[5]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_27 
       (.I0(input_data_length[11]),
        .I1(\bit_position_reg_n_0_[11] ),
        .I2(input_data_length[10]),
        .I3(\bit_position_reg_n_0_[10] ),
        .O(\code_position_rep[5]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_28 
       (.I0(input_data_length[9]),
        .I1(\bit_position_reg_n_0_[9] ),
        .I2(input_data_length[8]),
        .I3(\bit_position_reg_n_0_[8] ),
        .O(\code_position_rep[5]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_29 
       (.I0(\bit_position_reg_n_0_[15] ),
        .I1(input_data_length[15]),
        .I2(\bit_position_reg_n_0_[14] ),
        .I3(input_data_length[14]),
        .O(\code_position_rep[5]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \code_position_rep[5]_i_3 
       (.I0(\sub_state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(\sub_state_reg_n_0_[0] ),
        .O(\code_position_rep[5]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_30 
       (.I0(\bit_position_reg_n_0_[13] ),
        .I1(input_data_length[13]),
        .I2(\bit_position_reg_n_0_[12] ),
        .I3(input_data_length[12]),
        .O(\code_position_rep[5]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_31 
       (.I0(\bit_position_reg_n_0_[11] ),
        .I1(input_data_length[11]),
        .I2(\bit_position_reg_n_0_[10] ),
        .I3(input_data_length[10]),
        .O(\code_position_rep[5]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_32 
       (.I0(\bit_position_reg_n_0_[9] ),
        .I1(input_data_length[9]),
        .I2(\bit_position_reg_n_0_[8] ),
        .I3(input_data_length[8]),
        .O(\code_position_rep[5]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_33 
       (.I0(input_data_length[7]),
        .I1(\bit_position_reg_n_0_[7] ),
        .I2(input_data_length[6]),
        .I3(\bit_position_reg_n_0_[6] ),
        .O(\code_position_rep[5]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_34 
       (.I0(input_data_length[5]),
        .I1(\bit_position_reg_n_0_[5] ),
        .I2(input_data_length[4]),
        .I3(\bit_position_reg_n_0_[4] ),
        .O(\code_position_rep[5]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_35 
       (.I0(input_data_length[3]),
        .I1(\bit_position_reg_n_0_[3] ),
        .I2(input_data_length[2]),
        .I3(\bit_position_reg_n_0_[2] ),
        .O(\code_position_rep[5]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_36 
       (.I0(input_data_length[1]),
        .I1(\bit_position_reg_n_0_[1] ),
        .I2(input_data_length[0]),
        .I3(\bit_position_reg_n_0_[0] ),
        .O(\code_position_rep[5]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_37 
       (.I0(\bit_position_reg_n_0_[7] ),
        .I1(input_data_length[7]),
        .I2(\bit_position_reg_n_0_[6] ),
        .I3(input_data_length[6]),
        .O(\code_position_rep[5]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_38 
       (.I0(\bit_position_reg_n_0_[5] ),
        .I1(input_data_length[5]),
        .I2(\bit_position_reg_n_0_[4] ),
        .I3(input_data_length[4]),
        .O(\code_position_rep[5]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_39 
       (.I0(\bit_position_reg_n_0_[3] ),
        .I1(input_data_length[3]),
        .I2(\bit_position_reg_n_0_[2] ),
        .I3(input_data_length[2]),
        .O(\code_position_rep[5]_i_39_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \code_position_rep[5]_i_40 
       (.I0(\bit_position_reg_n_0_[1] ),
        .I1(input_data_length[1]),
        .I2(\bit_position_reg_n_0_[0] ),
        .I3(input_data_length[0]),
        .O(\code_position_rep[5]_i_40_n_0 ));
  LUT5 #(
    .INIT(32'h00010000)) 
    \code_position_rep[5]_i_5 
       (.I0(\sub_state_reg_n_0_[3] ),
        .I1(\state_reg_n_0_[3] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .O(\code_position_rep[5]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_7 
       (.I0(input_data_length[31]),
        .I1(\bit_position_reg_n_0_[31] ),
        .I2(input_data_length[30]),
        .I3(\bit_position_reg_n_0_[30] ),
        .O(\code_position_rep[5]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_8 
       (.I0(input_data_length[29]),
        .I1(\bit_position_reg_n_0_[29] ),
        .I2(input_data_length[28]),
        .I3(\bit_position_reg_n_0_[28] ),
        .O(\code_position_rep[5]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \code_position_rep[5]_i_9 
       (.I0(input_data_length[27]),
        .I1(\bit_position_reg_n_0_[27] ),
        .I2(input_data_length[26]),
        .I3(\bit_position_reg_n_0_[26] ),
        .O(\code_position_rep[5]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAAA9AAAAAAAAAAAA)) 
    \code_value[11]_i_2 
       (.I0(\code_value_reg_n_0_[11] ),
        .I1(\sub_state[3]_i_3_n_0 ),
        .I2(code_index[0]),
        .I3(code_index[1]),
        .I4(code_value1),
        .I5(\code_value[27]_i_7_n_0 ),
        .O(\code_value[11]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[11]_i_3 
       (.I0(\code_value_reg_n_0_[10] ),
        .I1(code_index[3]),
        .I2(code_index[2]),
        .I3(\code_value[15]_i_6_n_0 ),
        .O(\code_value[11]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[11]_i_4 
       (.I0(\code_value_reg_n_0_[9] ),
        .I1(code_index[3]),
        .I2(code_index[2]),
        .I3(\code_value[15]_i_7_n_0 ),
        .O(\code_value[11]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[11]_i_5 
       (.I0(\code_value_reg_n_0_[8] ),
        .I1(code_index[3]),
        .I2(code_index[2]),
        .I3(\code_value[15]_i_8_n_0 ),
        .O(\code_value[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAA666AAA6A)) 
    \code_value[15]_i_2 
       (.I0(\code_value_reg_n_0_[15] ),
        .I1(\code_value[27]_i_6_n_0 ),
        .I2(input_data_reg_0_127_0_0_n_0),
        .I3(\bit_index_reg_rep_n_0_[7] ),
        .I4(input_data_reg_128_255_0_0_n_0),
        .I5(\sub_state[3]_i_4_n_0 ),
        .O(\code_value[15]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \code_value[15]_i_3 
       (.I0(\code_value_reg_n_0_[14] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[15]_i_6_n_0 ),
        .O(\code_value[15]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \code_value[15]_i_4 
       (.I0(\code_value_reg_n_0_[13] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[15]_i_7_n_0 ),
        .O(\code_value[15]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \code_value[15]_i_5 
       (.I0(\code_value_reg_n_0_[12] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[15]_i_8_n_0 ),
        .O(\code_value[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h00000000A8080000)) 
    \code_value[15]_i_6 
       (.I0(code_index[1]),
        .I1(input_data_reg_0_127_0_0_n_0),
        .I2(\bit_index_reg_rep_n_0_[7] ),
        .I3(input_data_reg_128_255_0_0_n_0),
        .I4(code_index[0]),
        .I5(\sub_state[3]_i_3_n_0 ),
        .O(\code_value[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000A808)) 
    \code_value[15]_i_7 
       (.I0(code_index[1]),
        .I1(input_data_reg_0_127_0_0_n_0),
        .I2(\bit_index_reg_rep_n_0_[7] ),
        .I3(input_data_reg_128_255_0_0_n_0),
        .I4(code_index[0]),
        .I5(\sub_state[3]_i_3_n_0 ),
        .O(\code_value[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0000000054040000)) 
    \code_value[15]_i_8 
       (.I0(code_index[1]),
        .I1(input_data_reg_0_127_0_0_n_0),
        .I2(\bit_index_reg_rep_n_0_[7] ),
        .I3(input_data_reg_128_255_0_0_n_0),
        .I4(code_index[0]),
        .I5(\sub_state[3]_i_3_n_0 ),
        .O(\code_value[15]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hAA6AAAAA)) 
    \code_value[19]_i_2 
       (.I0(\code_value_reg_n_0_[19] ),
        .I1(\code_value[27]_i_6_n_0 ),
        .I2(\code_value[23]_i_6_n_0 ),
        .I3(code_index[3]),
        .I4(code_index[2]),
        .O(\code_value[19]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA9AA)) 
    \code_value[19]_i_3 
       (.I0(\code_value_reg_n_0_[18] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[31]_i_11_n_0 ),
        .O(\code_value[19]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hA9AA)) 
    \code_value[19]_i_4 
       (.I0(\code_value_reg_n_0_[17] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[31]_i_12_n_0 ),
        .O(\code_value[19]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA9AA)) 
    \code_value[19]_i_5 
       (.I0(\code_value_reg_n_0_[16] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[31]_i_13_n_0 ),
        .O(\code_value[19]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAA6AAAAA)) 
    \code_value[23]_i_2 
       (.I0(\code_value_reg_n_0_[23] ),
        .I1(\code_value[27]_i_6_n_0 ),
        .I2(\code_value[23]_i_6_n_0 ),
        .I3(code_index[2]),
        .I4(code_index[3]),
        .O(\code_value[23]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[23]_i_3 
       (.I0(\code_value_reg_n_0_[22] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[31]_i_11_n_0 ),
        .O(\code_value[23]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[23]_i_4 
       (.I0(\code_value_reg_n_0_[21] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[31]_i_12_n_0 ),
        .O(\code_value[23]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[23]_i_5 
       (.I0(\code_value_reg_n_0_[20] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[31]_i_13_n_0 ),
        .O(\code_value[23]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h000000E2)) 
    \code_value[23]_i_6 
       (.I0(input_data_reg_0_127_0_0_n_0),
        .I1(\bit_index_reg_rep_n_0_[7] ),
        .I2(input_data_reg_128_255_0_0_n_0),
        .I3(code_index[1]),
        .I4(code_index[0]),
        .O(\code_value[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAAA6AAAAAAAAAAAA)) 
    \code_value[27]_i_2 
       (.I0(\code_value_reg_n_0_[27] ),
        .I1(\code_value[27]_i_6_n_0 ),
        .I2(code_index[0]),
        .I3(code_index[1]),
        .I4(code_value1),
        .I5(\code_value[27]_i_7_n_0 ),
        .O(\code_value[27]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[27]_i_3 
       (.I0(\code_value_reg_n_0_[26] ),
        .I1(code_index[3]),
        .I2(code_index[2]),
        .I3(\code_value[31]_i_11_n_0 ),
        .O(\code_value[27]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[27]_i_4 
       (.I0(\code_value_reg_n_0_[25] ),
        .I1(code_index[3]),
        .I2(code_index[2]),
        .I3(\code_value[31]_i_12_n_0 ),
        .O(\code_value[27]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[27]_i_5 
       (.I0(\code_value_reg_n_0_[24] ),
        .I1(code_index[3]),
        .I2(code_index[2]),
        .I3(\code_value[31]_i_13_n_0 ),
        .O(\code_value[27]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \code_value[27]_i_6 
       (.I0(code_index[4]),
        .I1(code_index[7]),
        .I2(code_index[5]),
        .I3(code_index[6]),
        .O(\code_value[27]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \code_value[27]_i_7 
       (.I0(code_index[2]),
        .I1(code_index[3]),
        .O(\code_value[27]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \code_value[31]_i_1 
       (.I0(\code_value[31]_i_2_n_0 ),
        .I1(\sub_state_reg_n_0_[0] ),
        .O(\code_value[31]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \code_value[31]_i_10 
       (.I0(input_data_reg_128_255_0_0_n_0),
        .I1(\bit_index_reg_rep_n_0_[7] ),
        .I2(input_data_reg_0_127_0_0_n_0),
        .O(code_value1));
  LUT6 #(
    .INIT(64'hA808000000000000)) 
    \code_value[31]_i_11 
       (.I0(code_index[1]),
        .I1(input_data_reg_0_127_0_0_n_0),
        .I2(\bit_index_reg_rep_n_0_[7] ),
        .I3(input_data_reg_128_255_0_0_n_0),
        .I4(code_index[0]),
        .I5(\code_value[27]_i_6_n_0 ),
        .O(\code_value[31]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0000A80800000000)) 
    \code_value[31]_i_12 
       (.I0(code_index[1]),
        .I1(input_data_reg_0_127_0_0_n_0),
        .I2(\bit_index_reg_rep_n_0_[7] ),
        .I3(input_data_reg_128_255_0_0_n_0),
        .I4(code_index[0]),
        .I5(\code_value[27]_i_6_n_0 ),
        .O(\code_value[31]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h5404000000000000)) 
    \code_value[31]_i_13 
       (.I0(code_index[1]),
        .I1(input_data_reg_0_127_0_0_n_0),
        .I2(\bit_index_reg_rep_n_0_[7] ),
        .I3(input_data_reg_128_255_0_0_n_0),
        .I4(code_index[0]),
        .I5(\code_value[27]_i_6_n_0 ),
        .O(\code_value[31]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000F888)) 
    \code_value[31]_i_2 
       (.I0(\code_value[31]_i_4_n_0 ),
        .I1(\code_value[31]_i_5_n_0 ),
        .I2(\code_position_rep[5]_i_3_n_0 ),
        .I3(\code_position_reg_rep[5]_i_4_n_0 ),
        .I4(\sub_state_reg_n_0_[2] ),
        .I5(\sub_state_reg_n_0_[1] ),
        .O(\code_value[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    \code_value[31]_i_4 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[3] ),
        .I4(\sub_state_reg_n_0_[3] ),
        .I5(\sub_state_reg_n_0_[0] ),
        .O(\code_value[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \code_value[31]_i_5 
       (.I0(\sub_state[3]_i_3_n_0 ),
        .I1(code_index[0]),
        .I2(code_index[1]),
        .I3(code_index[2]),
        .I4(code_index[3]),
        .O(\code_value[31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000040)) 
    \code_value[31]_i_6 
       (.I0(\code_index[6]_i_2_n_0 ),
        .I1(code_index[5]),
        .I2(code_value1),
        .I3(code_index[7]),
        .I4(code_index[6]),
        .I5(\code_value_reg_n_0_[31] ),
        .O(\code_value[31]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \code_value[31]_i_7 
       (.I0(\code_value_reg_n_0_[30] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[31]_i_11_n_0 ),
        .O(\code_value[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \code_value[31]_i_8 
       (.I0(\code_value_reg_n_0_[29] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[31]_i_12_n_0 ),
        .O(\code_value[31]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h6AAA)) 
    \code_value[31]_i_9 
       (.I0(\code_value_reg_n_0_[28] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[31]_i_13_n_0 ),
        .O(\code_value[31]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'hAA9AAAAA)) 
    \code_value[3]_i_2 
       (.I0(\code_value_reg_n_0_[3] ),
        .I1(\sub_state[3]_i_3_n_0 ),
        .I2(\code_value[23]_i_6_n_0 ),
        .I3(code_index[3]),
        .I4(code_index[2]),
        .O(\code_value[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA9AA)) 
    \code_value[3]_i_3 
       (.I0(\code_value_reg_n_0_[2] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[15]_i_6_n_0 ),
        .O(\code_value[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hA9AA)) 
    \code_value[3]_i_4 
       (.I0(\code_value_reg_n_0_[1] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[15]_i_7_n_0 ),
        .O(\code_value[3]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA9AA)) 
    \code_value[3]_i_5 
       (.I0(\code_value_reg_n_0_[0] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[15]_i_8_n_0 ),
        .O(\code_value[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hAA9AAAAA)) 
    \code_value[7]_i_2 
       (.I0(\code_value_reg_n_0_[7] ),
        .I1(\sub_state[3]_i_3_n_0 ),
        .I2(\code_value[23]_i_6_n_0 ),
        .I3(code_index[2]),
        .I4(code_index[3]),
        .O(\code_value[7]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[7]_i_3 
       (.I0(\code_value_reg_n_0_[6] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[15]_i_6_n_0 ),
        .O(\code_value[7]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[7]_i_4 
       (.I0(\code_value_reg_n_0_[5] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[15]_i_7_n_0 ),
        .O(\code_value[7]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'hA6AA)) 
    \code_value[7]_i_5 
       (.I0(\code_value_reg_n_0_[4] ),
        .I1(code_index[2]),
        .I2(code_index[3]),
        .I3(\code_value[15]_i_8_n_0 ),
        .O(\code_value[7]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[0]),
        .Q(\code_value_reg_n_0_[0] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[10]),
        .Q(\code_value_reg_n_0_[10] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[11]),
        .Q(\code_value_reg_n_0_[11] ),
        .R(\code_value[31]_i_1_n_0 ));
  CARRY4 \code_value_reg[11]_i_1 
       (.CI(\code_value_reg[7]_i_1_n_0 ),
        .CO({\code_value_reg[11]_i_1_n_0 ,\code_value_reg[11]_i_1_n_1 ,\code_value_reg[11]_i_1_n_2 ,\code_value_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_value_reg_n_0_[11] ,\code_value_reg_n_0_[10] ,\code_value_reg_n_0_[9] ,\code_value_reg_n_0_[8] }),
        .O(code_value[11:8]),
        .S({\code_value[11]_i_2_n_0 ,\code_value[11]_i_3_n_0 ,\code_value[11]_i_4_n_0 ,\code_value[11]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[12]),
        .Q(\code_value_reg_n_0_[12] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[13]),
        .Q(\code_value_reg_n_0_[13] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[14]),
        .Q(\code_value_reg_n_0_[14] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[15]),
        .Q(\code_value_reg_n_0_[15] ),
        .R(\code_value[31]_i_1_n_0 ));
  CARRY4 \code_value_reg[15]_i_1 
       (.CI(\code_value_reg[11]_i_1_n_0 ),
        .CO({\code_value_reg[15]_i_1_n_0 ,\code_value_reg[15]_i_1_n_1 ,\code_value_reg[15]_i_1_n_2 ,\code_value_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_value_reg_n_0_[15] ,\code_value_reg_n_0_[14] ,\code_value_reg_n_0_[13] ,\code_value_reg_n_0_[12] }),
        .O(code_value[15:12]),
        .S({\code_value[15]_i_2_n_0 ,\code_value[15]_i_3_n_0 ,\code_value[15]_i_4_n_0 ,\code_value[15]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[16]),
        .Q(\code_value_reg_n_0_[16] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[17]),
        .Q(\code_value_reg_n_0_[17] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[18]),
        .Q(\code_value_reg_n_0_[18] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[19]),
        .Q(\code_value_reg_n_0_[19] ),
        .R(\code_value[31]_i_1_n_0 ));
  CARRY4 \code_value_reg[19]_i_1 
       (.CI(\code_value_reg[15]_i_1_n_0 ),
        .CO({\code_value_reg[19]_i_1_n_0 ,\code_value_reg[19]_i_1_n_1 ,\code_value_reg[19]_i_1_n_2 ,\code_value_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_value_reg_n_0_[19] ,\code_value_reg_n_0_[18] ,\code_value_reg_n_0_[17] ,\code_value_reg_n_0_[16] }),
        .O(code_value[19:16]),
        .S({\code_value[19]_i_2_n_0 ,\code_value[19]_i_3_n_0 ,\code_value[19]_i_4_n_0 ,\code_value[19]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[1]),
        .Q(\code_value_reg_n_0_[1] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[20]),
        .Q(\code_value_reg_n_0_[20] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[21]),
        .Q(\code_value_reg_n_0_[21] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[22]),
        .Q(\code_value_reg_n_0_[22] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[23]),
        .Q(\code_value_reg_n_0_[23] ),
        .R(\code_value[31]_i_1_n_0 ));
  CARRY4 \code_value_reg[23]_i_1 
       (.CI(\code_value_reg[19]_i_1_n_0 ),
        .CO({\code_value_reg[23]_i_1_n_0 ,\code_value_reg[23]_i_1_n_1 ,\code_value_reg[23]_i_1_n_2 ,\code_value_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_value_reg_n_0_[23] ,\code_value_reg_n_0_[22] ,\code_value_reg_n_0_[21] ,\code_value_reg_n_0_[20] }),
        .O(code_value[23:20]),
        .S({\code_value[23]_i_2_n_0 ,\code_value[23]_i_3_n_0 ,\code_value[23]_i_4_n_0 ,\code_value[23]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[24]),
        .Q(\code_value_reg_n_0_[24] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[25]),
        .Q(\code_value_reg_n_0_[25] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[26]),
        .Q(\code_value_reg_n_0_[26] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[27]),
        .Q(\code_value_reg_n_0_[27] ),
        .R(\code_value[31]_i_1_n_0 ));
  CARRY4 \code_value_reg[27]_i_1 
       (.CI(\code_value_reg[23]_i_1_n_0 ),
        .CO({\code_value_reg[27]_i_1_n_0 ,\code_value_reg[27]_i_1_n_1 ,\code_value_reg[27]_i_1_n_2 ,\code_value_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_value_reg_n_0_[27] ,\code_value_reg_n_0_[26] ,\code_value_reg_n_0_[25] ,\code_value_reg_n_0_[24] }),
        .O(code_value[27:24]),
        .S({\code_value[27]_i_2_n_0 ,\code_value[27]_i_3_n_0 ,\code_value[27]_i_4_n_0 ,\code_value[27]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[28]),
        .Q(\code_value_reg_n_0_[28] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[29]),
        .Q(\code_value_reg_n_0_[29] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[2]),
        .Q(\code_value_reg_n_0_[2] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[30]),
        .Q(\code_value_reg_n_0_[30] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[31]),
        .Q(\code_value_reg_n_0_[31] ),
        .R(\code_value[31]_i_1_n_0 ));
  CARRY4 \code_value_reg[31]_i_3 
       (.CI(\code_value_reg[27]_i_1_n_0 ),
        .CO({\NLW_code_value_reg[31]_i_3_CO_UNCONNECTED [3],\code_value_reg[31]_i_3_n_1 ,\code_value_reg[31]_i_3_n_2 ,\code_value_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\code_value_reg_n_0_[30] ,\code_value_reg_n_0_[29] ,\code_value_reg_n_0_[28] }),
        .O(code_value[31:28]),
        .S({\code_value[31]_i_6_n_0 ,\code_value[31]_i_7_n_0 ,\code_value[31]_i_8_n_0 ,\code_value[31]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[3]),
        .Q(\code_value_reg_n_0_[3] ),
        .R(\code_value[31]_i_1_n_0 ));
  CARRY4 \code_value_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\code_value_reg[3]_i_1_n_0 ,\code_value_reg[3]_i_1_n_1 ,\code_value_reg[3]_i_1_n_2 ,\code_value_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_value_reg_n_0_[3] ,\code_value_reg_n_0_[2] ,\code_value_reg_n_0_[1] ,\code_value_reg_n_0_[0] }),
        .O(code_value[3:0]),
        .S({\code_value[3]_i_2_n_0 ,\code_value[3]_i_3_n_0 ,\code_value[3]_i_4_n_0 ,\code_value[3]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[4]),
        .Q(\code_value_reg_n_0_[4] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[5]),
        .Q(\code_value_reg_n_0_[5] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[6]),
        .Q(\code_value_reg_n_0_[6] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[7]),
        .Q(\code_value_reg_n_0_[7] ),
        .R(\code_value[31]_i_1_n_0 ));
  CARRY4 \code_value_reg[7]_i_1 
       (.CI(\code_value_reg[3]_i_1_n_0 ),
        .CO({\code_value_reg[7]_i_1_n_0 ,\code_value_reg[7]_i_1_n_1 ,\code_value_reg[7]_i_1_n_2 ,\code_value_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\code_value_reg_n_0_[7] ,\code_value_reg_n_0_[6] ,\code_value_reg_n_0_[5] ,\code_value_reg_n_0_[4] }),
        .O(code_value[7:4]),
        .S({\code_value[7]_i_2_n_0 ,\code_value[7]_i_3_n_0 ,\code_value[7]_i_4_n_0 ,\code_value[7]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[8]),
        .Q(\code_value_reg_n_0_[8] ),
        .R(\code_value[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \code_value_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\code_value[31]_i_2_n_0 ),
        .D(code_value[9]),
        .Q(\code_value_reg_n_0_[9] ),
        .R(\code_value[31]_i_1_n_0 ));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_UNIQ_BASE_ codes_lengths_reg_0_63_0_2
       (.ADDRA(code_position_reg_rep__1),
        .ADDRB(code_position_reg_rep__1),
        .ADDRC(code_position_reg_rep__1),
        .ADDRD(init_iterator_reg),
        .DIA(\decoder_code_length_in_reg[7] [0]),
        .DIB(\decoder_code_length_in_reg[7] [1]),
        .DIC(\decoder_code_length_in_reg[7] [2]),
        .DID(1'b0),
        .DOA(sub_state2[0]),
        .DOB(sub_state2[1]),
        .DOC(sub_state2[2]),
        .DOD(NLW_codes_lengths_reg_0_63_0_2_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(codes_lengths_reg_0_63_0_2_i_1_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    codes_lengths_reg_0_63_0_2_i_1
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[1] ),
        .O(codes_lengths_reg_0_63_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1701 codes_lengths_reg_0_63_3_5
       (.ADDRA(code_position_reg_rep__1),
        .ADDRB(code_position_reg_rep__1),
        .ADDRC(code_position_reg_rep__1),
        .ADDRD(init_iterator_reg),
        .DIA(\decoder_code_length_in_reg[7] [3]),
        .DIB(\decoder_code_length_in_reg[7] [4]),
        .DIC(\decoder_code_length_in_reg[7] [5]),
        .DID(1'b0),
        .DOA(sub_state2[3]),
        .DOB(sub_state2[4]),
        .DOC(sub_state2[5]),
        .DOD(NLW_codes_lengths_reg_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(codes_lengths_reg_0_63_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1702 codes_lengths_reg_0_63_6_7
       (.ADDRA(code_position_reg_rep__1),
        .ADDRB(code_position_reg_rep__1),
        .ADDRC(code_position_reg_rep__1),
        .ADDRD(init_iterator_reg),
        .DIA(\decoder_code_length_in_reg[7] [6]),
        .DIB(\decoder_code_length_in_reg[7] [7]),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(sub_state2[6]),
        .DOB(sub_state2[7]),
        .DOC(NLW_codes_lengths_reg_0_63_6_7_DOC_UNCONNECTED),
        .DOD(NLW_codes_lengths_reg_0_63_6_7_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(codes_lengths_reg_0_63_0_2_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFFCF000C0000)) 
    data_ready_i_1
       (.I0(decoded_characters_array_reg_i_3_n_0),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(decoder_data_ready),
        .O(data_ready_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    data_ready_reg
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(data_ready_i_1_n_0),
        .Q(decoder_data_ready),
        .R(1'b0));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p0_d8" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d8" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "800" *) 
  (* RTL_RAM_NAME = "decoded_characters_array" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "1023" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "7" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INITP_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INITP_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_00(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_01(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_02(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_03(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_04(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_05(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_06(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_07(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_08(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_09(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_0F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_10(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_11(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_12(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_13(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_14(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_15(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_16(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_17(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_18(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_19(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_1F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_20(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_21(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_22(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_23(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_24(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_25(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_26(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_27(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_28(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_29(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_2F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_30(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_31(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_32(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_33(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_34(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_35(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_36(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_37(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_38(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_39(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3A(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3B(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3C(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3D(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3E(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_3F(256'h0000000000000000000000000000000000000000000000000000000000000000),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .INIT_FILE("NONE"),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("WRITE_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    decoded_characters_array_reg
       (.ADDRARDADDR({1'b1,1'b1,1'b1,decoded_chars_counter[6:0],1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,1'b1,i_reg_rep,1'b1,1'b1,1'b1,1'b1}),
        .CLKARDCLK(clock_IBUF_BUFG),
        .CLKBWRCLK(clock_IBUF_BUFG),
        .DIADI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,p_1_in,p_1_in[7:6]}),
        .DIBDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .DIPADIP({1'b0,1'b0}),
        .DIPBDIP({1'b0,1'b0}),
        .DOADO(NLW_decoded_characters_array_reg_DOADO_UNCONNECTED[15:0]),
        .DOBDO({NLW_decoded_characters_array_reg_DOBDO_UNCONNECTED[15:8],DOBDO}),
        .DOPADOP(NLW_decoded_characters_array_reg_DOPADOP_UNCONNECTED[1:0]),
        .DOPBDOP(NLW_decoded_characters_array_reg_DOPBDOP_UNCONNECTED[1:0]),
        .ENARDEN(decoded_characters_array_reg_i_1_n_0),
        .ENBWREN(decoded_characters_array_reg_i_2_n_0),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({1'b1,1'b1}),
        .WEBWE({1'b0,1'b0,1'b0,1'b0}));
  LUT6 #(
    .INIT(64'h0000004000000000)) 
    decoded_characters_array_reg_i_1
       (.I0(\sub_state_reg_n_0_[1] ),
        .I1(\sub_state_reg_n_0_[2] ),
        .I2(\sub_state_reg_n_0_[0] ),
        .I3(\sub_state_reg_n_0_[3] ),
        .I4(\bit_index_rep[7]_i_4_n_0 ),
        .I5(\state_reg_n_0_[1] ),
        .O(decoded_characters_array_reg_i_1_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_10
       (.I0(i[29]),
        .I1(decoded_chars_counter[29]),
        .I2(i[28]),
        .I3(decoded_chars_counter[28]),
        .O(decoded_characters_array_reg_i_10_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_11
       (.I0(i[27]),
        .I1(decoded_chars_counter[27]),
        .I2(i[26]),
        .I3(decoded_chars_counter[26]),
        .O(decoded_characters_array_reg_i_11_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_12
       (.I0(i[25]),
        .I1(decoded_chars_counter[25]),
        .I2(i[24]),
        .I3(decoded_chars_counter[24]),
        .O(decoded_characters_array_reg_i_12_n_0));
  CARRY4 decoded_characters_array_reg_i_13
       (.CI(decoded_characters_array_reg_i_22_n_0),
        .CO({decoded_characters_array_reg_i_13_n_0,decoded_characters_array_reg_i_13_n_1,decoded_characters_array_reg_i_13_n_2,decoded_characters_array_reg_i_13_n_3}),
        .CYINIT(1'b0),
        .DI({decoded_characters_array_reg_i_23_n_0,decoded_characters_array_reg_i_24_n_0,decoded_characters_array_reg_i_25_n_0,decoded_characters_array_reg_i_26_n_0}),
        .O(NLW_decoded_characters_array_reg_i_13_O_UNCONNECTED[3:0]),
        .S({decoded_characters_array_reg_i_27_n_0,decoded_characters_array_reg_i_28_n_0,decoded_characters_array_reg_i_29_n_0,decoded_characters_array_reg_i_30_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_14
       (.I0(decoded_chars_counter[23]),
        .I1(i[23]),
        .I2(decoded_chars_counter[22]),
        .I3(i[22]),
        .O(decoded_characters_array_reg_i_14_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_15
       (.I0(decoded_chars_counter[21]),
        .I1(i[21]),
        .I2(decoded_chars_counter[20]),
        .I3(i[20]),
        .O(decoded_characters_array_reg_i_15_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_16
       (.I0(decoded_chars_counter[19]),
        .I1(i[19]),
        .I2(decoded_chars_counter[18]),
        .I3(i[18]),
        .O(decoded_characters_array_reg_i_16_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_17
       (.I0(decoded_chars_counter[17]),
        .I1(i[17]),
        .I2(decoded_chars_counter[16]),
        .I3(i[16]),
        .O(decoded_characters_array_reg_i_17_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_18
       (.I0(i[23]),
        .I1(decoded_chars_counter[23]),
        .I2(i[22]),
        .I3(decoded_chars_counter[22]),
        .O(decoded_characters_array_reg_i_18_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_19
       (.I0(i[21]),
        .I1(decoded_chars_counter[21]),
        .I2(i[20]),
        .I3(decoded_chars_counter[20]),
        .O(decoded_characters_array_reg_i_19_n_0));
  LUT5 #(
    .INIT(32'h04000000)) 
    decoded_characters_array_reg_i_2
       (.I0(\state_reg_n_0_[2] ),
        .I1(decoded_characters_array_reg_i_3_n_0),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[1] ),
        .O(decoded_characters_array_reg_i_2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_20
       (.I0(i[19]),
        .I1(decoded_chars_counter[19]),
        .I2(i[18]),
        .I3(decoded_chars_counter[18]),
        .O(decoded_characters_array_reg_i_20_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_21
       (.I0(i[17]),
        .I1(decoded_chars_counter[17]),
        .I2(i[16]),
        .I3(decoded_chars_counter[16]),
        .O(decoded_characters_array_reg_i_21_n_0));
  CARRY4 decoded_characters_array_reg_i_22
       (.CI(1'b0),
        .CO({decoded_characters_array_reg_i_22_n_0,decoded_characters_array_reg_i_22_n_1,decoded_characters_array_reg_i_22_n_2,decoded_characters_array_reg_i_22_n_3}),
        .CYINIT(1'b0),
        .DI({decoded_characters_array_reg_i_31_n_0,decoded_characters_array_reg_i_32_n_0,decoded_characters_array_reg_i_33_n_0,decoded_characters_array_reg_i_34_n_0}),
        .O(NLW_decoded_characters_array_reg_i_22_O_UNCONNECTED[3:0]),
        .S({decoded_characters_array_reg_i_35_n_0,decoded_characters_array_reg_i_36_n_0,decoded_characters_array_reg_i_37_n_0,decoded_characters_array_reg_i_38_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_23
       (.I0(decoded_chars_counter[15]),
        .I1(i[15]),
        .I2(decoded_chars_counter[14]),
        .I3(i[14]),
        .O(decoded_characters_array_reg_i_23_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_24
       (.I0(decoded_chars_counter[13]),
        .I1(i[13]),
        .I2(decoded_chars_counter[12]),
        .I3(i[12]),
        .O(decoded_characters_array_reg_i_24_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_25
       (.I0(decoded_chars_counter[11]),
        .I1(i[11]),
        .I2(decoded_chars_counter[10]),
        .I3(i[10]),
        .O(decoded_characters_array_reg_i_25_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_26
       (.I0(decoded_chars_counter[9]),
        .I1(i[9]),
        .I2(decoded_chars_counter[8]),
        .I3(i[8]),
        .O(decoded_characters_array_reg_i_26_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_27
       (.I0(i[15]),
        .I1(decoded_chars_counter[15]),
        .I2(i[14]),
        .I3(decoded_chars_counter[14]),
        .O(decoded_characters_array_reg_i_27_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_28
       (.I0(i[13]),
        .I1(decoded_chars_counter[13]),
        .I2(i[12]),
        .I3(decoded_chars_counter[12]),
        .O(decoded_characters_array_reg_i_28_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_29
       (.I0(i[11]),
        .I1(decoded_chars_counter[11]),
        .I2(i[10]),
        .I3(decoded_chars_counter[10]),
        .O(decoded_characters_array_reg_i_29_n_0));
  CARRY4 decoded_characters_array_reg_i_3
       (.CI(decoded_characters_array_reg_i_4_n_0),
        .CO({decoded_characters_array_reg_i_3_n_0,decoded_characters_array_reg_i_3_n_1,decoded_characters_array_reg_i_3_n_2,decoded_characters_array_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({decoded_characters_array_reg_i_5_n_0,decoded_characters_array_reg_i_6_n_0,decoded_characters_array_reg_i_7_n_0,decoded_characters_array_reg_i_8_n_0}),
        .O(NLW_decoded_characters_array_reg_i_3_O_UNCONNECTED[3:0]),
        .S({decoded_characters_array_reg_i_9_n_0,decoded_characters_array_reg_i_10_n_0,decoded_characters_array_reg_i_11_n_0,decoded_characters_array_reg_i_12_n_0}));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_30
       (.I0(i[9]),
        .I1(decoded_chars_counter[9]),
        .I2(i[8]),
        .I3(decoded_chars_counter[8]),
        .O(decoded_characters_array_reg_i_30_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_31
       (.I0(decoded_chars_counter[7]),
        .I1(i[7]),
        .I2(decoded_chars_counter[6]),
        .I3(i[6]),
        .O(decoded_characters_array_reg_i_31_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_32
       (.I0(decoded_chars_counter[5]),
        .I1(i[5]),
        .I2(decoded_chars_counter[4]),
        .I3(i[4]),
        .O(decoded_characters_array_reg_i_32_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_33
       (.I0(decoded_chars_counter[3]),
        .I1(i[3]),
        .I2(decoded_chars_counter[2]),
        .I3(i[2]),
        .O(decoded_characters_array_reg_i_33_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_34
       (.I0(decoded_chars_counter[1]),
        .I1(i[1]),
        .I2(decoded_chars_counter[0]),
        .I3(i[0]),
        .O(decoded_characters_array_reg_i_34_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_35
       (.I0(i[7]),
        .I1(decoded_chars_counter[7]),
        .I2(i[6]),
        .I3(decoded_chars_counter[6]),
        .O(decoded_characters_array_reg_i_35_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_36
       (.I0(i[5]),
        .I1(decoded_chars_counter[5]),
        .I2(i[4]),
        .I3(decoded_chars_counter[4]),
        .O(decoded_characters_array_reg_i_36_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_37
       (.I0(i[3]),
        .I1(decoded_chars_counter[3]),
        .I2(i[2]),
        .I3(decoded_chars_counter[2]),
        .O(decoded_characters_array_reg_i_37_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_38
       (.I0(i[1]),
        .I1(decoded_chars_counter[1]),
        .I2(i[0]),
        .I3(decoded_chars_counter[0]),
        .O(decoded_characters_array_reg_i_38_n_0));
  CARRY4 decoded_characters_array_reg_i_4
       (.CI(decoded_characters_array_reg_i_13_n_0),
        .CO({decoded_characters_array_reg_i_4_n_0,decoded_characters_array_reg_i_4_n_1,decoded_characters_array_reg_i_4_n_2,decoded_characters_array_reg_i_4_n_3}),
        .CYINIT(1'b0),
        .DI({decoded_characters_array_reg_i_14_n_0,decoded_characters_array_reg_i_15_n_0,decoded_characters_array_reg_i_16_n_0,decoded_characters_array_reg_i_17_n_0}),
        .O(NLW_decoded_characters_array_reg_i_4_O_UNCONNECTED[3:0]),
        .S({decoded_characters_array_reg_i_18_n_0,decoded_characters_array_reg_i_19_n_0,decoded_characters_array_reg_i_20_n_0,decoded_characters_array_reg_i_21_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_5
       (.I0(i[31]),
        .I1(decoded_chars_counter[31]),
        .I2(decoded_chars_counter[30]),
        .I3(i[30]),
        .O(decoded_characters_array_reg_i_5_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_6
       (.I0(decoded_chars_counter[29]),
        .I1(i[29]),
        .I2(decoded_chars_counter[28]),
        .I3(i[28]),
        .O(decoded_characters_array_reg_i_6_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_7
       (.I0(decoded_chars_counter[27]),
        .I1(i[27]),
        .I2(decoded_chars_counter[26]),
        .I3(i[26]),
        .O(decoded_characters_array_reg_i_7_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    decoded_characters_array_reg_i_8
       (.I0(decoded_chars_counter[25]),
        .I1(i[25]),
        .I2(decoded_chars_counter[24]),
        .I3(i[24]),
        .O(decoded_characters_array_reg_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    decoded_characters_array_reg_i_9
       (.I0(i[31]),
        .I1(decoded_chars_counter[31]),
        .I2(i[30]),
        .I3(decoded_chars_counter[30]),
        .O(decoded_characters_array_reg_i_9_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \decoded_chars_counter[0]_i_1 
       (.I0(decoded_chars_counter[0]),
        .O(\decoded_chars_counter[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[12]_i_2 
       (.I0(decoded_chars_counter[12]),
        .O(\decoded_chars_counter[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[12]_i_3 
       (.I0(decoded_chars_counter[11]),
        .O(\decoded_chars_counter[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[12]_i_4 
       (.I0(decoded_chars_counter[10]),
        .O(\decoded_chars_counter[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[12]_i_5 
       (.I0(decoded_chars_counter[9]),
        .O(\decoded_chars_counter[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[16]_i_2 
       (.I0(decoded_chars_counter[16]),
        .O(\decoded_chars_counter[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[16]_i_3 
       (.I0(decoded_chars_counter[15]),
        .O(\decoded_chars_counter[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[16]_i_4 
       (.I0(decoded_chars_counter[14]),
        .O(\decoded_chars_counter[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[16]_i_5 
       (.I0(decoded_chars_counter[13]),
        .O(\decoded_chars_counter[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[20]_i_2 
       (.I0(decoded_chars_counter[20]),
        .O(\decoded_chars_counter[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[20]_i_3 
       (.I0(decoded_chars_counter[19]),
        .O(\decoded_chars_counter[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[20]_i_4 
       (.I0(decoded_chars_counter[18]),
        .O(\decoded_chars_counter[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[20]_i_5 
       (.I0(decoded_chars_counter[17]),
        .O(\decoded_chars_counter[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[24]_i_2 
       (.I0(decoded_chars_counter[24]),
        .O(\decoded_chars_counter[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[24]_i_3 
       (.I0(decoded_chars_counter[23]),
        .O(\decoded_chars_counter[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[24]_i_4 
       (.I0(decoded_chars_counter[22]),
        .O(\decoded_chars_counter[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[24]_i_5 
       (.I0(decoded_chars_counter[21]),
        .O(\decoded_chars_counter[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[28]_i_2 
       (.I0(decoded_chars_counter[28]),
        .O(\decoded_chars_counter[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[28]_i_3 
       (.I0(decoded_chars_counter[27]),
        .O(\decoded_chars_counter[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[28]_i_4 
       (.I0(decoded_chars_counter[26]),
        .O(\decoded_chars_counter[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[28]_i_5 
       (.I0(decoded_chars_counter[25]),
        .O(\decoded_chars_counter[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h000088880000888F)) 
    \decoded_chars_counter[31]_i_1 
       (.I0(\sub_state_reg_n_0_[2] ),
        .I1(\decoded_chars_counter[31]_i_4_n_0 ),
        .I2(\decoded_chars_counter[31]_i_5_n_0 ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(p_0_in__0),
        .O(\decoded_chars_counter[31]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \decoded_chars_counter[31]_i_11 
       (.I0(init_iterator_reg__0[15]),
        .O(\decoded_chars_counter[31]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \decoded_chars_counter[31]_i_12 
       (.I0(init_iterator_reg__0[14]),
        .I1(init_iterator_reg__0[13]),
        .I2(init_iterator_reg__0[12]),
        .O(\decoded_chars_counter[31]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \decoded_chars_counter[31]_i_13 
       (.I0(init_iterator_reg__0[11]),
        .I1(init_iterator_reg__0[10]),
        .I2(init_iterator_reg__0[9]),
        .O(\decoded_chars_counter[31]_i_13_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \decoded_chars_counter[31]_i_14 
       (.I0(init_iterator_reg__0[8]),
        .I1(init_iterator_reg__0[7]),
        .I2(init_iterator_reg__0[6]),
        .O(\decoded_chars_counter[31]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'h41000041)) 
    \decoded_chars_counter[31]_i_15 
       (.I0(init_iterator_reg[3]),
        .I1(\symbol_amount_var_reg_n_0_[5] ),
        .I2(init_iterator_reg[5]),
        .I3(init_iterator_reg[4]),
        .I4(\symbol_amount_var_reg_n_0_[4] ),
        .O(\decoded_chars_counter[31]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h41000041)) 
    \decoded_chars_counter[31]_i_16 
       (.I0(init_iterator_reg[2]),
        .I1(\symbol_amount_var_reg_n_0_[1] ),
        .I2(init_iterator_reg[1]),
        .I3(init_iterator_reg[0]),
        .I4(\symbol_amount_var_reg_n_0_[0] ),
        .O(\decoded_chars_counter[31]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'h888888888888888F)) 
    \decoded_chars_counter[31]_i_2 
       (.I0(\sub_state_reg_n_0_[2] ),
        .I1(\decoded_chars_counter[31]_i_4_n_0 ),
        .I2(\decoded_chars_counter[31]_i_5_n_0 ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg_n_0_[1] ),
        .I5(p_0_in__0),
        .O(\decoded_chars_counter[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    \decoded_chars_counter[31]_i_4 
       (.I0(\bit_index_rep[7]_i_3_n_0 ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[0] ),
        .I3(\state_reg_n_0_[3] ),
        .I4(\sub_state_reg_n_0_[3] ),
        .I5(\sub_state_reg_n_0_[1] ),
        .O(\decoded_chars_counter[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \decoded_chars_counter[31]_i_5 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[3] ),
        .O(\decoded_chars_counter[31]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[31]_i_7 
       (.I0(decoded_chars_counter[31]),
        .O(\decoded_chars_counter[31]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[31]_i_8 
       (.I0(decoded_chars_counter[30]),
        .O(\decoded_chars_counter[31]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[31]_i_9 
       (.I0(decoded_chars_counter[29]),
        .O(\decoded_chars_counter[31]_i_9_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[4]_i_2 
       (.I0(decoded_chars_counter[4]),
        .O(\decoded_chars_counter[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[4]_i_3 
       (.I0(decoded_chars_counter[3]),
        .O(\decoded_chars_counter[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[4]_i_4 
       (.I0(decoded_chars_counter[2]),
        .O(\decoded_chars_counter[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[4]_i_5 
       (.I0(decoded_chars_counter[1]),
        .O(\decoded_chars_counter[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[8]_i_2 
       (.I0(decoded_chars_counter[8]),
        .O(\decoded_chars_counter[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[8]_i_3 
       (.I0(decoded_chars_counter[7]),
        .O(\decoded_chars_counter[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[8]_i_4 
       (.I0(decoded_chars_counter[6]),
        .O(\decoded_chars_counter[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \decoded_chars_counter[8]_i_5 
       (.I0(decoded_chars_counter[5]),
        .O(\decoded_chars_counter[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(\decoded_chars_counter[0]_i_1_n_0 ),
        .Q(decoded_chars_counter[0]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[10]),
        .Q(decoded_chars_counter[10]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[11]),
        .Q(decoded_chars_counter[11]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[12]),
        .Q(decoded_chars_counter[12]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  CARRY4 \decoded_chars_counter_reg[12]_i_1 
       (.CI(\decoded_chars_counter_reg[8]_i_1_n_0 ),
        .CO({\decoded_chars_counter_reg[12]_i_1_n_0 ,\decoded_chars_counter_reg[12]_i_1_n_1 ,\decoded_chars_counter_reg[12]_i_1_n_2 ,\decoded_chars_counter_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(decoded_chars_counter0[12:9]),
        .S({\decoded_chars_counter[12]_i_2_n_0 ,\decoded_chars_counter[12]_i_3_n_0 ,\decoded_chars_counter[12]_i_4_n_0 ,\decoded_chars_counter[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[13]),
        .Q(decoded_chars_counter[13]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[14]),
        .Q(decoded_chars_counter[14]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[15]),
        .Q(decoded_chars_counter[15]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[16]),
        .Q(decoded_chars_counter[16]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  CARRY4 \decoded_chars_counter_reg[16]_i_1 
       (.CI(\decoded_chars_counter_reg[12]_i_1_n_0 ),
        .CO({\decoded_chars_counter_reg[16]_i_1_n_0 ,\decoded_chars_counter_reg[16]_i_1_n_1 ,\decoded_chars_counter_reg[16]_i_1_n_2 ,\decoded_chars_counter_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(decoded_chars_counter0[16:13]),
        .S({\decoded_chars_counter[16]_i_2_n_0 ,\decoded_chars_counter[16]_i_3_n_0 ,\decoded_chars_counter[16]_i_4_n_0 ,\decoded_chars_counter[16]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[17]),
        .Q(decoded_chars_counter[17]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[18]),
        .Q(decoded_chars_counter[18]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[19]),
        .Q(decoded_chars_counter[19]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[1]),
        .Q(decoded_chars_counter[1]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[20]),
        .Q(decoded_chars_counter[20]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  CARRY4 \decoded_chars_counter_reg[20]_i_1 
       (.CI(\decoded_chars_counter_reg[16]_i_1_n_0 ),
        .CO({\decoded_chars_counter_reg[20]_i_1_n_0 ,\decoded_chars_counter_reg[20]_i_1_n_1 ,\decoded_chars_counter_reg[20]_i_1_n_2 ,\decoded_chars_counter_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(decoded_chars_counter0[20:17]),
        .S({\decoded_chars_counter[20]_i_2_n_0 ,\decoded_chars_counter[20]_i_3_n_0 ,\decoded_chars_counter[20]_i_4_n_0 ,\decoded_chars_counter[20]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[21]),
        .Q(decoded_chars_counter[21]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[22]),
        .Q(decoded_chars_counter[22]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[23]),
        .Q(decoded_chars_counter[23]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[24]),
        .Q(decoded_chars_counter[24]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  CARRY4 \decoded_chars_counter_reg[24]_i_1 
       (.CI(\decoded_chars_counter_reg[20]_i_1_n_0 ),
        .CO({\decoded_chars_counter_reg[24]_i_1_n_0 ,\decoded_chars_counter_reg[24]_i_1_n_1 ,\decoded_chars_counter_reg[24]_i_1_n_2 ,\decoded_chars_counter_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(decoded_chars_counter0[24:21]),
        .S({\decoded_chars_counter[24]_i_2_n_0 ,\decoded_chars_counter[24]_i_3_n_0 ,\decoded_chars_counter[24]_i_4_n_0 ,\decoded_chars_counter[24]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[25]),
        .Q(decoded_chars_counter[25]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[26]),
        .Q(decoded_chars_counter[26]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[27]),
        .Q(decoded_chars_counter[27]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[28]),
        .Q(decoded_chars_counter[28]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  CARRY4 \decoded_chars_counter_reg[28]_i_1 
       (.CI(\decoded_chars_counter_reg[24]_i_1_n_0 ),
        .CO({\decoded_chars_counter_reg[28]_i_1_n_0 ,\decoded_chars_counter_reg[28]_i_1_n_1 ,\decoded_chars_counter_reg[28]_i_1_n_2 ,\decoded_chars_counter_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(decoded_chars_counter0[28:25]),
        .S({\decoded_chars_counter[28]_i_2_n_0 ,\decoded_chars_counter[28]_i_3_n_0 ,\decoded_chars_counter[28]_i_4_n_0 ,\decoded_chars_counter[28]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[29]),
        .Q(decoded_chars_counter[29]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[2]),
        .Q(decoded_chars_counter[2]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[30]),
        .Q(decoded_chars_counter[30]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[31]),
        .Q(decoded_chars_counter[31]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  CARRY4 \decoded_chars_counter_reg[31]_i_10 
       (.CI(1'b0),
        .CO({\decoded_chars_counter_reg[31]_i_10_n_0 ,\decoded_chars_counter_reg[31]_i_10_n_1 ,\decoded_chars_counter_reg[31]_i_10_n_2 ,\decoded_chars_counter_reg[31]_i_10_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_decoded_chars_counter_reg[31]_i_10_O_UNCONNECTED [3:0]),
        .S({\decoded_chars_counter[31]_i_13_n_0 ,\decoded_chars_counter[31]_i_14_n_0 ,\decoded_chars_counter[31]_i_15_n_0 ,\decoded_chars_counter[31]_i_16_n_0 }));
  CARRY4 \decoded_chars_counter_reg[31]_i_3 
       (.CI(\decoded_chars_counter_reg[28]_i_1_n_0 ),
        .CO({\NLW_decoded_chars_counter_reg[31]_i_3_CO_UNCONNECTED [3:2],\decoded_chars_counter_reg[31]_i_3_n_2 ,\decoded_chars_counter_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_decoded_chars_counter_reg[31]_i_3_O_UNCONNECTED [3],decoded_chars_counter0[31:29]}),
        .S({1'b0,\decoded_chars_counter[31]_i_7_n_0 ,\decoded_chars_counter[31]_i_8_n_0 ,\decoded_chars_counter[31]_i_9_n_0 }));
  CARRY4 \decoded_chars_counter_reg[31]_i_6 
       (.CI(\decoded_chars_counter_reg[31]_i_10_n_0 ),
        .CO({\NLW_decoded_chars_counter_reg[31]_i_6_CO_UNCONNECTED [3:2],p_0_in__0,\decoded_chars_counter_reg[31]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b1,1'b1}),
        .O(\NLW_decoded_chars_counter_reg[31]_i_6_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\decoded_chars_counter[31]_i_11_n_0 ,\decoded_chars_counter[31]_i_12_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[3]),
        .Q(decoded_chars_counter[3]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[4]),
        .Q(decoded_chars_counter[4]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  CARRY4 \decoded_chars_counter_reg[4]_i_1 
       (.CI(1'b0),
        .CO({\decoded_chars_counter_reg[4]_i_1_n_0 ,\decoded_chars_counter_reg[4]_i_1_n_1 ,\decoded_chars_counter_reg[4]_i_1_n_2 ,\decoded_chars_counter_reg[4]_i_1_n_3 }),
        .CYINIT(decoded_chars_counter[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(decoded_chars_counter0[4:1]),
        .S({\decoded_chars_counter[4]_i_2_n_0 ,\decoded_chars_counter[4]_i_3_n_0 ,\decoded_chars_counter[4]_i_4_n_0 ,\decoded_chars_counter[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[5]),
        .Q(decoded_chars_counter[5]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[6]),
        .Q(decoded_chars_counter[6]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[7]),
        .Q(decoded_chars_counter[7]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[8]),
        .Q(decoded_chars_counter[8]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  CARRY4 \decoded_chars_counter_reg[8]_i_1 
       (.CI(\decoded_chars_counter_reg[4]_i_1_n_0 ),
        .CO({\decoded_chars_counter_reg[8]_i_1_n_0 ,\decoded_chars_counter_reg[8]_i_1_n_1 ,\decoded_chars_counter_reg[8]_i_1_n_2 ,\decoded_chars_counter_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(decoded_chars_counter0[8:5]),
        .S({\decoded_chars_counter[8]_i_2_n_0 ,\decoded_chars_counter[8]_i_3_n_0 ,\decoded_chars_counter[8]_i_4_n_0 ,\decoded_chars_counter[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \decoded_chars_counter_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\decoded_chars_counter[31]_i_2_n_0 ),
        .D(decoded_chars_counter0[9]),
        .Q(decoded_chars_counter[9]),
        .R(\decoded_chars_counter[31]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_2 
       (.I0(i[12]),
        .O(\i[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_3__0 
       (.I0(i[11]),
        .O(\i[12]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_4__0 
       (.I0(i[10]),
        .O(\i[12]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[12]_i_5__0 
       (.I0(i[9]),
        .O(\i[12]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_2 
       (.I0(i[16]),
        .O(\i[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_3__0 
       (.I0(i[15]),
        .O(\i[16]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_4__0 
       (.I0(i[14]),
        .O(\i[16]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[16]_i_5__0 
       (.I0(i[13]),
        .O(\i[16]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_2 
       (.I0(i[20]),
        .O(\i[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_3__0 
       (.I0(i[19]),
        .O(\i[20]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_4__0 
       (.I0(i[18]),
        .O(\i[20]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[20]_i_5__0 
       (.I0(i[17]),
        .O(\i[20]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_2 
       (.I0(i[24]),
        .O(\i[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_3__0 
       (.I0(i[23]),
        .O(\i[24]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_4__0 
       (.I0(i[22]),
        .O(\i[24]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[24]_i_5__0 
       (.I0(i[21]),
        .O(\i[24]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_2 
       (.I0(i[28]),
        .O(\i[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_3__0 
       (.I0(i[27]),
        .O(\i[28]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_4__0 
       (.I0(i[26]),
        .O(\i[28]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[28]_i_5__0 
       (.I0(i[25]),
        .O(\i[28]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[31]_i_2__0 
       (.I0(i[31]),
        .O(\i[31]_i_2__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[31]_i_3__1 
       (.I0(i[30]),
        .O(\i[31]_i_3__1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i[31]_i_4__1 
       (.I0(i[29]),
        .O(\i[31]_i_4__1_n_0 ));
  LUT5 #(
    .INIT(32'h8888B3BB)) 
    \i[31]_i_5 
       (.I0(\state_reg[4] [0]),
        .I1(\state_reg[4] [2]),
        .I2(decoder_data_ready),
        .I3(CO),
        .I4(\state_reg[4] [1]),
        .O(\i_reg_rep[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(\i_rep[0]_i_1__0_n_0 ),
        .Q(i[0]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[10]),
        .Q(i[10]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[11]),
        .Q(i[11]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[12]),
        .Q(i[12]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  CARRY4 \i_reg[12]_i_1 
       (.CI(\i_reg_rep[6]_i_3_n_0 ),
        .CO({\i_reg[12]_i_1_n_0 ,\i_reg[12]_i_1_n_1 ,\i_reg[12]_i_1_n_2 ,\i_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[12:9]),
        .S({\i[12]_i_2_n_0 ,\i[12]_i_3__0_n_0 ,\i[12]_i_4__0_n_0 ,\i[12]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[13]),
        .Q(i[13]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[14]),
        .Q(i[14]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[15]),
        .Q(i[15]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[16]),
        .Q(i[16]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  CARRY4 \i_reg[16]_i_1 
       (.CI(\i_reg[12]_i_1_n_0 ),
        .CO({\i_reg[16]_i_1_n_0 ,\i_reg[16]_i_1_n_1 ,\i_reg[16]_i_1_n_2 ,\i_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[16:13]),
        .S({\i[16]_i_2_n_0 ,\i[16]_i_3__0_n_0 ,\i[16]_i_4__0_n_0 ,\i[16]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[17]),
        .Q(i[17]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[18]),
        .Q(i[18]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[19]),
        .Q(i[19]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[1]),
        .Q(i[1]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[20]),
        .Q(i[20]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  CARRY4 \i_reg[20]_i_1 
       (.CI(\i_reg[16]_i_1_n_0 ),
        .CO({\i_reg[20]_i_1_n_0 ,\i_reg[20]_i_1_n_1 ,\i_reg[20]_i_1_n_2 ,\i_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[20:17]),
        .S({\i[20]_i_2_n_0 ,\i[20]_i_3__0_n_0 ,\i[20]_i_4__0_n_0 ,\i[20]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[21]),
        .Q(i[21]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[22]),
        .Q(i[22]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[23]),
        .Q(i[23]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[24]),
        .Q(i[24]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  CARRY4 \i_reg[24]_i_1 
       (.CI(\i_reg[20]_i_1_n_0 ),
        .CO({\i_reg[24]_i_1_n_0 ,\i_reg[24]_i_1_n_1 ,\i_reg[24]_i_1_n_2 ,\i_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[24:21]),
        .S({\i[24]_i_2_n_0 ,\i[24]_i_3__0_n_0 ,\i[24]_i_4__0_n_0 ,\i[24]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[25]),
        .Q(i[25]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[26]),
        .Q(i[26]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[27]),
        .Q(i[27]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[28]),
        .Q(i[28]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  CARRY4 \i_reg[28]_i_1 
       (.CI(\i_reg[24]_i_1_n_0 ),
        .CO({\i_reg[28]_i_1_n_0 ,\i_reg[28]_i_1_n_1 ,\i_reg[28]_i_1_n_2 ,\i_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[28:25]),
        .S({\i[28]_i_2_n_0 ,\i[28]_i_3__0_n_0 ,\i[28]_i_4__0_n_0 ,\i[28]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[29]),
        .Q(i[29]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[2]),
        .Q(i[2]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[30]),
        .Q(i[30]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[31]),
        .Q(i[31]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  CARRY4 \i_reg[31]_i_1 
       (.CI(\i_reg[28]_i_1_n_0 ),
        .CO({\NLW_i_reg[31]_i_1_CO_UNCONNECTED [3:2],\i_reg[31]_i_1_n_2 ,\i_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_i_reg[31]_i_1_O_UNCONNECTED [3],i0[31:29]}),
        .S({1'b0,\i[31]_i_2__0_n_0 ,\i[31]_i_3__1_n_0 ,\i[31]_i_4__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[3]),
        .Q(i[3]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[4]),
        .Q(i[4]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[5]),
        .Q(i[5]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[6]),
        .Q(i[6]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[7]),
        .Q(i[7]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[8]),
        .Q(i[8]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[9]),
        .Q(i[9]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(\i_rep[0]_i_1__0_n_0 ),
        .Q(i_reg_rep[0]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[1]),
        .Q(i_reg_rep[1]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[2]),
        .Q(i_reg_rep[2]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[3]),
        .Q(i_reg_rep[3]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[4]),
        .Q(i_reg_rep[4]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  CARRY4 \i_reg_rep[4]_i_1 
       (.CI(1'b0),
        .CO({\i_reg_rep[4]_i_1_n_0 ,\i_reg_rep[4]_i_1_n_1 ,\i_reg_rep[4]_i_1_n_2 ,\i_reg_rep[4]_i_1_n_3 }),
        .CYINIT(i[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[4:1]),
        .S({\i_rep[4]_i_2_n_0 ,\i_rep[4]_i_3__0_n_0 ,\i_rep[4]_i_4__0_n_0 ,\i_rep[4]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[5]),
        .Q(i_reg_rep[5]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \i_reg_rep[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\i_rep[6]_i_2_n_0 ),
        .D(i0[6]),
        .Q(i_reg_rep[6]),
        .R(\i_rep[6]_i_1__0_n_0 ));
  CARRY4 \i_reg_rep[6]_i_3 
       (.CI(\i_reg_rep[4]_i_1_n_0 ),
        .CO({\i_reg_rep[6]_i_3_n_0 ,\i_reg_rep[6]_i_3_n_1 ,\i_reg_rep[6]_i_3_n_2 ,\i_reg_rep[6]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(i0[8:5]),
        .S({\i_rep[6]_i_7_n_0 ,\i_rep[6]_i_8_n_0 ,\i_rep[6]_i_9_n_0 ,\i_rep[6]_i_10_n_0 }));
  LUT1 #(
    .INIT(2'h1)) 
    \i_rep[0]_i_1__0 
       (.I0(i[0]),
        .O(\i_rep[0]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[4]_i_2 
       (.I0(i[4]),
        .O(\i_rep[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[4]_i_3__0 
       (.I0(i[3]),
        .O(\i_rep[4]_i_3__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[4]_i_4__0 
       (.I0(i[2]),
        .O(\i_rep[4]_i_4__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[4]_i_5__0 
       (.I0(i[1]),
        .O(\i_rep[4]_i_5__0_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[6]_i_10 
       (.I0(i[5]),
        .O(\i_rep[6]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h22232222)) 
    \i_rep[6]_i_1__0 
       (.I0(\i_rep[6]_i_4_n_0 ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\i_rep[6]_i_5_n_0 ),
        .I3(\code_position_reg_rep[5]_i_4_n_0 ),
        .I4(\code_position_rep[5]_i_3_n_0 ),
        .O(\i_rep[6]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hEAEAEAFFEAEAEAEA)) 
    \i_rep[6]_i_2 
       (.I0(\i_rep[6]_i_4_n_0 ),
        .I1(\i_rep[6]_i_6_n_0 ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\i_rep[6]_i_5_n_0 ),
        .I4(\code_position_reg_rep[5]_i_4_n_0 ),
        .I5(\code_position_rep[5]_i_3_n_0 ),
        .O(\i_rep[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \i_rep[6]_i_4 
       (.I0(p_0_in__0),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[3] ),
        .O(\i_rep[6]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \i_rep[6]_i_5 
       (.I0(\sub_state_reg_n_0_[1] ),
        .I1(\sub_state_reg_n_0_[2] ),
        .O(\i_rep[6]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \i_rep[6]_i_6 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[3] ),
        .O(\i_rep[6]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[6]_i_7 
       (.I0(i[8]),
        .O(\i_rep[6]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[6]_i_8 
       (.I0(i[7]),
        .O(\i_rep[6]_i_8_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \i_rep[6]_i_9 
       (.I0(i[6]),
        .O(\i_rep[6]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h0004)) 
    \init_iterator[0]_i_1 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[0] ),
        .O(\init_iterator[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[0]_i_3 
       (.I0(init_iterator_reg[3]),
        .O(\init_iterator[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[0]_i_4 
       (.I0(init_iterator_reg[2]),
        .O(\init_iterator[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[0]_i_5 
       (.I0(init_iterator_reg[1]),
        .O(\init_iterator[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \init_iterator[0]_i_6 
       (.I0(init_iterator_reg[0]),
        .O(\init_iterator[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[12]_i_2 
       (.I0(init_iterator_reg__0[15]),
        .O(\init_iterator[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[12]_i_3 
       (.I0(init_iterator_reg__0[14]),
        .O(\init_iterator[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[12]_i_4 
       (.I0(init_iterator_reg__0[13]),
        .O(\init_iterator[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[12]_i_5 
       (.I0(init_iterator_reg__0[12]),
        .O(\init_iterator[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[4]_i_2 
       (.I0(init_iterator_reg__0[7]),
        .O(\init_iterator[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[4]_i_3 
       (.I0(init_iterator_reg__0[6]),
        .O(\init_iterator[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[4]_i_4 
       (.I0(init_iterator_reg[5]),
        .O(\init_iterator[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[4]_i_5 
       (.I0(init_iterator_reg[4]),
        .O(\init_iterator[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[8]_i_2 
       (.I0(init_iterator_reg__0[11]),
        .O(\init_iterator[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[8]_i_3 
       (.I0(init_iterator_reg__0[10]),
        .O(\init_iterator[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[8]_i_4 
       (.I0(init_iterator_reg__0[9]),
        .O(\init_iterator[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \init_iterator[8]_i_5 
       (.I0(init_iterator_reg__0[8]),
        .O(\init_iterator[8]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[0]_i_2_n_7 ),
        .Q(init_iterator_reg[0]),
        .R(1'b0));
  CARRY4 \init_iterator_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\init_iterator_reg[0]_i_2_n_0 ,\init_iterator_reg[0]_i_2_n_1 ,\init_iterator_reg[0]_i_2_n_2 ,\init_iterator_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\init_iterator_reg[0]_i_2_n_4 ,\init_iterator_reg[0]_i_2_n_5 ,\init_iterator_reg[0]_i_2_n_6 ,\init_iterator_reg[0]_i_2_n_7 }),
        .S({\init_iterator[0]_i_3_n_0 ,\init_iterator[0]_i_4_n_0 ,\init_iterator[0]_i_5_n_0 ,\init_iterator[0]_i_6_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[8]_i_1_n_5 ),
        .Q(init_iterator_reg__0[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[8]_i_1_n_4 ),
        .Q(init_iterator_reg__0[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[12]_i_1_n_7 ),
        .Q(init_iterator_reg__0[12]),
        .R(1'b0));
  CARRY4 \init_iterator_reg[12]_i_1 
       (.CI(\init_iterator_reg[8]_i_1_n_0 ),
        .CO({\NLW_init_iterator_reg[12]_i_1_CO_UNCONNECTED [3],\init_iterator_reg[12]_i_1_n_1 ,\init_iterator_reg[12]_i_1_n_2 ,\init_iterator_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\init_iterator_reg[12]_i_1_n_4 ,\init_iterator_reg[12]_i_1_n_5 ,\init_iterator_reg[12]_i_1_n_6 ,\init_iterator_reg[12]_i_1_n_7 }),
        .S({\init_iterator[12]_i_2_n_0 ,\init_iterator[12]_i_3_n_0 ,\init_iterator[12]_i_4_n_0 ,\init_iterator[12]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[12]_i_1_n_6 ),
        .Q(init_iterator_reg__0[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[12]_i_1_n_5 ),
        .Q(init_iterator_reg__0[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[12]_i_1_n_4 ),
        .Q(init_iterator_reg__0[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[0]_i_2_n_6 ),
        .Q(init_iterator_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[0]_i_2_n_5 ),
        .Q(init_iterator_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[0]_i_2_n_4 ),
        .Q(init_iterator_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[4]_i_1_n_7 ),
        .Q(init_iterator_reg[4]),
        .R(1'b0));
  CARRY4 \init_iterator_reg[4]_i_1 
       (.CI(\init_iterator_reg[0]_i_2_n_0 ),
        .CO({\init_iterator_reg[4]_i_1_n_0 ,\init_iterator_reg[4]_i_1_n_1 ,\init_iterator_reg[4]_i_1_n_2 ,\init_iterator_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\init_iterator_reg[4]_i_1_n_4 ,\init_iterator_reg[4]_i_1_n_5 ,\init_iterator_reg[4]_i_1_n_6 ,\init_iterator_reg[4]_i_1_n_7 }),
        .S({\init_iterator[4]_i_2_n_0 ,\init_iterator[4]_i_3_n_0 ,\init_iterator[4]_i_4_n_0 ,\init_iterator[4]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[4]_i_1_n_6 ),
        .Q(init_iterator_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[4]_i_1_n_5 ),
        .Q(init_iterator_reg__0[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[4]_i_1_n_4 ),
        .Q(init_iterator_reg__0[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[8]_i_1_n_7 ),
        .Q(init_iterator_reg__0[8]),
        .R(1'b0));
  CARRY4 \init_iterator_reg[8]_i_1 
       (.CI(\init_iterator_reg[4]_i_1_n_0 ),
        .CO({\init_iterator_reg[8]_i_1_n_0 ,\init_iterator_reg[8]_i_1_n_1 ,\init_iterator_reg[8]_i_1_n_2 ,\init_iterator_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\init_iterator_reg[8]_i_1_n_4 ,\init_iterator_reg[8]_i_1_n_5 ,\init_iterator_reg[8]_i_1_n_6 ,\init_iterator_reg[8]_i_1_n_7 }),
        .S({\init_iterator[8]_i_2_n_0 ,\init_iterator[8]_i_3_n_0 ,\init_iterator[8]_i_4_n_0 ,\init_iterator[8]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \init_iterator_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\init_iterator[0]_i_1_n_0 ),
        .D(\init_iterator_reg[8]_i_1_n_6 ),
        .Q(init_iterator_reg__0[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [0]),
        .Q(input_data_length[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [10]),
        .Q(input_data_length[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [11]),
        .Q(input_data_length[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [12]),
        .Q(input_data_length[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [13]),
        .Q(input_data_length[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [14]),
        .Q(input_data_length[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [15]),
        .Q(input_data_length[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [16]),
        .Q(input_data_length[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [17]),
        .Q(input_data_length[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [18]),
        .Q(input_data_length[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [19]),
        .Q(input_data_length[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [1]),
        .Q(input_data_length[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [20]),
        .Q(input_data_length[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [21]),
        .Q(input_data_length[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [22]),
        .Q(input_data_length[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [23]),
        .Q(input_data_length[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [24]),
        .Q(input_data_length[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [25]),
        .Q(input_data_length[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [26]),
        .Q(input_data_length[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [27]),
        .Q(input_data_length[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [28]),
        .Q(input_data_length[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [29]),
        .Q(input_data_length[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [2]),
        .Q(input_data_length[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [30]),
        .Q(input_data_length[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [31]),
        .Q(input_data_length[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [3]),
        .Q(input_data_length[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [4]),
        .Q(input_data_length[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [5]),
        .Q(input_data_length[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [6]),
        .Q(input_data_length[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [7]),
        .Q(input_data_length[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [8]),
        .Q(input_data_length[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \input_data_length_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(\decoder_data_length_in_reg[31] [9]),
        .Q(input_data_length[9]),
        .R(1'b0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_UNIQ_BASE_ input_data_reg_0_127_0_0
       (.A(bits_counter_reg[6:0]),
        .D(data_in),
        .DPO(input_data_reg_0_127_0_0_n_0),
        .DPRA({\bit_index_reg_rep_n_0_[6] ,\bit_index_reg_rep_n_0_[5] ,\bit_index_reg_rep_n_0_[4] ,\bit_index_reg_rep_n_0_[3] ,\bit_index_reg_rep_n_0_[2] ,\bit_index_reg_rep_n_0_[1] ,\bit_index_reg_rep_n_0_[0] }),
        .SPO(input_data_reg_0_127_0_0_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(input_data_reg_0_127_0_0_i_1_n_0));
  LUT4 #(
    .INIT(16'h0002)) 
    input_data_reg_0_127_0_0_i_1
       (.I0(p_0_in),
        .I1(bits_counter_reg[9]),
        .I2(bits_counter_reg[7]),
        .I3(bits_counter_reg[8]),
        .O(input_data_reg_0_127_0_0_i_1_n_0));
  LUT5 #(
    .INIT(32'h00020000)) 
    input_data_reg_0_127_0_0_i_2
       (.I0(decoder_data_enable_reg),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[0] ),
        .O(p_0_in));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD1703 input_data_reg_128_255_0_0
       (.A(bits_counter_reg[6:0]),
        .D(data_in),
        .DPO(input_data_reg_128_255_0_0_n_0),
        .DPRA({\bit_index_reg_rep_n_0_[6] ,\bit_index_reg_rep_n_0_[5] ,\bit_index_reg_rep_n_0_[4] ,\bit_index_reg_rep_n_0_[3] ,\bit_index_reg_rep_n_0_[2] ,\bit_index_reg_rep_n_0_[1] ,\bit_index_reg_rep_n_0_[0] }),
        .SPO(input_data_reg_128_255_0_0_n_1),
        .WCLK(clock_IBUF_BUFG),
        .WE(input_data_reg_128_255_0_0_i_1_n_0));
  LUT4 #(
    .INIT(16'h1000)) 
    input_data_reg_128_255_0_0_i_1
       (.I0(bits_counter_reg[8]),
        .I1(bits_counter_reg[9]),
        .I2(bits_counter_reg[7]),
        .I3(p_0_in),
        .O(input_data_reg_128_255_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[10]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[9]),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[11]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[10]),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[12]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[11]),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[13]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[12]),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[14]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[13]),
        .O(D[14]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[15]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[14]),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[16]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[15]),
        .O(D[16]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[17]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[16]),
        .O(D[17]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[18]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[17]),
        .O(D[18]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[19]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[18]),
        .O(D[19]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[20]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[19]),
        .O(D[20]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[21]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[20]),
        .O(D[21]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[22]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[21]),
        .O(D[22]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[23]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[22]),
        .O(D[23]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[24]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[23]),
        .O(D[24]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[25]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[24]),
        .O(D[25]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[26]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[25]),
        .O(D[26]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[27]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[26]),
        .O(D[27]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[28]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[27]),
        .O(D[28]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[29]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[28]),
        .O(D[29]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[30]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[29]),
        .O(D[30]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k[31]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[30]),
        .O(D[31]));
  LUT6 #(
    .INIT(64'h00000000EFFFFFFF)) 
    \k_rep[0]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(\k_reg[0] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k_rep[1]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[0]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k_rep[2]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[1]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k_rep[3]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[2]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k_rep[4]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[3]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k_rep[5]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[4]),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k_rep[6]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[5]),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k_rep[7]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[6]),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k_rep[8]_i_1 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[7]),
        .O(D[8]));
  LUT3 #(
    .INIT(8'h08)) 
    \k_rep[9]_i_1 
       (.I0(\k_rep[9]_i_3_n_0 ),
        .I1(\state_reg[4] [3]),
        .I2(\state_reg[4] [4]),
        .O(E));
  LUT6 #(
    .INIT(64'hEFFFFFFF00000000)) 
    \k_rep[9]_i_2 
       (.I0(\state_reg[4] [4]),
        .I1(\state_reg[1]_0 ),
        .I2(\k_rep[9]_i_5_n_0 ),
        .I3(\state_reg[1]_1 ),
        .I4(\state_reg[4] [3]),
        .I5(data0[8]),
        .O(D[9]));
  LUT6 #(
    .INIT(64'h000000002F200000)) 
    \k_rep[9]_i_3 
       (.I0(CO),
        .I1(decoder_data_ready),
        .I2(\state_reg[4] [2]),
        .I3(\decoded_symbols_number_reg[30] ),
        .I4(\state_reg[4] [0]),
        .I5(\state_reg[4] [1]),
        .O(\k_rep[9]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    \k_rep[9]_i_5 
       (.I0(CO),
        .I1(decoder_data_ready),
        .O(\k_rep[9]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFEFFFE00)) 
    \sequence_to_and[0]_i_1 
       (.I0(\sequence_to_and[31]_i_4_n_0 ),
        .I1(character_length[1]),
        .I2(character_length[0]),
        .I3(\sequence_to_and[31]_i_2_n_0 ),
        .I4(\sequence_to_and_reg_n_0_[0] ),
        .O(\sequence_to_and[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \sequence_to_and[13]_i_2 
       (.I0(character_length[1]),
        .I1(character_length[0]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[13]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00001000)) 
    \sequence_to_and[13]_i_3 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[13]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \sequence_to_and[13]_i_4 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[13]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000040)) 
    \sequence_to_and[13]_i_5 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[13]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    \sequence_to_and[13]_i_6 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[0]),
        .I4(character_length[1]),
        .O(\sequence_to_and[13]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFBF)) 
    \sequence_to_and[13]_i_7 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[13]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \sequence_to_and[13]_i_8 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[13]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \sequence_to_and[13]_i_9 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[13]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \sequence_to_and[17]_i_10 
       (.I0(character_length[5]),
        .I1(character_length[6]),
        .I2(character_length[7]),
        .I3(character_length[4]),
        .O(\sequence_to_and[17]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h00000004)) 
    \sequence_to_and[17]_i_2 
       (.I0(character_length[1]),
        .I1(character_length[0]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[3]),
        .I4(character_length[2]),
        .O(\sequence_to_and[17]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000001)) 
    \sequence_to_and[17]_i_3 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[3]),
        .I4(character_length[2]),
        .O(\sequence_to_and[17]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h40000000)) 
    \sequence_to_and[17]_i_4 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[3]),
        .I2(character_length[2]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[17]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \sequence_to_and[17]_i_5 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[17]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \sequence_to_and[17]_i_6 
       (.I0(character_length[2]),
        .I1(character_length[3]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[0]),
        .I4(character_length[1]),
        .O(\sequence_to_and[17]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \sequence_to_and[17]_i_7 
       (.I0(character_length[2]),
        .I1(character_length[3]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[17]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \sequence_to_and[17]_i_8 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[2]),
        .I3(character_length[3]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[17]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFBFFF)) 
    \sequence_to_and[17]_i_9 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[17]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hEFE0)) 
    \sequence_to_and[1]_i_1 
       (.I0(\sequence_to_and[31]_i_4_n_0 ),
        .I1(character_length[1]),
        .I2(\sequence_to_and[31]_i_2_n_0 ),
        .I3(\sequence_to_and_reg_n_0_[1] ),
        .O(\sequence_to_and[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000040)) 
    \sequence_to_and[21]_i_2 
       (.I0(character_length[1]),
        .I1(character_length[0]),
        .I2(character_length[2]),
        .I3(character_length[3]),
        .I4(\sequence_to_and[31]_i_8_n_0 ),
        .O(\sequence_to_and[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \sequence_to_and[21]_i_3 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[2]),
        .I3(character_length[3]),
        .I4(\sequence_to_and[31]_i_8_n_0 ),
        .O(\sequence_to_and[21]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00000008)) 
    \sequence_to_and[21]_i_4 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[3]),
        .I4(character_length[2]),
        .O(\sequence_to_and[21]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000004)) 
    \sequence_to_and[21]_i_5 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[3]),
        .I4(character_length[2]),
        .O(\sequence_to_and[21]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \sequence_to_and[21]_i_6 
       (.I0(\sequence_to_and[31]_i_8_n_0 ),
        .I1(character_length[3]),
        .I2(character_length[2]),
        .I3(character_length[0]),
        .I4(character_length[1]),
        .O(\sequence_to_and[21]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \sequence_to_and[21]_i_7 
       (.I0(\sequence_to_and[31]_i_8_n_0 ),
        .I1(character_length[3]),
        .I2(character_length[2]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[21]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFEFFFFFF)) 
    \sequence_to_and[21]_i_8 
       (.I0(character_length[2]),
        .I1(character_length[3]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[21]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    \sequence_to_and[21]_i_9 
       (.I0(character_length[2]),
        .I1(character_length[3]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[21]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h00000040)) 
    \sequence_to_and[25]_i_2 
       (.I0(character_length[1]),
        .I1(character_length[0]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[31]_i_8_n_0 ),
        .O(\sequence_to_and[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \sequence_to_and[25]_i_3 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[31]_i_8_n_0 ),
        .O(\sequence_to_and[25]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \sequence_to_and[25]_i_4 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[2]),
        .I3(character_length[3]),
        .I4(\sequence_to_and[31]_i_8_n_0 ),
        .O(\sequence_to_and[25]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000040)) 
    \sequence_to_and[25]_i_5 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[2]),
        .I3(character_length[3]),
        .I4(\sequence_to_and[31]_i_8_n_0 ),
        .O(\sequence_to_and[25]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \sequence_to_and[25]_i_6 
       (.I0(\sequence_to_and[31]_i_8_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[0]),
        .I4(character_length[1]),
        .O(\sequence_to_and[25]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \sequence_to_and[25]_i_7 
       (.I0(\sequence_to_and[31]_i_8_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[25]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \sequence_to_and[25]_i_8 
       (.I0(\sequence_to_and[31]_i_8_n_0 ),
        .I1(character_length[3]),
        .I2(character_length[2]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[25]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \sequence_to_and[25]_i_9 
       (.I0(\sequence_to_and[31]_i_8_n_0 ),
        .I1(character_length[3]),
        .I2(character_length[2]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[25]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h04000000)) 
    \sequence_to_and[29]_i_2 
       (.I0(character_length[1]),
        .I1(character_length[0]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[3]),
        .I4(character_length[2]),
        .O(\sequence_to_and[29]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h01000000)) 
    \sequence_to_and[29]_i_3 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[3]),
        .I4(character_length[2]),
        .O(\sequence_to_and[29]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \sequence_to_and[29]_i_4 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[31]_i_8_n_0 ),
        .O(\sequence_to_and[29]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000040)) 
    \sequence_to_and[29]_i_5 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[31]_i_8_n_0 ),
        .O(\sequence_to_and[29]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \sequence_to_and[29]_i_6 
       (.I0(character_length[2]),
        .I1(character_length[3]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[0]),
        .I4(character_length[1]),
        .O(\sequence_to_and[29]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFF7)) 
    \sequence_to_and[29]_i_7 
       (.I0(character_length[2]),
        .I1(character_length[3]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[29]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \sequence_to_and[29]_i_8 
       (.I0(\sequence_to_and[31]_i_8_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[29]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \sequence_to_and[29]_i_9 
       (.I0(\sequence_to_and[31]_i_8_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[29]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'h0002)) 
    \sequence_to_and[31]_i_1 
       (.I0(\sequence_to_and[31]_i_2_n_0 ),
        .I1(character_length[0]),
        .I2(character_length[1]),
        .I3(\sequence_to_and[31]_i_4_n_0 ),
        .O(\sequence_to_and[31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000040)) 
    \sequence_to_and[31]_i_2 
       (.I0(\sub_state_reg_n_0_[2] ),
        .I1(\sub_state_reg[0]_i_5_n_0 ),
        .I2(\sub_state_reg_n_0_[1] ),
        .I3(\sub_state_reg_n_0_[3] ),
        .I4(\bit_index_rep[7]_i_4_n_0 ),
        .I5(\bit_index_rep[7]_i_3_n_0 ),
        .O(\sequence_to_and[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \sequence_to_and[31]_i_4 
       (.I0(character_length[3]),
        .I1(character_length[2]),
        .I2(character_length[4]),
        .I3(character_length[7]),
        .I4(character_length[6]),
        .I5(character_length[5]),
        .O(\sequence_to_and[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h04000000)) 
    \sequence_to_and[31]_i_5 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[3]),
        .I4(character_length[2]),
        .O(\sequence_to_and[31]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFF7FFF)) 
    \sequence_to_and[31]_i_6 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[2]),
        .I3(character_length[3]),
        .I4(\sequence_to_and[31]_i_8_n_0 ),
        .O(\sequence_to_and[31]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFF7FF)) 
    \sequence_to_and[31]_i_7 
       (.I0(character_length[2]),
        .I1(character_length[3]),
        .I2(\sequence_to_and[31]_i_8_n_0 ),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \sequence_to_and[31]_i_8 
       (.I0(character_length[5]),
        .I1(character_length[6]),
        .I2(character_length[7]),
        .I3(character_length[4]),
        .O(\sequence_to_and[31]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hFD)) 
    \sequence_to_and[5]_i_10 
       (.I0(character_length[1]),
        .I1(character_length[0]),
        .I2(\sequence_to_and[31]_i_4_n_0 ),
        .O(\sequence_to_and[5]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \sequence_to_and[5]_i_2 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(\sequence_to_and[31]_i_4_n_0 ),
        .O(sequence_to_and1));
  LUT5 #(
    .INIT(32'h00000040)) 
    \sequence_to_and[5]_i_3 
       (.I0(character_length[1]),
        .I1(character_length[0]),
        .I2(character_length[2]),
        .I3(character_length[3]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[5]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \sequence_to_and[5]_i_4 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[2]),
        .I3(character_length[3]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[5]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \sequence_to_and[5]_i_5 
       (.I0(\sequence_to_and[31]_i_4_n_0 ),
        .I1(character_length[0]),
        .I2(character_length[1]),
        .O(\sequence_to_and[5]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \sequence_to_and[5]_i_6 
       (.I0(\sequence_to_and[31]_i_4_n_0 ),
        .I1(character_length[0]),
        .I2(character_length[1]),
        .O(\sequence_to_and[5]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \sequence_to_and[5]_i_7 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[3]),
        .I2(character_length[2]),
        .I3(character_length[0]),
        .I4(character_length[1]),
        .O(\sequence_to_and[5]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \sequence_to_and[5]_i_8 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[3]),
        .I2(character_length[2]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[5]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'hF7)) 
    \sequence_to_and[5]_i_9 
       (.I0(character_length[1]),
        .I1(character_length[0]),
        .I2(\sequence_to_and[31]_i_4_n_0 ),
        .O(\sequence_to_and[5]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h00000040)) 
    \sequence_to_and[9]_i_2 
       (.I0(character_length[1]),
        .I1(character_length[0]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[9]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \sequence_to_and[9]_i_3 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[9]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h00000080)) 
    \sequence_to_and[9]_i_4 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[2]),
        .I3(character_length[3]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[9]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000040)) 
    \sequence_to_and[9]_i_5 
       (.I0(character_length[0]),
        .I1(character_length[1]),
        .I2(character_length[2]),
        .I3(character_length[3]),
        .I4(\sequence_to_and[17]_i_10_n_0 ),
        .O(\sequence_to_and[9]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \sequence_to_and[9]_i_6 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[0]),
        .I4(character_length[1]),
        .O(\sequence_to_and[9]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \sequence_to_and[9]_i_7 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[9]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hEFFFFFFF)) 
    \sequence_to_and[9]_i_8 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[3]),
        .I2(character_length[2]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[9]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFEFFF)) 
    \sequence_to_and[9]_i_9 
       (.I0(\sequence_to_and[17]_i_10_n_0 ),
        .I1(character_length[3]),
        .I2(character_length[2]),
        .I3(character_length[1]),
        .I4(character_length[0]),
        .O(\sequence_to_and[9]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\sequence_to_and[0]_i_1_n_0 ),
        .Q(\sequence_to_and_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[10] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[10]),
        .Q(\sequence_to_and_reg_n_0_[10] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[11] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[11]),
        .Q(\sequence_to_and_reg_n_0_[11] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[12] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[12]),
        .Q(\sequence_to_and_reg_n_0_[12] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[13] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[13]),
        .Q(\sequence_to_and_reg_n_0_[13] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  CARRY4 \sequence_to_and_reg[13]_i_1 
       (.CI(\sequence_to_and_reg[9]_i_1_n_0 ),
        .CO({\sequence_to_and_reg[13]_i_1_n_0 ,\sequence_to_and_reg[13]_i_1_n_1 ,\sequence_to_and_reg[13]_i_1_n_2 ,\sequence_to_and_reg[13]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sequence_to_and[13]_i_2_n_0 ,\sequence_to_and[13]_i_3_n_0 ,\sequence_to_and[13]_i_4_n_0 ,\sequence_to_and[13]_i_5_n_0 }),
        .O(data0_0[13:10]),
        .S({\sequence_to_and[13]_i_6_n_0 ,\sequence_to_and[13]_i_7_n_0 ,\sequence_to_and[13]_i_8_n_0 ,\sequence_to_and[13]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[14] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[14]),
        .Q(\sequence_to_and_reg_n_0_[14] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[15] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[15]),
        .Q(\sequence_to_and_reg_n_0_[15] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[16] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[16]),
        .Q(\sequence_to_and_reg_n_0_[16] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[17] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[17]),
        .Q(\sequence_to_and_reg_n_0_[17] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  CARRY4 \sequence_to_and_reg[17]_i_1 
       (.CI(\sequence_to_and_reg[13]_i_1_n_0 ),
        .CO({\sequence_to_and_reg[17]_i_1_n_0 ,\sequence_to_and_reg[17]_i_1_n_1 ,\sequence_to_and_reg[17]_i_1_n_2 ,\sequence_to_and_reg[17]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sequence_to_and[17]_i_2_n_0 ,\sequence_to_and[17]_i_3_n_0 ,\sequence_to_and[17]_i_4_n_0 ,\sequence_to_and[17]_i_5_n_0 }),
        .O(data0_0[17:14]),
        .S({\sequence_to_and[17]_i_6_n_0 ,\sequence_to_and[17]_i_7_n_0 ,\sequence_to_and[17]_i_8_n_0 ,\sequence_to_and[17]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[18] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[18]),
        .Q(\sequence_to_and_reg_n_0_[18] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[19] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[19]),
        .Q(\sequence_to_and_reg_n_0_[19] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(1'b1),
        .D(\sequence_to_and[1]_i_1_n_0 ),
        .Q(\sequence_to_and_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[20] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[20]),
        .Q(\sequence_to_and_reg_n_0_[20] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[21] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[21]),
        .Q(\sequence_to_and_reg_n_0_[21] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  CARRY4 \sequence_to_and_reg[21]_i_1 
       (.CI(\sequence_to_and_reg[17]_i_1_n_0 ),
        .CO({\sequence_to_and_reg[21]_i_1_n_0 ,\sequence_to_and_reg[21]_i_1_n_1 ,\sequence_to_and_reg[21]_i_1_n_2 ,\sequence_to_and_reg[21]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sequence_to_and[21]_i_2_n_0 ,\sequence_to_and[21]_i_3_n_0 ,\sequence_to_and[21]_i_4_n_0 ,\sequence_to_and[21]_i_5_n_0 }),
        .O(data0_0[21:18]),
        .S({\sequence_to_and[21]_i_6_n_0 ,\sequence_to_and[21]_i_7_n_0 ,\sequence_to_and[21]_i_8_n_0 ,\sequence_to_and[21]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[22] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[22]),
        .Q(\sequence_to_and_reg_n_0_[22] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[23] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[23]),
        .Q(\sequence_to_and_reg_n_0_[23] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[24] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[24]),
        .Q(\sequence_to_and_reg_n_0_[24] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[25] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[25]),
        .Q(\sequence_to_and_reg_n_0_[25] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  CARRY4 \sequence_to_and_reg[25]_i_1 
       (.CI(\sequence_to_and_reg[21]_i_1_n_0 ),
        .CO({\sequence_to_and_reg[25]_i_1_n_0 ,\sequence_to_and_reg[25]_i_1_n_1 ,\sequence_to_and_reg[25]_i_1_n_2 ,\sequence_to_and_reg[25]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sequence_to_and[25]_i_2_n_0 ,\sequence_to_and[25]_i_3_n_0 ,\sequence_to_and[25]_i_4_n_0 ,\sequence_to_and[25]_i_5_n_0 }),
        .O(data0_0[25:22]),
        .S({\sequence_to_and[25]_i_6_n_0 ,\sequence_to_and[25]_i_7_n_0 ,\sequence_to_and[25]_i_8_n_0 ,\sequence_to_and[25]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[26] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[26]),
        .Q(\sequence_to_and_reg_n_0_[26] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[27] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[27]),
        .Q(\sequence_to_and_reg_n_0_[27] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[28] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[28]),
        .Q(\sequence_to_and_reg_n_0_[28] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[29] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[29]),
        .Q(\sequence_to_and_reg_n_0_[29] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  CARRY4 \sequence_to_and_reg[29]_i_1 
       (.CI(\sequence_to_and_reg[25]_i_1_n_0 ),
        .CO({\sequence_to_and_reg[29]_i_1_n_0 ,\sequence_to_and_reg[29]_i_1_n_1 ,\sequence_to_and_reg[29]_i_1_n_2 ,\sequence_to_and_reg[29]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sequence_to_and[29]_i_2_n_0 ,\sequence_to_and[29]_i_3_n_0 ,\sequence_to_and[29]_i_4_n_0 ,\sequence_to_and[29]_i_5_n_0 }),
        .O(data0_0[29:26]),
        .S({\sequence_to_and[29]_i_6_n_0 ,\sequence_to_and[29]_i_7_n_0 ,\sequence_to_and[29]_i_8_n_0 ,\sequence_to_and[29]_i_9_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[2]),
        .Q(\sequence_to_and_reg_n_0_[2] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[30] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[30]),
        .Q(\sequence_to_and_reg_n_0_[30] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[31] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[31]),
        .Q(\sequence_to_and_reg_n_0_[31] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  CARRY4 \sequence_to_and_reg[31]_i_3 
       (.CI(\sequence_to_and_reg[29]_i_1_n_0 ),
        .CO({\NLW_sequence_to_and_reg[31]_i_3_CO_UNCONNECTED [3:1],\sequence_to_and_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,\sequence_to_and[31]_i_5_n_0 }),
        .O({\NLW_sequence_to_and_reg[31]_i_3_O_UNCONNECTED [3:2],data0_0[31:30]}),
        .S({1'b0,1'b0,\sequence_to_and[31]_i_6_n_0 ,\sequence_to_and[31]_i_7_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[3]),
        .Q(\sequence_to_and_reg_n_0_[3] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[4]),
        .Q(\sequence_to_and_reg_n_0_[4] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[5]),
        .Q(\sequence_to_and_reg_n_0_[5] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  CARRY4 \sequence_to_and_reg[5]_i_1 
       (.CI(1'b0),
        .CO({\sequence_to_and_reg[5]_i_1_n_0 ,\sequence_to_and_reg[5]_i_1_n_1 ,\sequence_to_and_reg[5]_i_1_n_2 ,\sequence_to_and_reg[5]_i_1_n_3 }),
        .CYINIT(sequence_to_and1),
        .DI({\sequence_to_and[5]_i_3_n_0 ,\sequence_to_and[5]_i_4_n_0 ,\sequence_to_and[5]_i_5_n_0 ,\sequence_to_and[5]_i_6_n_0 }),
        .O(data0_0[5:2]),
        .S({\sequence_to_and[5]_i_7_n_0 ,\sequence_to_and[5]_i_8_n_0 ,\sequence_to_and[5]_i_9_n_0 ,\sequence_to_and[5]_i_10_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[6] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[6]),
        .Q(\sequence_to_and_reg_n_0_[6] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[7] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[7]),
        .Q(\sequence_to_and_reg_n_0_[7] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[8] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[8]),
        .Q(\sequence_to_and_reg_n_0_[8] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sequence_to_and_reg[9] 
       (.C(clock_IBUF_BUFG),
        .CE(\sequence_to_and[31]_i_2_n_0 ),
        .D(data0_0[9]),
        .Q(\sequence_to_and_reg_n_0_[9] ),
        .R(\sequence_to_and[31]_i_1_n_0 ));
  CARRY4 \sequence_to_and_reg[9]_i_1 
       (.CI(\sequence_to_and_reg[5]_i_1_n_0 ),
        .CO({\sequence_to_and_reg[9]_i_1_n_0 ,\sequence_to_and_reg[9]_i_1_n_1 ,\sequence_to_and_reg[9]_i_1_n_2 ,\sequence_to_and_reg[9]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\sequence_to_and[9]_i_2_n_0 ,\sequence_to_and[9]_i_3_n_0 ,\sequence_to_and[9]_i_4_n_0 ,\sequence_to_and[9]_i_5_n_0 }),
        .O(data0_0[9:6]),
        .S({\sequence_to_and[9]_i_6_n_0 ,\sequence_to_and[9]_i_7_n_0 ,\sequence_to_and[9]_i_8_n_0 ,\sequence_to_and[9]_i_9_n_0 }));
  LUT6 #(
    .INIT(64'hF3CCF3CCF2CCF2CF)) 
    \state[0]_i_1 
       (.I0(\state_reg[2]_i_2_n_1 ),
        .I1(\state_reg_n_0_[1] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(p_0_in__0),
        .I5(\state_reg_n_0_[2] ),
        .O(\state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hCDFFCD00)) 
    \state[0]_i_1__0 
       (.I0(\state_reg[4] [2]),
        .I1(\state_reg[4] [0]),
        .I2(\state_reg[4] [1]),
        .I3(\state_reg[4] [4]),
        .I4(\state[0]_i_2_n_0 ),
        .O(\state_reg[2]_0 [0]));
  LUT6 #(
    .INIT(64'hC0C04070FFFCC3C3)) 
    \state[0]_i_2 
       (.I0(decoder_data_ready),
        .I1(\state_reg[2]_1 ),
        .I2(\state_reg[4] [2]),
        .I3(\i_reg[31]_0 ),
        .I4(\state_reg[4] [1]),
        .I5(\state_reg[4] [0]),
        .O(\state[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEE4AEE4E)) 
    \state[1]_i_1 
       (.I0(\state_reg_n_0_[1] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[2] ),
        .I4(\state_reg[2]_i_2_n_1 ),
        .O(\state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0003F2CF0003F2CC)) 
    \state[2]_i_1 
       (.I0(\state_reg[2]_i_2_n_1 ),
        .I1(\state_reg_n_0_[2] ),
        .I2(\state_reg_n_0_[1] ),
        .I3(\state_reg_n_0_[0] ),
        .I4(\state_reg_n_0_[3] ),
        .I5(p_0_in__0),
        .O(\state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h1001)) 
    \state[2]_i_10 
       (.I0(input_data_length[17]),
        .I1(input_data_length[16]),
        .I2(input_data_length[15]),
        .I3(bits_counter_reg__0[15]),
        .O(\state[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \state[2]_i_11 
       (.I0(bits_counter_reg__0[14]),
        .I1(input_data_length[14]),
        .I2(bits_counter_reg__0[13]),
        .I3(input_data_length[13]),
        .I4(input_data_length[12]),
        .I5(bits_counter_reg__0[12]),
        .O(\state[2]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \state[2]_i_12 
       (.I0(bits_counter_reg__0[11]),
        .I1(input_data_length[11]),
        .I2(bits_counter_reg__0[10]),
        .I3(input_data_length[10]),
        .I4(input_data_length[9]),
        .I5(bits_counter_reg[9]),
        .O(\state[2]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \state[2]_i_13 
       (.I0(bits_counter_reg[8]),
        .I1(input_data_length[8]),
        .I2(bits_counter_reg[7]),
        .I3(input_data_length[7]),
        .I4(input_data_length[6]),
        .I5(bits_counter_reg[6]),
        .O(\state[2]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \state[2]_i_14 
       (.I0(bits_counter_reg[5]),
        .I1(input_data_length[5]),
        .I2(bits_counter_reg[4]),
        .I3(input_data_length[4]),
        .I4(input_data_length[3]),
        .I5(bits_counter_reg[3]),
        .O(\state[2]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    \state[2]_i_15 
       (.I0(bits_counter_reg[2]),
        .I1(input_data_length[2]),
        .I2(bits_counter_reg[1]),
        .I3(input_data_length[1]),
        .I4(input_data_length[0]),
        .I5(bits_counter_reg[0]),
        .O(\state[2]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFF09F9FFFF09090)) 
    \state[2]_i_1__0 
       (.I0(\state_reg[4] [0]),
        .I1(\state_reg[4] [1]),
        .I2(\state_reg[4] [4]),
        .I3(\state[2]_i_2_n_0 ),
        .I4(\state_reg[2]_1 ),
        .I5(\state_reg[2]_2 ),
        .O(\state_reg[2]_0 [1]));
  LUT5 #(
    .INIT(32'h0F1F00FF)) 
    \state[2]_i_2 
       (.I0(CO),
        .I1(decoder_data_ready),
        .I2(\state_reg[4] [2]),
        .I3(\state_reg[4] [1]),
        .I4(\state_reg[4] [0]),
        .O(\state[2]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \state[2]_i_4__0 
       (.I0(input_data_length[30]),
        .I1(input_data_length[31]),
        .O(\state[2]_i_4__0_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \state[2]_i_5 
       (.I0(input_data_length[29]),
        .I1(input_data_length[28]),
        .I2(input_data_length[27]),
        .O(\state[2]_i_5_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \state[2]_i_6 
       (.I0(input_data_length[26]),
        .I1(input_data_length[25]),
        .I2(input_data_length[24]),
        .O(\state[2]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \state[2]_i_8 
       (.I0(input_data_length[23]),
        .I1(input_data_length[22]),
        .I2(input_data_length[21]),
        .O(\state[2]_i_8_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \state[2]_i_9 
       (.I0(input_data_length[20]),
        .I1(input_data_length[19]),
        .I2(input_data_length[18]),
        .O(\state[2]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFF0EFFF4FFF4FFF5)) 
    \state[3]_i_1 
       (.I0(\state_reg_n_0_[1] ),
        .I1(decoder_data_enable_reg),
        .I2(\state_reg_n_0_[2] ),
        .I3(\state[3]_i_3_n_0 ),
        .I4(\state_reg_n_0_[0] ),
        .I5(\state_reg_n_0_[3] ),
        .O(state));
  LUT5 #(
    .INIT(32'h99BB88CD)) 
    \state[3]_i_2 
       (.I0(\state_reg_n_0_[0] ),
        .I1(\state_reg_n_0_[2] ),
        .I2(p_0_in__0),
        .I3(\state_reg_n_0_[1] ),
        .I4(\state_reg_n_0_[3] ),
        .O(\state[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h888888888888888F)) 
    \state[3]_i_3 
       (.I0(decoded_characters_array_reg_i_3_n_0),
        .I1(\i_rep[6]_i_6_n_0 ),
        .I2(\decoded_chars_counter[31]_i_5_n_0 ),
        .I3(\sub_state_reg_n_0_[0] ),
        .I4(\state[3]_i_4_n_0 ),
        .I5(\i_rep[6]_i_5_n_0 ),
        .O(\state[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \state[3]_i_4 
       (.I0(\sub_state_reg_n_0_[3] ),
        .I1(\code_position_reg_rep[5]_i_4_n_0 ),
        .O(\state[3]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\state[0]_i_1_n_0 ),
        .Q(\state_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\state[1]_i_1_n_0 ),
        .Q(\state_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \state_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\state[2]_i_1_n_0 ),
        .Q(\state_reg_n_0_[2] ),
        .R(1'b0));
  CARRY4 \state_reg[2]_i_2 
       (.CI(\state_reg[2]_i_3_n_0 ),
        .CO({\NLW_state_reg[2]_i_2_CO_UNCONNECTED [3],\state_reg[2]_i_2_n_1 ,\state_reg[2]_i_2_n_2 ,\state_reg[2]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b1,1'b1,1'b1}),
        .O(\NLW_state_reg[2]_i_2_O_UNCONNECTED [3:0]),
        .S({1'b0,\state[2]_i_4__0_n_0 ,\state[2]_i_5_n_0 ,\state[2]_i_6_n_0 }));
  CARRY4 \state_reg[2]_i_3 
       (.CI(\state_reg[2]_i_7_n_0 ),
        .CO({\state_reg[2]_i_3_n_0 ,\state_reg[2]_i_3_n_1 ,\state_reg[2]_i_3_n_2 ,\state_reg[2]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_state_reg[2]_i_3_O_UNCONNECTED [3:0]),
        .S({\state[2]_i_8_n_0 ,\state[2]_i_9_n_0 ,\state[2]_i_10_n_0 ,\state[2]_i_11_n_0 }));
  CARRY4 \state_reg[2]_i_7 
       (.CI(1'b0),
        .CO({\state_reg[2]_i_7_n_0 ,\state_reg[2]_i_7_n_1 ,\state_reg[2]_i_7_n_2 ,\state_reg[2]_i_7_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b1,1'b1,1'b1,1'b1}),
        .O(\NLW_state_reg[2]_i_7_O_UNCONNECTED [3:0]),
        .S({\state[2]_i_12_n_0 ,\state[2]_i_13_n_0 ,\state[2]_i_14_n_0 ,\state[2]_i_15_n_0 }));
  FDRE #(
    .INIT(1'b1)) 
    \state_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(state),
        .D(\state[3]_i_2_n_0 ),
        .Q(\state_reg_n_0_[3] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFEFEFEFEFEFEFE)) 
    \sub_state[0]_i_1 
       (.I0(\sub_state[0]_i_2_n_0 ),
        .I1(\sub_state[0]_i_3_n_0 ),
        .I2(\sub_state[0]_i_4_n_0 ),
        .I3(\sub_state_reg_n_0_[1] ),
        .I4(\code_position_rep[5]_i_3_n_0 ),
        .I5(\sub_state_reg[0]_i_5_n_0 ),
        .O(\sub_state[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \sub_state[0]_i_10 
       (.I0(\code_position_reg_n_0_[10] ),
        .I1(\code_position_reg_n_0_[11] ),
        .O(\sub_state[0]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \sub_state[0]_i_11 
       (.I0(\code_position_reg_n_0_[8] ),
        .I1(\code_position_reg_n_0_[9] ),
        .O(\sub_state[0]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h2B0A)) 
    \sub_state[0]_i_12 
       (.I0(sub_state2[7]),
        .I1(character_length[6]),
        .I2(character_length[7]),
        .I3(sub_state2[6]),
        .O(\sub_state[0]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \sub_state[0]_i_13 
       (.I0(sub_state2[5]),
        .I1(character_length[5]),
        .I2(sub_state2[4]),
        .I3(character_length[4]),
        .O(\sub_state[0]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h2B0A)) 
    \sub_state[0]_i_14 
       (.I0(sub_state2[3]),
        .I1(character_length[2]),
        .I2(character_length[3]),
        .I3(sub_state2[2]),
        .O(\sub_state[0]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h2B0A)) 
    \sub_state[0]_i_15 
       (.I0(sub_state2[1]),
        .I1(character_length[0]),
        .I2(character_length[1]),
        .I3(sub_state2[0]),
        .O(\sub_state[0]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sub_state[0]_i_16 
       (.I0(sub_state2[7]),
        .I1(character_length[7]),
        .I2(sub_state2[6]),
        .I3(character_length[6]),
        .O(\sub_state[0]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sub_state[0]_i_17 
       (.I0(character_length[5]),
        .I1(sub_state2[5]),
        .I2(character_length[4]),
        .I3(sub_state2[4]),
        .O(\sub_state[0]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h8421)) 
    \sub_state[0]_i_18 
       (.I0(sub_state2[3]),
        .I1(sub_state2[2]),
        .I2(character_length[3]),
        .I3(character_length[2]),
        .O(\sub_state[0]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h8421)) 
    \sub_state[0]_i_19 
       (.I0(sub_state2[1]),
        .I1(sub_state2[0]),
        .I2(character_length[1]),
        .I3(character_length[0]),
        .O(\sub_state[0]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \sub_state[0]_i_2 
       (.I0(\sub_state_reg_n_0_[1] ),
        .I1(\sub_state_reg_n_0_[2] ),
        .I2(\sub_state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[1] ),
        .I4(\sub_state_reg_n_0_[0] ),
        .I5(\bit_index_rep[7]_i_4_n_0 ),
        .O(\sub_state[0]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \sub_state[0]_i_20 
       (.I0(\symbol_amount_var_reg_n_0_[5] ),
        .I1(\code_position_reg_n_0_[5] ),
        .I2(\symbol_amount_var_reg_n_0_[4] ),
        .I3(\code_position_reg_n_0_[4] ),
        .O(\sub_state[0]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h22B2)) 
    \sub_state[0]_i_21 
       (.I0(\symbol_amount_var_reg_n_0_[1] ),
        .I1(\code_position_reg_n_0_[1] ),
        .I2(\symbol_amount_var_reg_n_0_[0] ),
        .I3(\code_position_reg_n_0_[0] ),
        .O(\sub_state[0]_i_21_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \sub_state[0]_i_22 
       (.I0(\code_position_reg_n_0_[6] ),
        .I1(\code_position_reg_n_0_[7] ),
        .O(\sub_state[0]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sub_state[0]_i_23 
       (.I0(\code_position_reg_n_0_[5] ),
        .I1(\symbol_amount_var_reg_n_0_[5] ),
        .I2(\code_position_reg_n_0_[4] ),
        .I3(\symbol_amount_var_reg_n_0_[4] ),
        .O(\sub_state[0]_i_23_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \sub_state[0]_i_24 
       (.I0(\code_position_reg_n_0_[2] ),
        .I1(\code_position_reg_n_0_[3] ),
        .O(\sub_state[0]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \sub_state[0]_i_25 
       (.I0(\code_position_reg_n_0_[1] ),
        .I1(\symbol_amount_var_reg_n_0_[1] ),
        .I2(\code_position_reg_n_0_[0] ),
        .I3(\symbol_amount_var_reg_n_0_[0] ),
        .O(\sub_state[0]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h00000000000000AE)) 
    \sub_state[0]_i_3 
       (.I0(\sub_state_reg_n_0_[2] ),
        .I1(\code_position_reg_rep[5]_i_4_n_0 ),
        .I2(\sub_state_reg_n_0_[1] ),
        .I3(\bit_index_rep[7]_i_3_n_0 ),
        .I4(\bit_index_rep[7]_i_4_n_0 ),
        .I5(\sub_state_reg_n_0_[3] ),
        .O(\sub_state[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000700000000000)) 
    \sub_state[0]_i_4 
       (.I0(\sub_state_reg[0]_i_6_n_0 ),
        .I1(\sub_state_reg[1]_i_3_n_1 ),
        .I2(\sub_state_reg_n_0_[1] ),
        .I3(\sub_state_reg_n_0_[0] ),
        .I4(\sub_state_reg_n_0_[2] ),
        .I5(\code_position_rep[5]_i_5_n_0 ),
        .O(\sub_state[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \sub_state[0]_i_8 
       (.I0(\code_position_reg_n_0_[14] ),
        .I1(\code_position_reg_n_0_[15] ),
        .O(\sub_state[0]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \sub_state[0]_i_9 
       (.I0(\code_position_reg_n_0_[12] ),
        .I1(\code_position_reg_n_0_[13] ),
        .O(\sub_state[0]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEFEAAAB)) 
    \sub_state[1]_i_1 
       (.I0(\sub_state[1]_i_2_n_0 ),
        .I1(\sub_state_reg_n_0_[0] ),
        .I2(\sub_state_reg_n_0_[1] ),
        .I3(\code_position_reg_rep[5]_i_4_n_0 ),
        .I4(\sub_state_reg_n_0_[3] ),
        .I5(\sub_state_reg_n_0_[2] ),
        .O(\sub_state[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h820A)) 
    \sub_state[1]_i_10 
       (.I0(\sub_state[1]_i_20_n_0 ),
        .I1(sub_state3[20]),
        .I2(\code_value_reg_n_0_[20] ),
        .I3(\sequence_to_and_reg_n_0_[20] ),
        .O(\sub_state[1]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h820A)) 
    \sub_state[1]_i_11 
       (.I0(\sub_state[1]_i_21_n_0 ),
        .I1(sub_state3[17]),
        .I2(\code_value_reg_n_0_[17] ),
        .I3(\sequence_to_and_reg_n_0_[17] ),
        .O(\sub_state[1]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h820A)) 
    \sub_state[1]_i_12 
       (.I0(\sub_state[1]_i_22_n_0 ),
        .I1(sub_state3[14]),
        .I2(\code_value_reg_n_0_[14] ),
        .I3(\sequence_to_and_reg_n_0_[14] ),
        .O(\sub_state[1]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h9500009500950095)) 
    \sub_state[1]_i_13 
       (.I0(\code_value_reg_n_0_[27] ),
        .I1(sub_state3[27]),
        .I2(\sequence_to_and_reg_n_0_[27] ),
        .I3(\code_value_reg_n_0_[28] ),
        .I4(sub_state3[28]),
        .I5(\sequence_to_and_reg_n_0_[28] ),
        .O(\sub_state[1]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h9500009500950095)) 
    \sub_state[1]_i_14 
       (.I0(\code_value_reg_n_0_[24] ),
        .I1(sub_state3[24]),
        .I2(\sequence_to_and_reg_n_0_[24] ),
        .I3(\code_value_reg_n_0_[25] ),
        .I4(sub_state3[25]),
        .I5(\sequence_to_and_reg_n_0_[25] ),
        .O(\sub_state[1]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h820A)) 
    \sub_state[1]_i_15 
       (.I0(\sub_state[1]_i_23_n_0 ),
        .I1(sub_state3[11]),
        .I2(\code_value_reg_n_0_[11] ),
        .I3(\sequence_to_and_reg_n_0_[11] ),
        .O(\sub_state[1]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h820A)) 
    \sub_state[1]_i_16 
       (.I0(\sub_state[1]_i_24_n_0 ),
        .I1(sub_state3[8]),
        .I2(\code_value_reg_n_0_[8] ),
        .I3(\sequence_to_and_reg_n_0_[8] ),
        .O(\sub_state[1]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h820A)) 
    \sub_state[1]_i_17 
       (.I0(\sub_state[1]_i_25_n_0 ),
        .I1(sub_state3[5]),
        .I2(\code_value_reg_n_0_[5] ),
        .I3(\sequence_to_and_reg_n_0_[5] ),
        .O(\sub_state[1]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h820A)) 
    \sub_state[1]_i_18 
       (.I0(\sub_state[1]_i_26_n_0 ),
        .I1(sub_state3[2]),
        .I2(\code_value_reg_n_0_[2] ),
        .I3(\sequence_to_and_reg_n_0_[2] ),
        .O(\sub_state[1]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h9500009500950095)) 
    \sub_state[1]_i_19 
       (.I0(\code_value_reg_n_0_[21] ),
        .I1(sub_state3[21]),
        .I2(\sequence_to_and_reg_n_0_[21] ),
        .I3(\code_value_reg_n_0_[22] ),
        .I4(sub_state3[22]),
        .I5(\sequence_to_and_reg_n_0_[22] ),
        .O(\sub_state[1]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hAEBEEEFEAABAEAFA)) 
    \sub_state[1]_i_2 
       (.I0(\sub_state[2]_i_2_n_0 ),
        .I1(\sub_state_reg_n_0_[1] ),
        .I2(\sub_state_reg_n_0_[0] ),
        .I3(\code_value[31]_i_5_n_0 ),
        .I4(\sub_state_reg[1]_i_3_n_1 ),
        .I5(\sub_state_reg[0]_i_5_n_0 ),
        .O(\sub_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h9500009500950095)) 
    \sub_state[1]_i_20 
       (.I0(\code_value_reg_n_0_[18] ),
        .I1(sub_state3[18]),
        .I2(\sequence_to_and_reg_n_0_[18] ),
        .I3(\code_value_reg_n_0_[19] ),
        .I4(sub_state3[19]),
        .I5(\sequence_to_and_reg_n_0_[19] ),
        .O(\sub_state[1]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h9500009500950095)) 
    \sub_state[1]_i_21 
       (.I0(\code_value_reg_n_0_[15] ),
        .I1(sub_state3[15]),
        .I2(\sequence_to_and_reg_n_0_[15] ),
        .I3(\code_value_reg_n_0_[16] ),
        .I4(sub_state3[16]),
        .I5(\sequence_to_and_reg_n_0_[16] ),
        .O(\sub_state[1]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h9500009500950095)) 
    \sub_state[1]_i_22 
       (.I0(\code_value_reg_n_0_[12] ),
        .I1(sub_state3[12]),
        .I2(\sequence_to_and_reg_n_0_[12] ),
        .I3(\code_value_reg_n_0_[13] ),
        .I4(sub_state3[13]),
        .I5(\sequence_to_and_reg_n_0_[13] ),
        .O(\sub_state[1]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h9500009500950095)) 
    \sub_state[1]_i_23 
       (.I0(\code_value_reg_n_0_[9] ),
        .I1(sub_state3[9]),
        .I2(\sequence_to_and_reg_n_0_[9] ),
        .I3(\code_value_reg_n_0_[10] ),
        .I4(sub_state3[10]),
        .I5(\sequence_to_and_reg_n_0_[10] ),
        .O(\sub_state[1]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h9500009500950095)) 
    \sub_state[1]_i_24 
       (.I0(\code_value_reg_n_0_[6] ),
        .I1(sub_state3[6]),
        .I2(\sequence_to_and_reg_n_0_[6] ),
        .I3(\code_value_reg_n_0_[7] ),
        .I4(sub_state3[7]),
        .I5(\sequence_to_and_reg_n_0_[7] ),
        .O(\sub_state[1]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'h9500009500950095)) 
    \sub_state[1]_i_25 
       (.I0(\code_value_reg_n_0_[3] ),
        .I1(sub_state3[3]),
        .I2(\sequence_to_and_reg_n_0_[3] ),
        .I3(\code_value_reg_n_0_[4] ),
        .I4(sub_state3[4]),
        .I5(\sequence_to_and_reg_n_0_[4] ),
        .O(\sub_state[1]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h9500009500950095)) 
    \sub_state[1]_i_26 
       (.I0(\code_value_reg_n_0_[0] ),
        .I1(sub_state3[0]),
        .I2(\sequence_to_and_reg_n_0_[0] ),
        .I3(\code_value_reg_n_0_[1] ),
        .I4(sub_state3[1]),
        .I5(\sequence_to_and_reg_n_0_[1] ),
        .O(\sub_state[1]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'h8700000000878787)) 
    \sub_state[1]_i_5 
       (.I0(\sequence_to_and_reg_n_0_[31] ),
        .I1(sub_state3[31]),
        .I2(\code_value_reg_n_0_[31] ),
        .I3(\sequence_to_and_reg_n_0_[30] ),
        .I4(sub_state3[30]),
        .I5(\code_value_reg_n_0_[30] ),
        .O(\sub_state[1]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h820A)) 
    \sub_state[1]_i_6 
       (.I0(\sub_state[1]_i_13_n_0 ),
        .I1(sub_state3[29]),
        .I2(\code_value_reg_n_0_[29] ),
        .I3(\sequence_to_and_reg_n_0_[29] ),
        .O(\sub_state[1]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h820A)) 
    \sub_state[1]_i_7 
       (.I0(\sub_state[1]_i_14_n_0 ),
        .I1(sub_state3[26]),
        .I2(\code_value_reg_n_0_[26] ),
        .I3(\sequence_to_and_reg_n_0_[26] ),
        .O(\sub_state[1]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h820A)) 
    \sub_state[1]_i_9 
       (.I0(\sub_state[1]_i_19_n_0 ),
        .I1(sub_state3[23]),
        .I2(\code_value_reg_n_0_[23] ),
        .I3(\sequence_to_and_reg_n_0_[23] ),
        .O(\sub_state[1]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFF77EE89)) 
    \sub_state[2]_i_1 
       (.I0(\sub_state_reg_n_0_[0] ),
        .I1(\sub_state_reg_n_0_[1] ),
        .I2(\code_position_reg_rep[5]_i_4_n_0 ),
        .I3(\sub_state_reg_n_0_[3] ),
        .I4(\sub_state_reg_n_0_[2] ),
        .I5(\sub_state[2]_i_2_n_0 ),
        .O(\sub_state[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFEFF)) 
    \sub_state[2]_i_2 
       (.I0(\state_reg_n_0_[2] ),
        .I1(\state_reg_n_0_[0] ),
        .I2(\state_reg_n_0_[3] ),
        .I3(\state_reg_n_0_[1] ),
        .O(\sub_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000005FE00000000)) 
    \sub_state[3]_i_1 
       (.I0(\i_rep[6]_i_5_n_0 ),
        .I1(\code_position_reg_rep[5]_i_4_n_0 ),
        .I2(\sub_state_reg_n_0_[0] ),
        .I3(\sub_state_reg_n_0_[3] ),
        .I4(\bit_index_rep[7]_i_4_n_0 ),
        .I5(\state_reg_n_0_[1] ),
        .O(\sub_state[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h1110000000000000)) 
    \sub_state[3]_i_2 
       (.I0(\sub_state_reg_n_0_[1] ),
        .I1(\sub_state_reg_n_0_[2] ),
        .I2(\sub_state[3]_i_3_n_0 ),
        .I3(\sub_state[3]_i_4_n_0 ),
        .I4(\sub_state_reg_n_0_[0] ),
        .I5(\code_position_rep[5]_i_5_n_0 ),
        .O(\sub_state[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \sub_state[3]_i_3 
       (.I0(code_index[7]),
        .I1(code_index[5]),
        .I2(code_index[6]),
        .I3(code_index[4]),
        .O(\sub_state[3]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \sub_state[3]_i_4 
       (.I0(code_index[3]),
        .I1(code_index[2]),
        .I2(code_index[1]),
        .I3(code_index[0]),
        .O(\sub_state[3]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sub_state_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(\sub_state[3]_i_1_n_0 ),
        .D(\sub_state[0]_i_1_n_0 ),
        .Q(\sub_state_reg_n_0_[0] ),
        .R(1'b0));
  CARRY4 \sub_state_reg[0]_i_5 
       (.CI(\sub_state_reg[0]_i_7_n_0 ),
        .CO({\sub_state_reg[0]_i_5_n_0 ,\sub_state_reg[0]_i_5_n_1 ,\sub_state_reg[0]_i_5_n_2 ,\sub_state_reg[0]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_sub_state_reg[0]_i_5_O_UNCONNECTED [3:0]),
        .S({\sub_state[0]_i_8_n_0 ,\sub_state[0]_i_9_n_0 ,\sub_state[0]_i_10_n_0 ,\sub_state[0]_i_11_n_0 }));
  CARRY4 \sub_state_reg[0]_i_6 
       (.CI(1'b0),
        .CO({\sub_state_reg[0]_i_6_n_0 ,\sub_state_reg[0]_i_6_n_1 ,\sub_state_reg[0]_i_6_n_2 ,\sub_state_reg[0]_i_6_n_3 }),
        .CYINIT(1'b0),
        .DI({\sub_state[0]_i_12_n_0 ,\sub_state[0]_i_13_n_0 ,\sub_state[0]_i_14_n_0 ,\sub_state[0]_i_15_n_0 }),
        .O(\NLW_sub_state_reg[0]_i_6_O_UNCONNECTED [3:0]),
        .S({\sub_state[0]_i_16_n_0 ,\sub_state[0]_i_17_n_0 ,\sub_state[0]_i_18_n_0 ,\sub_state[0]_i_19_n_0 }));
  CARRY4 \sub_state_reg[0]_i_7 
       (.CI(1'b0),
        .CO({\sub_state_reg[0]_i_7_n_0 ,\sub_state_reg[0]_i_7_n_1 ,\sub_state_reg[0]_i_7_n_2 ,\sub_state_reg[0]_i_7_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\sub_state[0]_i_20_n_0 ,1'b0,\sub_state[0]_i_21_n_0 }),
        .O(\NLW_sub_state_reg[0]_i_7_O_UNCONNECTED [3:0]),
        .S({\sub_state[0]_i_22_n_0 ,\sub_state[0]_i_23_n_0 ,\sub_state[0]_i_24_n_0 ,\sub_state[0]_i_25_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sub_state_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(\sub_state[3]_i_1_n_0 ),
        .D(\sub_state[1]_i_1_n_0 ),
        .Q(\sub_state_reg_n_0_[1] ),
        .R(1'b0));
  CARRY4 \sub_state_reg[1]_i_3 
       (.CI(\sub_state_reg[1]_i_4_n_0 ),
        .CO({\NLW_sub_state_reg[1]_i_3_CO_UNCONNECTED [3],\sub_state_reg[1]_i_3_n_1 ,\sub_state_reg[1]_i_3_n_2 ,\sub_state_reg[1]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_sub_state_reg[1]_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,\sub_state[1]_i_5_n_0 ,\sub_state[1]_i_6_n_0 ,\sub_state[1]_i_7_n_0 }));
  CARRY4 \sub_state_reg[1]_i_4 
       (.CI(\sub_state_reg[1]_i_8_n_0 ),
        .CO({\sub_state_reg[1]_i_4_n_0 ,\sub_state_reg[1]_i_4_n_1 ,\sub_state_reg[1]_i_4_n_2 ,\sub_state_reg[1]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_sub_state_reg[1]_i_4_O_UNCONNECTED [3:0]),
        .S({\sub_state[1]_i_9_n_0 ,\sub_state[1]_i_10_n_0 ,\sub_state[1]_i_11_n_0 ,\sub_state[1]_i_12_n_0 }));
  CARRY4 \sub_state_reg[1]_i_8 
       (.CI(1'b0),
        .CO({\sub_state_reg[1]_i_8_n_0 ,\sub_state_reg[1]_i_8_n_1 ,\sub_state_reg[1]_i_8_n_2 ,\sub_state_reg[1]_i_8_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_sub_state_reg[1]_i_8_O_UNCONNECTED [3:0]),
        .S({\sub_state[1]_i_15_n_0 ,\sub_state[1]_i_16_n_0 ,\sub_state[1]_i_17_n_0 ,\sub_state[1]_i_18_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sub_state_reg[2] 
       (.C(clock_IBUF_BUFG),
        .CE(\sub_state[3]_i_1_n_0 ),
        .D(\sub_state[2]_i_1_n_0 ),
        .Q(\sub_state_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \sub_state_reg[3] 
       (.C(clock_IBUF_BUFG),
        .CE(\sub_state[3]_i_1_n_0 ),
        .D(\sub_state[3]_i_2_n_0 ),
        .Q(\sub_state_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \symbol_amount_var_reg[0] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(1'b0),
        .Q(\symbol_amount_var_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_amount_var_reg[1] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(1'b1),
        .Q(\symbol_amount_var_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_amount_var_reg[4] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(1'b1),
        .Q(\symbol_amount_var_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \symbol_amount_var_reg[5] 
       (.C(clock_IBUF_BUFG),
        .CE(codes_lengths_reg_0_63_0_2_i_1_n_0),
        .D(1'b1),
        .Q(\symbol_amount_var_reg_n_0_[5] ),
        .R(1'b0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1704 symbols_reg_0_63_3_5
       (.ADDRA(code_position_reg_rep__0__0),
        .ADDRB(code_position_reg_rep__0__0),
        .ADDRC(code_position_reg_rep__0__0),
        .ADDRD(init_iterator_reg),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(ascii_symbols),
        .DID(1'b0),
        .DOA(p_1_in[3]),
        .DOB(p_1_in[4]),
        .DOC(p_1_in[5]),
        .DOD(NLW_symbols_reg_0_63_3_5_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(codes_lengths_reg_0_63_0_2_i_1_n_0));
  (* INIT_A = "64'h0000000000000000" *) 
  (* INIT_B = "64'h0000000000000000" *) 
  (* INIT_C = "64'h0000000000000000" *) 
  (* INIT_D = "64'h0000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM64M_HD1705 symbols_reg_0_63_6_7
       (.ADDRA(code_position_reg_rep__0__0),
        .ADDRB(code_position_reg_rep__0__0),
        .ADDRC(code_position_reg_rep__0__0),
        .ADDRD(init_iterator_reg),
        .DIA(1'b0),
        .DIB(1'b0),
        .DIC(1'b0),
        .DID(1'b0),
        .DOA(p_1_in[6]),
        .DOB(p_1_in[7]),
        .DOC(p_1_in[2]),
        .DOD(NLW_symbols_reg_0_63_6_7_DOD_UNCONNECTED),
        .WCLK(clock_IBUF_BUFG),
        .WE(codes_lengths_reg_0_63_0_2_i_1_n_0));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
